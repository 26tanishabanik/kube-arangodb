## backup/rbac.yaml



## Cluster role granting access to ArangoDeployment resources.
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: arango-backups
rules:
- apiGroups: ["database.arangodb.com"]
  resources: ["arangobackuppolicies", "arangobackups"]
  verbs: ["*"]

---

## Cluster role granting access to all resources needed by the ArangoDeployment operator.
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: arango-backup-operator
rules:
- apiGroups: ["database.arangodb.com"]
  resources: ["arangobackuppolicies", "arangobackups", "arangobackups/status"]
  verbs: ["*"]


---

## Bind the cluster role granting access to ArangoDeployment resources
## to the default service account of the configured namespace.
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: arango-backups
  namespace: test-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: arango-backups
subjects:
- kind: ServiceAccount
  name: default
  namespace: test-namespace

---

## Bind the cluster role granting access to all resources needed by 
## the ArangoDeployment operator to the default service account
## the is being used to run the operator deployment.
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: arango-backup-operator-test-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: arango-backup-operator
subjects:
- kind: ServiceAccount
  name: default
  namespace: test-namespace




---

## backup/deployment.yaml


apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: arango-backup-operator
  namespace: test-namespace
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: arango-backup-operator
        app: arango-database-admin-operator
    spec:
      serviceAccountName: default
      containers:
      - name: operator
        imagePullPolicy: IfNotPresent
        image: eu.gcr.io/hale-ivy-241313/kube-arangodb@sha256:6687287f6bca75ca5472f0d6c06503051aae33b0fda63c2b23ae6e7f811b575e
        args:
          - --operator.backup
        env:
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: metrics
          containerPort: 8528
        livenessProbe:
          httpGet:
            path: /health
            port: 8528
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready/backup
            port: 8528
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 5
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 5



---

## backup/service.yaml


apiVersion: v1
kind: Service
metadata:
  name: arango-backup-operator
  namespace: test-namespace
  labels:
    name: arango-backup-operator
    app: arango-backup-operator
spec:
  ports:
  - name: server
    port: 8528
    protocol: TCP
    targetPort: 8528
  selector:
    name: arango-backup-operator
    app: arango-backup-operator
    role: leader
  type: ClusterIP


