{
  "v1": {
    "openAPIV3Schema": {
      "type": "object",
      "properties": {
        "spec": {
          "type": "object",
          "properties": {
            "ClusterDomain": {
              "description": "ClusterDomain define domain used in the kubernetes cluster.\nRequired only of domain is not set to default (cluster.local)",
              "type": "string",
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specclusterdomain-"
              }
            },
            "agents": {
              "description": "Agents contains specification for Agency pods running in deployment mode `Cluster` or `ActiveFailover`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsaffinity-"
                  }
                },
                "allowMemberRecreation": {
                  "description": "AllowMemberRecreation allows to recreate member.\nThis setting changes the member recreation logic based on group:\n- For Sync Masters, Sync Workers, Coordinator and DB-Servers it determines if a member can be recreated in case of failure (default `true`)\n- For Agents and Single this value is hardcoded to `false` and the value provided in spec is ignored.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsallowmemberrecreation-"
                  }
                },
                "annotations": {
                  "description": "Annotations specified the annotations added to Pods in this group.\nAnnotations are merged with `spec.annotations`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsannotations-"
                  }
                },
                "annotationsIgnoreList": {
                  "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsannotationsignorelist-"
                  }
                },
                "annotationsMode": {
                  "description": "AnnotationsMode Define annotations mode which should be use while overriding annotations",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsannotationsmode-"
                  }
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsantiaffinity-"
                  }
                },
                "args": {
                  "description": "Args setting specifies additional command-line arguments passed to all servers of this group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsargs-"
                  }
                },
                "count": {
                  "description": "Count setting specifies the number of servers to start for the given group.\nFor the Agent group, this value must be a positive, odd number.\nThe default value is `3` for all groups except `single` (there the default is `1`\nfor `spec.mode: Single` and `2` for `spec.mode: ActiveFailover`).\nFor the `syncworkers` group, it is highly recommended to use the same number\nas for the `dbservers` group.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentscount-"
                  }
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsentrypoint-"
                  }
                },
                "envs": {
                  "description": "Envs allow to specify additional envs in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsenvsname-"
                        }
                      },
                      "value": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsenvsvalue-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsenvs-"
                  }
                },
                "ephemeralVolumes": {
                  "description": "EphemeralVolumes keeps information about ephemeral volumes.",
                  "type": "object",
                  "properties": {
                    "apps": {
                      "description": "Apps define apps ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsephemeralvolumesappssize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsephemeralvolumesapps-"
                      }
                    },
                    "temp": {
                      "description": "Temp define temp ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsephemeralvolumestempsize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsephemeralvolumestemp-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsephemeralvolumes-"
                  }
                },
                "exporterPort": {
                  "description": "ExporterPort define Port used by exporter",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsexporterport-"
                  }
                },
                "extendedRotationCheck": {
                  "description": "ExtendedRotationCheck extend checks for rotation",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsextendedrotationcheck-"
                  }
                },
                "externalPortEnabled": {
                  "description": "ExternalPortEnabled if external port should be enabled. If is set to false, ports needs to be exposed via sidecar. Only for ArangoD members",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsexternalportenabled-"
                  }
                },
                "indexMethod": {
                  "description": "IndexMethod define group Indexing method",
                  "type": "string",
                  "enum": [
                    "random",
                    "ordered"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsindexmethod-"
                  }
                },
                "initContainers": {
                  "description": "InitContainers Init containers specification",
                  "type": "object",
                  "properties": {
                    "containers": {
                      "description": "Containers contains list of containers",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "fieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "apiVersion": {
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resourceFieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "containerName": {
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "type": "object",
                                          "properties": {
                                            "": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "resource": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "secretKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "envFrom": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "type": "string"
                          },
                          "lifecycle": {
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "type": "string"
                                },
                                "hostPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "protocol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "readinessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityContext": {
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "drop": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "type": "boolean"
                              },
                              "procMount": {
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "type": "object",
                                "properties": {
                                  "localhostProfile": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "startupProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "stdin": {
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "type": "string"
                          },
                          "tty": {
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumeMounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mountPath": {
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "workingDir": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsinitcontainerscontainers-"
                      }
                    },
                    "mode": {
                      "description": "Mode keep container replace mode",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsinitcontainersmode-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsinitcontainers-"
                  }
                },
                "internalPort": {
                  "description": "InternalPort define port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsinternalport-"
                  }
                },
                "internalPortProtocol": {
                  "description": "InternalPortProtocol define protocol of port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsinternalportprotocol-"
                  }
                },
                "labels": {
                  "description": "Labels specified the labels added to Pods in this group.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentslabels-"
                  }
                },
                "labelsIgnoreList": {
                  "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentslabelsignorelist-"
                  }
                },
                "labelsMode": {
                  "description": "LabelsMode Define labels mode which should be use while overriding labels",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentslabelsmode-"
                  }
                },
                "maxCount": {
                  "description": "MaxCount specifies a maximum for the count of servers. If set, a specification is invalid if `count \u003e maxCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsmaxcount-"
                  }
                },
                "memoryReservation": {
                  "description": "MemoryReservation determines system reservation of memory while calculating `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` value.\nIf this field is set, `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` is reduced by specified value in percents.\nAccepted Range \u003c0, 50\u003e. If value is outside accepted range, it is adjusted to the closest value.",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsmemoryreservation-"
                  }
                },
                "minCount": {
                  "description": "MinCount specifies a minimum for the count of servers. If set, a specification is invalid if `count \u003c minCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsmincount-"
                  }
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsnodeaffinity-"
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector setting specifies a set of labels to be used as `nodeSelector` for Pods of this node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsnodeselector-"
                  }
                },
                "numactl": {
                  "description": "Numactl define Numactl options passed to the process",
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "Args define list of the numactl process",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsnumactlargs-"
                      }
                    },
                    "enabled": {
                      "description": "Enabled define if numactl should be enabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsnumactlenabled-"
                      }
                    },
                    "path": {
                      "description": "Path define numactl path within the container",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsnumactlpath-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsnumactl-"
                  }
                },
                "overrideDetectedNumberOfCores": {
                  "description": "OverrideDetectedNumberOfCores determines if number of cores should be overridden based on values in resources.\nIf is set to true and Container CPU Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES` to the value from the Container CPU Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsoverridedetectednumberofcores-"
                  }
                },
                "overrideDetectedTotalMemory": {
                  "description": "OverrideDetectedTotalMemory determines if memory should be overridden based on values in resources.\nIf is set to true and Container Memory Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` to the value from the Container Memory Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsoverridedetectedtotalmemory-"
                  }
                },
                "podModes": {
                  "description": "PodModes define additional modes enabled on the Pod level",
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentspodmodesnetwork-"
                      }
                    },
                    "pid": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentspodmodespid-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentspodmodes-"
                  }
                },
                "port": {
                  "description": "Port define Port used by member",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsport-"
                  }
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name\nWill be forwarded to the pod spec.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentspriorityclassname-"
                  }
                },
                "probes": {
                  "description": "Probes specifies additional behaviour for probes",
                  "type": "object",
                  "properties": {
                    "ReadinessProbeDisabled": {
                      "description": "OldReadinessProbeDisabled if true readinessProbes are disabled\nDeprecated: This field is deprecated, keept only for backward compatibility.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesreadinessprobedisabled-"
                      }
                    },
                    "livenessProbeDisabled": {
                      "description": "LivenessProbeDisabled if set to true, the operator does not generate a liveness probe for new pods belonging to this group",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobeslivenessprobedisabled-"
                      }
                    },
                    "livenessProbeSpec": {
                      "description": "LivenessProbeSpec override liveness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobeslivenessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobeslivenessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobeslivenessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobeslivenessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobeslivenessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobeslivenessprobespec-"
                      }
                    },
                    "readinessProbeDisabled": {
                      "description": "ReadinessProbeDisabled override flag for probe disabled in good manner (lowercase) with backward compatibility",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesreadinessprobedisabled-"
                      }
                    },
                    "readinessProbeSpec": {
                      "description": "ReadinessProbeSpec override readiness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesreadinessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesreadinessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesreadinessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesreadinessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesreadinessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesreadinessprobespec-"
                      }
                    },
                    "startupProbeDisabled": {
                      "description": "StartupProbeDisabled if true startupProbes are disabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesstartupprobedisabled-"
                      }
                    },
                    "startupProbeSpec": {
                      "description": "StartupProbeSpec override startup probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesstartupprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesstartupprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesstartupprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesstartupprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesstartupprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesstartupprobespec-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobes-"
                  }
                },
                "pvcResizeMode": {
                  "description": "VolumeResizeMode specified resize mode for PVCs and PVs",
                  "type": "string",
                  "enum": [
                    "runtime",
                    "rotate"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentspvcresizemode-"
                  }
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsresources-"
                  }
                },
                "schedulerName": {
                  "description": "SchedulerName define scheduler name used for group",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsschedulername-"
                  }
                },
                "securityContext": {
                  "description": "SecurityContext specifies additional `securityContext` settings in ArangoDB Pod definitions.\nThis is similar (but not fully compatible) to k8s SecurityContext definition.",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextaddcapabilities-"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextallowprivilegeescalation-"
                      }
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextdropallcapabilities-"
                      }
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextfsgroup-"
                      }
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextprivileged-"
                      }
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextreadonlyrootfilesystem-"
                      }
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextrunasgroup-"
                      }
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextrunasnonroot-"
                      }
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextrunasuser-"
                      }
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextselinuxoptions-"
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextseccompprofile-"
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextsupplementalgroups-"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextsysctls-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontext-"
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName setting specifies the `serviceAccountName` for the `Pods` created\nfor each server of this group. If empty, it defaults to using the\n`default` service account.\nUsing an alternative `ServiceAccount` is typically used to separate access rights.\nThe ArangoDB deployments need some very minimal access rights. With the\ndeployment of the operator, we grant the rights to 'get' all 'pod' resources.\nIf you are using a different service account, please grant these rights\nto that service account.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsserviceaccountname-"
                  }
                },
                "shutdownDelay": {
                  "description": "ShutdownDelay define how long operator should delay finalizer removal after shutdown",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsshutdowndelay-"
                  }
                },
                "shutdownMethod": {
                  "description": "ShutdownMethod describe procedure of member shutdown taken by Operator",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsshutdownmethod-"
                  }
                },
                "sidecarCoreNames": {
                  "description": "SidecarCoreNames is a list of sidecar containers which must run in the pod.\nSome names (e.g.: \"server\", \"worker\") are reserved, and they don't have any impact.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssidecarcorenames-"
                  }
                },
                "sidecars": {
                  "description": "Sidecars specifies a list of additional containers to be started",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "lifecycle": {
                        "type": "object",
                        "properties": {
                          "postStart": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "preStop": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "livenessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "ports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "type": "string"
                            },
                            "hostPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readinessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "type": "object",
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "startupProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "stdin": {
                        "type": "boolean"
                      },
                      "stdinOnce": {
                        "type": "boolean"
                      },
                      "terminationMessagePath": {
                        "type": "string"
                      },
                      "terminationMessagePolicy": {
                        "type": "string"
                      },
                      "tty": {
                        "type": "boolean"
                      },
                      "volumeDevices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "devicePath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssidecars-"
                  }
                },
                "storageClassName": {
                  "description": "StorageClassName specifies the classname for storage of the servers.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsstorageclassname-"
                  }
                },
                "terminationGracePeriodSeconds": {
                  "description": "TerminationGracePeriodSeconds override default TerminationGracePeriodSeconds for pods - via silent rotation",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsterminationgraceperiodseconds-"
                  }
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.\nBy default, suitable tolerations are set for the following keys with the `NoExecute` effect:\n- `node.kubernetes.io/not-ready`\n- `node.kubernetes.io/unreachable`\n- `node.alpha.kubernetes.io/unreachable` (will be removed in future version)\nFor more information on tolerations, consult the https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentstolerations-"
                  }
                },
                "volumeAllowShrink": {
                  "description": "Deprecated: VolumeAllowShrink allows shrink the volume",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumeallowshrink-"
                  }
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate specifies a volumeClaimTemplate used by operator to create to volume claims for pods of this group.\nThis setting is not available for group `coordinators`, `syncmasters` \u0026 `syncworkers`.\nThe default value describes a volume with `8Gi` storage, `ReadWriteOnce` access mode and volume mode set to `PersistentVolumeFilesystem`.\nIf this field is not set and `spec.\u003cgroup\u003e.resources.requests.storage` is set, then a default volume claim\nwith size as specified by `spec.\u003cgroup\u003e.resources.requests.storage` will be created. In that case `storage`\nand `iops` is not forwarded to the pods resource requirements.",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "creationTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "deletionTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generateName": {
                          "type": "string"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldsType": {
                                "type": "string"
                              },
                              "fieldsV1": {
                                "type": "object"
                              },
                              "manager": {
                                "type": "string"
                              },
                              "operation": {
                                "type": "string"
                              },
                              "subresource": {
                                "type": "string"
                              },
                              "time": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "blockOwnerDeletion": {
                                "type": "boolean"
                              },
                              "controller": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resourceVersion": {
                          "type": "string"
                        },
                        "selfLink": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataSource": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "dataSourceRef": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requests": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "storageClassName": {
                          "type": "string"
                        },
                        "volumeMode": {
                          "type": "string"
                        },
                        "volumeName": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allocatedResources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastProbeTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "lastTransitionTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "type": "string"
                        },
                        "resizeStatus": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumeclaimtemplate-"
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts define list of volume mounts mounted into server container",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "mountPropagation": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      },
                      "subPathExpr": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumemounts-"
                  }
                },
                "volumes": {
                  "description": "Volumes define list of volumes mounted to pod",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumesconfigmap-"
                        }
                      },
                      "emptyDir": {
                        "description": "EmptyDir",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string"
                          },
                          "sizeLimit": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumesemptydir-"
                        }
                      },
                      "hostPath": {
                        "description": "HostPath",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumeshostpath-"
                        }
                      },
                      "name": {
                        "description": "Name of volume",
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumesname-"
                        }
                      },
                      "persistentVolumeClaim": {
                        "description": "PersistentVolumeClaim",
                        "type": "object",
                        "properties": {
                          "claimName": {
                            "type": "string"
                          },
                          "readOnly": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumespersistentvolumeclaim-"
                        }
                      },
                      "secret": {
                        "description": "Secret which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumessecret-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumes-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagents-"
              }
            },
            "allowUnsafeUpgrade": {
              "description": "AllowUnsafeUpgrade determines if upgrade on missing member or with not in sync shards is allowed",
              "type": "boolean",
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specallowunsafeupgrade-"
              }
            },
            "annotations": {
              "description": "Annotations specifies the annotations added to all ArangoDeployment owned resources (pods, services, PVC’s, PDB’s).",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specannotations-"
              }
            },
            "annotationsIgnoreList": {
              "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
              "type": "array",
              "items": {
                "type": "string"
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specannotationsignorelist-"
              }
            },
            "annotationsMode": {
              "description": "AnnotationsMode defines annotations mode which should be use while overriding annotations.",
              "type": "string",
              "enum": [
                "disabled",
                "append",
                "replace"
              ],
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specannotationsmode-"
              }
            },
            "architecture": {
              "description": "Architecture defines the list of supported architectures.\nFirst element on the list is marked as default architecture.\nPossible values are:\n- `amd64`: Use processors with the x86-64 architecture.\n- `arm64`: Use processors with the 64-bit ARM architecture.\nThe setting expects a list of strings, but you should only specify a single\nlist item for the architecture, except when you want to migrate from one\narchitecture to the other. The first list item defines the new default\narchitecture for the deployment that you want to migrate to.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specarchitecture-"
              }
            },
            "auth": {
              "description": "Authentication holds authentication configuration settings",
              "type": "object",
              "properties": {
                "jwtSecretName": {
                  "description": "JWTSecretName setting specifies the name of a kubernetes `Secret` that contains\nthe JWT token used for accessing all ArangoDB servers.\nWhen no name is specified, it defaults to `\u003cdeployment-name\u003e-jwt`.\nTo disable authentication, set this value to `None`.\nIf you specify a name of a `Secret`, that secret must have the token\nin a data field named `token`.\nIf you specify a name of a `Secret` that does not exist, a random token is created\nand stored in a `Secret` with given name.\nChanging a JWT token results in restarting of a whole cluster.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specauthjwtsecretname-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specauth-"
              }
            },
            "bootstrap": {
              "description": "Bootstrap contains information for cluster bootstrapping",
              "type": "object",
              "properties": {
                "passwordSecretNames": {
                  "description": "PasswordSecretNames contains a map of username to password-secret-name\nThis setting specifies a secret name for the credentials per specific users.\nWhen a deployment is created the operator will setup the user accounts\naccording to the credentials given by the secret. If the secret doesn't exist\nthe operator creates a secret with a random password.\nThere are two magic values for the secret name:\n- `None` specifies no action. This disables root password randomization. This is the default value. (Thus the root password is empty - not recommended)\n- `Auto` specifies automatic name generation, which is `\u003cdeploymentname\u003e-root-password`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specbootstrappasswordsecretnames-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specbootstrap-"
              }
            },
            "chaos": {
              "description": "ChaosSpec can be used for chaos-monkey testing of your ArangoDeployment",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Enabled switches the chaos monkey for a deployment on or off.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specchaosenabled-"
                  }
                },
                "interval": {
                  "description": "Interval is the time between events",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specchaosinterval-"
                  }
                },
                "kill-pod-probability": {
                  "description": "KillPodProbability is the chance of a pod being killed during an event",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specchaoskill-pod-probability-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specchaos-"
              }
            },
            "communicationMethod": {
              "description": "CommunicationMethod define communication method used in deployment",
              "type": "string",
              "enum": [
                "headless",
                "dns",
                "short-dns",
                "headless-dns",
                "ip"
              ],
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccommunicationmethod-"
              }
            },
            "coordinators": {
              "description": "Coordinators contains specification for Coordinator pods running in deployment mode `Cluster` or `ActiveFailover`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsaffinity-"
                  }
                },
                "allowMemberRecreation": {
                  "description": "AllowMemberRecreation allows to recreate member.\nThis setting changes the member recreation logic based on group:\n- For Sync Masters, Sync Workers, Coordinator and DB-Servers it determines if a member can be recreated in case of failure (default `true`)\n- For Agents and Single this value is hardcoded to `false` and the value provided in spec is ignored.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsallowmemberrecreation-"
                  }
                },
                "annotations": {
                  "description": "Annotations specified the annotations added to Pods in this group.\nAnnotations are merged with `spec.annotations`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsannotations-"
                  }
                },
                "annotationsIgnoreList": {
                  "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsannotationsignorelist-"
                  }
                },
                "annotationsMode": {
                  "description": "AnnotationsMode Define annotations mode which should be use while overriding annotations",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsannotationsmode-"
                  }
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsantiaffinity-"
                  }
                },
                "args": {
                  "description": "Args setting specifies additional command-line arguments passed to all servers of this group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsargs-"
                  }
                },
                "count": {
                  "description": "Count setting specifies the number of servers to start for the given group.\nFor the Agent group, this value must be a positive, odd number.\nThe default value is `3` for all groups except `single` (there the default is `1`\nfor `spec.mode: Single` and `2` for `spec.mode: ActiveFailover`).\nFor the `syncworkers` group, it is highly recommended to use the same number\nas for the `dbservers` group.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorscount-"
                  }
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsentrypoint-"
                  }
                },
                "envs": {
                  "description": "Envs allow to specify additional envs in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsenvsname-"
                        }
                      },
                      "value": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsenvsvalue-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsenvs-"
                  }
                },
                "ephemeralVolumes": {
                  "description": "EphemeralVolumes keeps information about ephemeral volumes.",
                  "type": "object",
                  "properties": {
                    "apps": {
                      "description": "Apps define apps ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsephemeralvolumesappssize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsephemeralvolumesapps-"
                      }
                    },
                    "temp": {
                      "description": "Temp define temp ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsephemeralvolumestempsize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsephemeralvolumestemp-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsephemeralvolumes-"
                  }
                },
                "exporterPort": {
                  "description": "ExporterPort define Port used by exporter",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsexporterport-"
                  }
                },
                "extendedRotationCheck": {
                  "description": "ExtendedRotationCheck extend checks for rotation",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsextendedrotationcheck-"
                  }
                },
                "externalPortEnabled": {
                  "description": "ExternalPortEnabled if external port should be enabled. If is set to false, ports needs to be exposed via sidecar. Only for ArangoD members",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsexternalportenabled-"
                  }
                },
                "indexMethod": {
                  "description": "IndexMethod define group Indexing method",
                  "type": "string",
                  "enum": [
                    "random",
                    "ordered"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsindexmethod-"
                  }
                },
                "initContainers": {
                  "description": "InitContainers Init containers specification",
                  "type": "object",
                  "properties": {
                    "containers": {
                      "description": "Containers contains list of containers",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "fieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "apiVersion": {
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resourceFieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "containerName": {
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "type": "object",
                                          "properties": {
                                            "": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "resource": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "secretKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "envFrom": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "type": "string"
                          },
                          "lifecycle": {
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "type": "string"
                                },
                                "hostPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "protocol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "readinessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityContext": {
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "drop": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "type": "boolean"
                              },
                              "procMount": {
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "type": "object",
                                "properties": {
                                  "localhostProfile": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "startupProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "stdin": {
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "type": "string"
                          },
                          "tty": {
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumeMounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mountPath": {
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "workingDir": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsinitcontainerscontainers-"
                      }
                    },
                    "mode": {
                      "description": "Mode keep container replace mode",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsinitcontainersmode-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsinitcontainers-"
                  }
                },
                "internalPort": {
                  "description": "InternalPort define port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsinternalport-"
                  }
                },
                "internalPortProtocol": {
                  "description": "InternalPortProtocol define protocol of port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsinternalportprotocol-"
                  }
                },
                "labels": {
                  "description": "Labels specified the labels added to Pods in this group.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorslabels-"
                  }
                },
                "labelsIgnoreList": {
                  "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorslabelsignorelist-"
                  }
                },
                "labelsMode": {
                  "description": "LabelsMode Define labels mode which should be use while overriding labels",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorslabelsmode-"
                  }
                },
                "maxCount": {
                  "description": "MaxCount specifies a maximum for the count of servers. If set, a specification is invalid if `count \u003e maxCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsmaxcount-"
                  }
                },
                "memoryReservation": {
                  "description": "MemoryReservation determines system reservation of memory while calculating `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` value.\nIf this field is set, `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` is reduced by specified value in percents.\nAccepted Range \u003c0, 50\u003e. If value is outside accepted range, it is adjusted to the closest value.",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsmemoryreservation-"
                  }
                },
                "minCount": {
                  "description": "MinCount specifies a minimum for the count of servers. If set, a specification is invalid if `count \u003c minCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsmincount-"
                  }
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsnodeaffinity-"
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector setting specifies a set of labels to be used as `nodeSelector` for Pods of this node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsnodeselector-"
                  }
                },
                "numactl": {
                  "description": "Numactl define Numactl options passed to the process",
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "Args define list of the numactl process",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsnumactlargs-"
                      }
                    },
                    "enabled": {
                      "description": "Enabled define if numactl should be enabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsnumactlenabled-"
                      }
                    },
                    "path": {
                      "description": "Path define numactl path within the container",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsnumactlpath-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsnumactl-"
                  }
                },
                "overrideDetectedNumberOfCores": {
                  "description": "OverrideDetectedNumberOfCores determines if number of cores should be overridden based on values in resources.\nIf is set to true and Container CPU Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES` to the value from the Container CPU Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsoverridedetectednumberofcores-"
                  }
                },
                "overrideDetectedTotalMemory": {
                  "description": "OverrideDetectedTotalMemory determines if memory should be overridden based on values in resources.\nIf is set to true and Container Memory Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` to the value from the Container Memory Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsoverridedetectedtotalmemory-"
                  }
                },
                "podModes": {
                  "description": "PodModes define additional modes enabled on the Pod level",
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorspodmodesnetwork-"
                      }
                    },
                    "pid": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorspodmodespid-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorspodmodes-"
                  }
                },
                "port": {
                  "description": "Port define Port used by member",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsport-"
                  }
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name\nWill be forwarded to the pod spec.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorspriorityclassname-"
                  }
                },
                "probes": {
                  "description": "Probes specifies additional behaviour for probes",
                  "type": "object",
                  "properties": {
                    "ReadinessProbeDisabled": {
                      "description": "OldReadinessProbeDisabled if true readinessProbes are disabled\nDeprecated: This field is deprecated, keept only for backward compatibility.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesreadinessprobedisabled-"
                      }
                    },
                    "livenessProbeDisabled": {
                      "description": "LivenessProbeDisabled if set to true, the operator does not generate a liveness probe for new pods belonging to this group",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobeslivenessprobedisabled-"
                      }
                    },
                    "livenessProbeSpec": {
                      "description": "LivenessProbeSpec override liveness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobeslivenessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobeslivenessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobeslivenessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobeslivenessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobeslivenessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobeslivenessprobespec-"
                      }
                    },
                    "readinessProbeDisabled": {
                      "description": "ReadinessProbeDisabled override flag for probe disabled in good manner (lowercase) with backward compatibility",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesreadinessprobedisabled-"
                      }
                    },
                    "readinessProbeSpec": {
                      "description": "ReadinessProbeSpec override readiness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesreadinessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesreadinessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesreadinessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesreadinessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesreadinessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesreadinessprobespec-"
                      }
                    },
                    "startupProbeDisabled": {
                      "description": "StartupProbeDisabled if true startupProbes are disabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesstartupprobedisabled-"
                      }
                    },
                    "startupProbeSpec": {
                      "description": "StartupProbeSpec override startup probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesstartupprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesstartupprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesstartupprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesstartupprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesstartupprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesstartupprobespec-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobes-"
                  }
                },
                "pvcResizeMode": {
                  "description": "VolumeResizeMode specified resize mode for PVCs and PVs",
                  "type": "string",
                  "enum": [
                    "runtime",
                    "rotate"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorspvcresizemode-"
                  }
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsresources-"
                  }
                },
                "schedulerName": {
                  "description": "SchedulerName define scheduler name used for group",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsschedulername-"
                  }
                },
                "securityContext": {
                  "description": "SecurityContext specifies additional `securityContext` settings in ArangoDB Pod definitions.\nThis is similar (but not fully compatible) to k8s SecurityContext definition.",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextaddcapabilities-"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextallowprivilegeescalation-"
                      }
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextdropallcapabilities-"
                      }
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextfsgroup-"
                      }
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextprivileged-"
                      }
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextreadonlyrootfilesystem-"
                      }
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextrunasgroup-"
                      }
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextrunasnonroot-"
                      }
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextrunasuser-"
                      }
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextselinuxoptions-"
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextseccompprofile-"
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextsupplementalgroups-"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextsysctls-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontext-"
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName setting specifies the `serviceAccountName` for the `Pods` created\nfor each server of this group. If empty, it defaults to using the\n`default` service account.\nUsing an alternative `ServiceAccount` is typically used to separate access rights.\nThe ArangoDB deployments need some very minimal access rights. With the\ndeployment of the operator, we grant the rights to 'get' all 'pod' resources.\nIf you are using a different service account, please grant these rights\nto that service account.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsserviceaccountname-"
                  }
                },
                "shutdownDelay": {
                  "description": "ShutdownDelay define how long operator should delay finalizer removal after shutdown",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsshutdowndelay-"
                  }
                },
                "shutdownMethod": {
                  "description": "ShutdownMethod describe procedure of member shutdown taken by Operator",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsshutdownmethod-"
                  }
                },
                "sidecarCoreNames": {
                  "description": "SidecarCoreNames is a list of sidecar containers which must run in the pod.\nSome names (e.g.: \"server\", \"worker\") are reserved, and they don't have any impact.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssidecarcorenames-"
                  }
                },
                "sidecars": {
                  "description": "Sidecars specifies a list of additional containers to be started",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "lifecycle": {
                        "type": "object",
                        "properties": {
                          "postStart": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "preStop": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "livenessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "ports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "type": "string"
                            },
                            "hostPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readinessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "type": "object",
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "startupProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "stdin": {
                        "type": "boolean"
                      },
                      "stdinOnce": {
                        "type": "boolean"
                      },
                      "terminationMessagePath": {
                        "type": "string"
                      },
                      "terminationMessagePolicy": {
                        "type": "string"
                      },
                      "tty": {
                        "type": "boolean"
                      },
                      "volumeDevices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "devicePath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssidecars-"
                  }
                },
                "storageClassName": {
                  "description": "StorageClassName specifies the classname for storage of the servers.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsstorageclassname-"
                  }
                },
                "terminationGracePeriodSeconds": {
                  "description": "TerminationGracePeriodSeconds override default TerminationGracePeriodSeconds for pods - via silent rotation",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsterminationgraceperiodseconds-"
                  }
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.\nBy default, suitable tolerations are set for the following keys with the `NoExecute` effect:\n- `node.kubernetes.io/not-ready`\n- `node.kubernetes.io/unreachable`\n- `node.alpha.kubernetes.io/unreachable` (will be removed in future version)\nFor more information on tolerations, consult the https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorstolerations-"
                  }
                },
                "volumeAllowShrink": {
                  "description": "Deprecated: VolumeAllowShrink allows shrink the volume",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumeallowshrink-"
                  }
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate specifies a volumeClaimTemplate used by operator to create to volume claims for pods of this group.\nThis setting is not available for group `coordinators`, `syncmasters` \u0026 `syncworkers`.\nThe default value describes a volume with `8Gi` storage, `ReadWriteOnce` access mode and volume mode set to `PersistentVolumeFilesystem`.\nIf this field is not set and `spec.\u003cgroup\u003e.resources.requests.storage` is set, then a default volume claim\nwith size as specified by `spec.\u003cgroup\u003e.resources.requests.storage` will be created. In that case `storage`\nand `iops` is not forwarded to the pods resource requirements.",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "creationTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "deletionTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generateName": {
                          "type": "string"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldsType": {
                                "type": "string"
                              },
                              "fieldsV1": {
                                "type": "object"
                              },
                              "manager": {
                                "type": "string"
                              },
                              "operation": {
                                "type": "string"
                              },
                              "subresource": {
                                "type": "string"
                              },
                              "time": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "blockOwnerDeletion": {
                                "type": "boolean"
                              },
                              "controller": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resourceVersion": {
                          "type": "string"
                        },
                        "selfLink": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataSource": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "dataSourceRef": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requests": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "storageClassName": {
                          "type": "string"
                        },
                        "volumeMode": {
                          "type": "string"
                        },
                        "volumeName": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allocatedResources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastProbeTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "lastTransitionTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "type": "string"
                        },
                        "resizeStatus": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumeclaimtemplate-"
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts define list of volume mounts mounted into server container",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "mountPropagation": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      },
                      "subPathExpr": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumemounts-"
                  }
                },
                "volumes": {
                  "description": "Volumes define list of volumes mounted to pod",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumesconfigmap-"
                        }
                      },
                      "emptyDir": {
                        "description": "EmptyDir",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string"
                          },
                          "sizeLimit": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumesemptydir-"
                        }
                      },
                      "hostPath": {
                        "description": "HostPath",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumeshostpath-"
                        }
                      },
                      "name": {
                        "description": "Name of volume",
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumesname-"
                        }
                      },
                      "persistentVolumeClaim": {
                        "description": "PersistentVolumeClaim",
                        "type": "object",
                        "properties": {
                          "claimName": {
                            "type": "string"
                          },
                          "readOnly": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumespersistentvolumeclaim-"
                        }
                      },
                      "secret": {
                        "description": "Secret which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumessecret-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumes-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinators-"
              }
            },
            "database": {
              "description": "Database holds information about database state, like maintenance mode",
              "type": "object",
              "properties": {
                "maintenance": {
                  "description": "Maintenance manage maintenance mode on Cluster side. Requires maintenance feature to be enabled",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdatabasemaintenance-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdatabase-"
              }
            },
            "dbservers": {
              "description": "DBServers contains specification for DBServer pods running in deployment mode `Cluster` or `ActiveFailover`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversaffinity-"
                  }
                },
                "allowMemberRecreation": {
                  "description": "AllowMemberRecreation allows to recreate member.\nThis setting changes the member recreation logic based on group:\n- For Sync Masters, Sync Workers, Coordinator and DB-Servers it determines if a member can be recreated in case of failure (default `true`)\n- For Agents and Single this value is hardcoded to `false` and the value provided in spec is ignored.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversallowmemberrecreation-"
                  }
                },
                "annotations": {
                  "description": "Annotations specified the annotations added to Pods in this group.\nAnnotations are merged with `spec.annotations`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversannotations-"
                  }
                },
                "annotationsIgnoreList": {
                  "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversannotationsignorelist-"
                  }
                },
                "annotationsMode": {
                  "description": "AnnotationsMode Define annotations mode which should be use while overriding annotations",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversannotationsmode-"
                  }
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversantiaffinity-"
                  }
                },
                "args": {
                  "description": "Args setting specifies additional command-line arguments passed to all servers of this group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversargs-"
                  }
                },
                "count": {
                  "description": "Count setting specifies the number of servers to start for the given group.\nFor the Agent group, this value must be a positive, odd number.\nThe default value is `3` for all groups except `single` (there the default is `1`\nfor `spec.mode: Single` and `2` for `spec.mode: ActiveFailover`).\nFor the `syncworkers` group, it is highly recommended to use the same number\nas for the `dbservers` group.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverscount-"
                  }
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversentrypoint-"
                  }
                },
                "envs": {
                  "description": "Envs allow to specify additional envs in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversenvsname-"
                        }
                      },
                      "value": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversenvsvalue-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversenvs-"
                  }
                },
                "ephemeralVolumes": {
                  "description": "EphemeralVolumes keeps information about ephemeral volumes.",
                  "type": "object",
                  "properties": {
                    "apps": {
                      "description": "Apps define apps ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversephemeralvolumesappssize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversephemeralvolumesapps-"
                      }
                    },
                    "temp": {
                      "description": "Temp define temp ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversephemeralvolumestempsize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversephemeralvolumestemp-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversephemeralvolumes-"
                  }
                },
                "exporterPort": {
                  "description": "ExporterPort define Port used by exporter",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversexporterport-"
                  }
                },
                "extendedRotationCheck": {
                  "description": "ExtendedRotationCheck extend checks for rotation",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversextendedrotationcheck-"
                  }
                },
                "externalPortEnabled": {
                  "description": "ExternalPortEnabled if external port should be enabled. If is set to false, ports needs to be exposed via sidecar. Only for ArangoD members",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversexternalportenabled-"
                  }
                },
                "indexMethod": {
                  "description": "IndexMethod define group Indexing method",
                  "type": "string",
                  "enum": [
                    "random",
                    "ordered"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversindexmethod-"
                  }
                },
                "initContainers": {
                  "description": "InitContainers Init containers specification",
                  "type": "object",
                  "properties": {
                    "containers": {
                      "description": "Containers contains list of containers",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "fieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "apiVersion": {
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resourceFieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "containerName": {
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "type": "object",
                                          "properties": {
                                            "": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "resource": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "secretKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "envFrom": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "type": "string"
                          },
                          "lifecycle": {
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "type": "string"
                                },
                                "hostPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "protocol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "readinessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityContext": {
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "drop": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "type": "boolean"
                              },
                              "procMount": {
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "type": "object",
                                "properties": {
                                  "localhostProfile": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "startupProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "stdin": {
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "type": "string"
                          },
                          "tty": {
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumeMounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mountPath": {
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "workingDir": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversinitcontainerscontainers-"
                      }
                    },
                    "mode": {
                      "description": "Mode keep container replace mode",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversinitcontainersmode-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversinitcontainers-"
                  }
                },
                "internalPort": {
                  "description": "InternalPort define port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversinternalport-"
                  }
                },
                "internalPortProtocol": {
                  "description": "InternalPortProtocol define protocol of port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversinternalportprotocol-"
                  }
                },
                "labels": {
                  "description": "Labels specified the labels added to Pods in this group.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverslabels-"
                  }
                },
                "labelsIgnoreList": {
                  "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverslabelsignorelist-"
                  }
                },
                "labelsMode": {
                  "description": "LabelsMode Define labels mode which should be use while overriding labels",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverslabelsmode-"
                  }
                },
                "maxCount": {
                  "description": "MaxCount specifies a maximum for the count of servers. If set, a specification is invalid if `count \u003e maxCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversmaxcount-"
                  }
                },
                "memoryReservation": {
                  "description": "MemoryReservation determines system reservation of memory while calculating `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` value.\nIf this field is set, `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` is reduced by specified value in percents.\nAccepted Range \u003c0, 50\u003e. If value is outside accepted range, it is adjusted to the closest value.",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversmemoryreservation-"
                  }
                },
                "minCount": {
                  "description": "MinCount specifies a minimum for the count of servers. If set, a specification is invalid if `count \u003c minCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversmincount-"
                  }
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversnodeaffinity-"
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector setting specifies a set of labels to be used as `nodeSelector` for Pods of this node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversnodeselector-"
                  }
                },
                "numactl": {
                  "description": "Numactl define Numactl options passed to the process",
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "Args define list of the numactl process",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversnumactlargs-"
                      }
                    },
                    "enabled": {
                      "description": "Enabled define if numactl should be enabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversnumactlenabled-"
                      }
                    },
                    "path": {
                      "description": "Path define numactl path within the container",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversnumactlpath-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversnumactl-"
                  }
                },
                "overrideDetectedNumberOfCores": {
                  "description": "OverrideDetectedNumberOfCores determines if number of cores should be overridden based on values in resources.\nIf is set to true and Container CPU Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES` to the value from the Container CPU Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversoverridedetectednumberofcores-"
                  }
                },
                "overrideDetectedTotalMemory": {
                  "description": "OverrideDetectedTotalMemory determines if memory should be overridden based on values in resources.\nIf is set to true and Container Memory Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` to the value from the Container Memory Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversoverridedetectedtotalmemory-"
                  }
                },
                "podModes": {
                  "description": "PodModes define additional modes enabled on the Pod level",
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverspodmodesnetwork-"
                      }
                    },
                    "pid": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverspodmodespid-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverspodmodes-"
                  }
                },
                "port": {
                  "description": "Port define Port used by member",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversport-"
                  }
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name\nWill be forwarded to the pod spec.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverspriorityclassname-"
                  }
                },
                "probes": {
                  "description": "Probes specifies additional behaviour for probes",
                  "type": "object",
                  "properties": {
                    "ReadinessProbeDisabled": {
                      "description": "OldReadinessProbeDisabled if true readinessProbes are disabled\nDeprecated: This field is deprecated, keept only for backward compatibility.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesreadinessprobedisabled-"
                      }
                    },
                    "livenessProbeDisabled": {
                      "description": "LivenessProbeDisabled if set to true, the operator does not generate a liveness probe for new pods belonging to this group",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobeslivenessprobedisabled-"
                      }
                    },
                    "livenessProbeSpec": {
                      "description": "LivenessProbeSpec override liveness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobeslivenessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobeslivenessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobeslivenessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobeslivenessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobeslivenessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobeslivenessprobespec-"
                      }
                    },
                    "readinessProbeDisabled": {
                      "description": "ReadinessProbeDisabled override flag for probe disabled in good manner (lowercase) with backward compatibility",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesreadinessprobedisabled-"
                      }
                    },
                    "readinessProbeSpec": {
                      "description": "ReadinessProbeSpec override readiness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesreadinessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesreadinessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesreadinessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesreadinessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesreadinessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesreadinessprobespec-"
                      }
                    },
                    "startupProbeDisabled": {
                      "description": "StartupProbeDisabled if true startupProbes are disabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesstartupprobedisabled-"
                      }
                    },
                    "startupProbeSpec": {
                      "description": "StartupProbeSpec override startup probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesstartupprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesstartupprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesstartupprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesstartupprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesstartupprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesstartupprobespec-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobes-"
                  }
                },
                "pvcResizeMode": {
                  "description": "VolumeResizeMode specified resize mode for PVCs and PVs",
                  "type": "string",
                  "enum": [
                    "runtime",
                    "rotate"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverspvcresizemode-"
                  }
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversresources-"
                  }
                },
                "schedulerName": {
                  "description": "SchedulerName define scheduler name used for group",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversschedulername-"
                  }
                },
                "securityContext": {
                  "description": "SecurityContext specifies additional `securityContext` settings in ArangoDB Pod definitions.\nThis is similar (but not fully compatible) to k8s SecurityContext definition.",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextaddcapabilities-"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextallowprivilegeescalation-"
                      }
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextdropallcapabilities-"
                      }
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextfsgroup-"
                      }
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextprivileged-"
                      }
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextreadonlyrootfilesystem-"
                      }
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextrunasgroup-"
                      }
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextrunasnonroot-"
                      }
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextrunasuser-"
                      }
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextselinuxoptions-"
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextseccompprofile-"
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextsupplementalgroups-"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextsysctls-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontext-"
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName setting specifies the `serviceAccountName` for the `Pods` created\nfor each server of this group. If empty, it defaults to using the\n`default` service account.\nUsing an alternative `ServiceAccount` is typically used to separate access rights.\nThe ArangoDB deployments need some very minimal access rights. With the\ndeployment of the operator, we grant the rights to 'get' all 'pod' resources.\nIf you are using a different service account, please grant these rights\nto that service account.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversserviceaccountname-"
                  }
                },
                "shutdownDelay": {
                  "description": "ShutdownDelay define how long operator should delay finalizer removal after shutdown",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversshutdowndelay-"
                  }
                },
                "shutdownMethod": {
                  "description": "ShutdownMethod describe procedure of member shutdown taken by Operator",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversshutdownmethod-"
                  }
                },
                "sidecarCoreNames": {
                  "description": "SidecarCoreNames is a list of sidecar containers which must run in the pod.\nSome names (e.g.: \"server\", \"worker\") are reserved, and they don't have any impact.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssidecarcorenames-"
                  }
                },
                "sidecars": {
                  "description": "Sidecars specifies a list of additional containers to be started",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "lifecycle": {
                        "type": "object",
                        "properties": {
                          "postStart": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "preStop": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "livenessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "ports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "type": "string"
                            },
                            "hostPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readinessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "type": "object",
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "startupProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "stdin": {
                        "type": "boolean"
                      },
                      "stdinOnce": {
                        "type": "boolean"
                      },
                      "terminationMessagePath": {
                        "type": "string"
                      },
                      "terminationMessagePolicy": {
                        "type": "string"
                      },
                      "tty": {
                        "type": "boolean"
                      },
                      "volumeDevices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "devicePath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssidecars-"
                  }
                },
                "storageClassName": {
                  "description": "StorageClassName specifies the classname for storage of the servers.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversstorageclassname-"
                  }
                },
                "terminationGracePeriodSeconds": {
                  "description": "TerminationGracePeriodSeconds override default TerminationGracePeriodSeconds for pods - via silent rotation",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversterminationgraceperiodseconds-"
                  }
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.\nBy default, suitable tolerations are set for the following keys with the `NoExecute` effect:\n- `node.kubernetes.io/not-ready`\n- `node.kubernetes.io/unreachable`\n- `node.alpha.kubernetes.io/unreachable` (will be removed in future version)\nFor more information on tolerations, consult the https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverstolerations-"
                  }
                },
                "volumeAllowShrink": {
                  "description": "Deprecated: VolumeAllowShrink allows shrink the volume",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumeallowshrink-"
                  }
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate specifies a volumeClaimTemplate used by operator to create to volume claims for pods of this group.\nThis setting is not available for group `coordinators`, `syncmasters` \u0026 `syncworkers`.\nThe default value describes a volume with `8Gi` storage, `ReadWriteOnce` access mode and volume mode set to `PersistentVolumeFilesystem`.\nIf this field is not set and `spec.\u003cgroup\u003e.resources.requests.storage` is set, then a default volume claim\nwith size as specified by `spec.\u003cgroup\u003e.resources.requests.storage` will be created. In that case `storage`\nand `iops` is not forwarded to the pods resource requirements.",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "creationTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "deletionTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generateName": {
                          "type": "string"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldsType": {
                                "type": "string"
                              },
                              "fieldsV1": {
                                "type": "object"
                              },
                              "manager": {
                                "type": "string"
                              },
                              "operation": {
                                "type": "string"
                              },
                              "subresource": {
                                "type": "string"
                              },
                              "time": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "blockOwnerDeletion": {
                                "type": "boolean"
                              },
                              "controller": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resourceVersion": {
                          "type": "string"
                        },
                        "selfLink": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataSource": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "dataSourceRef": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requests": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "storageClassName": {
                          "type": "string"
                        },
                        "volumeMode": {
                          "type": "string"
                        },
                        "volumeName": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allocatedResources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastProbeTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "lastTransitionTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "type": "string"
                        },
                        "resizeStatus": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumeclaimtemplate-"
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts define list of volume mounts mounted into server container",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "mountPropagation": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      },
                      "subPathExpr": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumemounts-"
                  }
                },
                "volumes": {
                  "description": "Volumes define list of volumes mounted to pod",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumesconfigmap-"
                        }
                      },
                      "emptyDir": {
                        "description": "EmptyDir",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string"
                          },
                          "sizeLimit": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumesemptydir-"
                        }
                      },
                      "hostPath": {
                        "description": "HostPath",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumeshostpath-"
                        }
                      },
                      "name": {
                        "description": "Name of volume",
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumesname-"
                        }
                      },
                      "persistentVolumeClaim": {
                        "description": "PersistentVolumeClaim",
                        "type": "object",
                        "properties": {
                          "claimName": {
                            "type": "string"
                          },
                          "readOnly": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumespersistentvolumeclaim-"
                        }
                      },
                      "secret": {
                        "description": "Secret which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumessecret-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumes-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbservers-"
              }
            },
            "disableIPv6": {
              "description": "DisableIPv6 setting prevents the use of IPv6 addresses by ArangoDB servers.\nThis setting cannot be changed after the deployment has been created.",
              "type": "boolean",
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdisableipv6-"
              }
            },
            "downtimeAllowed": {
              "description": "DowntimeAllowed setting is used to allow automatic reconciliation actions that yield some downtime of the ArangoDB deployment.\nWhen this setting is set to false, no automatic action that may result in downtime is allowed.\nIf the need for such an action is detected, an event is added to the ArangoDeployment.\nOnce this setting is set to true, the automatic action is executed.\nOperations that may result in downtime are:\n- Rotating TLS CA certificate\nNote: It is still possible that there is some downtime when the Kubernetes cluster is down, or in a bad state, irrespective of the value of this setting.",
              "type": "boolean",
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdowntimeallowed-"
              }
            },
            "environment": {
              "description": "Environment setting specifies the type of environment in which the deployment is created.",
              "type": "string",
              "enum": [
                "Development",
                "Production"
              ],
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specenvironment-"
              }
            },
            "externalAccess": {
              "description": "ExternalAccess holds configuration for the external access provided for the deployment.",
              "type": "object",
              "properties": {
                "advertisedEndpoint": {
                  "description": "AdvertisedEndpoint is passed to the coordinators/single servers for advertising a specific endpoint",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specexternalaccessadvertisedendpoint-"
                  }
                },
                "loadBalancerIP": {
                  "description": "LoadBalancerIP define optional IP used to configure a load-balancer on, in case of Auto or LoadBalancer type.\nIf you do not specify this setting, an IP will be chosen automatically by the load-balancer provisioner.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specexternalaccessloadbalancerip-"
                  }
                },
                "loadBalancerSourceRanges": {
                  "description": "LoadBalancerSourceRanges define LoadBalancerSourceRanges used for LoadBalancer Service type\nIf specified and supported by the platform, this will restrict traffic through the cloud-provider\nload-balancer will be restricted to the specified client IPs. This field will be ignored if the\ncloud-provider does not support the feature.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specexternalaccessloadbalancersourceranges-"
                  }
                },
                "managedServiceNames": {
                  "description": "ManagedServiceNames keeps names of services which are not managed by KubeArangoDB.\nIt is only relevant when type of service is `managed`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specexternalaccessmanagedservicenames-"
                  }
                },
                "nodePort": {
                  "description": "NodePort define optional port used in case of Auto or NodePort type.\nThis setting is used when `spec.externalAccess.type` is set to `NodePort` or `Auto`.\nIf you do not specify this setting, a random port will be chosen automatically.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specexternalaccessnodeport-"
                  }
                },
                "type": {
                  "description": "Type specifies the type of Service that will be created to provide access to the ArangoDB deployment from outside the Kubernetes cluster.",
                  "type": "string",
                  "enum": [
                    "Auto",
                    "None",
                    "LoadBalancer",
                    "NodePort"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specexternalaccesstype-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specexternalaccess-"
              }
            },
            "features": {
              "description": "Features allows to configure feature flags",
              "type": "object",
              "properties": {
                "foxx.queues": {
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specfeaturesfoxxqueues-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specfeatures-"
              }
            },
            "id": {
              "description": "ServerIDGroupSpec contains the specification for Image Discovery image.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidaffinity-"
                  }
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidantiaffinity-"
                  }
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidentrypoint-"
                  }
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidnodeaffinity-"
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector specifies a set of selectors for nodes",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidnodeselector-"
                  }
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidpriorityclassname-"
                  }
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidresources-"
                  }
                },
                "securityContext": {
                  "description": "SecurityContext specifies security context for group",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextaddcapabilities-"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextallowprivilegeescalation-"
                      }
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextdropallcapabilities-"
                      }
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextfsgroup-"
                      }
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextprivileged-"
                      }
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextreadonlyrootfilesystem-"
                      }
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextrunasgroup-"
                      }
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextrunasnonroot-"
                      }
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextrunasuser-"
                      }
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextselinuxoptions-"
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextseccompprofile-"
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextsupplementalgroups-"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextsysctls-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontext-"
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName specifies the name of the service account used for Pods in this group.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidserviceaccountname-"
                  }
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidtolerations-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specid-"
              }
            },
            "image": {
              "description": "Image specifies the docker image to use for all ArangoDB servers.\nIn a development environment this setting defaults to arangodb/arangodb:latest.\nFor production environments this is a required setting without a default value.\nIt is highly recommend to use explicit version (not latest) for production environments.",
              "type": "string",
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specimage-"
              }
            },
            "imageDiscoveryMode": {
              "description": "ImageDiscoveryMode specifies the image discovery mode.",
              "type": "string",
              "enum": [
                "kubelet",
                "direct"
              ],
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specimagediscoverymode-"
              }
            },
            "imagePullPolicy": {
              "description": "ImagePullPolicy specifies the pull policy for the docker image to use for all ArangoDB servers.",
              "type": "string",
              "enum": [
                "Always",
                "Never",
                "IfNotPresent"
              ],
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specimagepullpolicy-"
              }
            },
            "imagePullSecrets": {
              "description": "ImagePullSecrets specifies the list of image pull secrets for the docker image to use for all ArangoDB servers.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specimagepullsecrets-"
              }
            },
            "labels": {
              "description": "Labels specifies the labels added to Pods in this group.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speclabels-"
              }
            },
            "labelsIgnoreList": {
              "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
              "type": "array",
              "items": {
                "type": "string"
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speclabelsignorelist-"
              }
            },
            "labelsMode": {
              "description": "LabelsMode Define labels mode which should be use while overriding labels",
              "type": "string",
              "enum": [
                "disabled",
                "append",
                "replace"
              ],
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speclabelsmode-"
              }
            },
            "license": {
              "description": "License holds license settings",
              "type": "object",
              "properties": {
                "secretName": {
                  "description": "SecretName setting specifies the name of a kubernetes `Secret` that contains\nthe license key token used for enterprise images. This value is not used for\nthe Community Edition.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speclicensesecretname-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speclicense-"
              }
            },
            "lifecycle": {
              "description": "Lifecycle holds lifecycle configuration settings",
              "type": "object",
              "properties": {
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speclifecycleresources-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speclifecycle-"
              }
            },
            "memberPropagationMode": {
              "description": "MemberPropagationMode defines how changes to pod spec should be propogated.\nChanges to a pod’s configuration require a restart of that pod in almost all cases.\nPods are restarted eagerly by default, which can cause more restarts than desired, especially when updating arangod as well as the operator.\nThe propagation of the configuration changes can be deferred to the next restart, either triggered manually by the user or by another operation like an upgrade.\nThis reduces the number of restarts for upgrading both the server and the operator from two to one.",
              "type": "string",
              "enum": [
                "always",
                "on-restart"
              ],
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmemberpropagationmode-"
              }
            },
            "metrics": {
              "description": "Metrics holds metrics configuration settings",
              "type": "object",
              "properties": {
                "authentication": {
                  "type": "object",
                  "properties": {
                    "jwtTokenSecretName": {
                      "description": "JWTTokenSecretName contains the name of the JWT kubernetes secret used for authentication",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsauthenticationjwttokensecretname-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsauthentication-"
                  }
                },
                "enabled": {
                  "description": "Enabled if this is set to `true`, the operator runs a sidecar container for\nevery Agent, DB-Server, Coordinator and Single server.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsenabled-"
                  }
                },
                "image": {
                  "description": "deprecated",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsimage-"
                  }
                },
                "mode": {
                  "description": "deprecated",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsmode-"
                  }
                },
                "port": {
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsport-"
                  }
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsresources-"
                  }
                },
                "serviceMonitor": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsservicemonitorenabled-"
                      }
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsservicemonitorlabels-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsservicemonitor-"
                  }
                },
                "tls": {
                  "description": "TLS defines if TLS should be enabled on Metrics exporter endpoint.\nThis option will enable TLS only if TLS is enabled on ArangoDeployment,\notherwise `true` value will not take any effect.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricstls-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetrics-"
              }
            },
            "mode": {
              "description": "Mode specifies the type of ArangoDB deployment to create.",
              "type": "string",
              "enum": [
                "Cluster",
                "ActiveFailover",
                "Single"
              ],
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmode-"
              },
              "x-kubernetes-validations": [
                {
                  "rule": "self.spec.mode == oldSelf.spec.mode",
                  "message": "field spec.mode is immutable"
                }
              ]
            },
            "networkAttachedVolumes": {
              "description": "NetworkAttachedVolumes\nIf set to `true`, a ResignLeadership operation will be triggered when a DB-Server pod is evicted (rather than a CleanOutServer operation).\nFurthermore, the pod will simply be redeployed on a different node, rather than cleaned and retired and replaced by a new member.\nYou must only set this option to true if your persistent volumes are “movable” in the sense that they can be mounted from a different k8s node, like in the case of network attached volumes.\nIf your persistent volumes are tied to a specific pod, you must leave this option on false.",
              "type": "boolean",
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specnetworkattachedvolumes-"
              }
            },
            "rebalancer": {
              "description": "Rebalancer defines the rebalancer specification",
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrebalancerenabled-"
                  }
                },
                "optimizers": {
                  "type": "object",
                  "properties": {
                    "leader": {
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrebalanceroptimizersleader-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrebalanceroptimizers-"
                  }
                },
                "parallelMoves": {
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrebalancerparallelmoves-"
                  }
                },
                "readers": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "deprecated does not work in Rebalancer V2\nCount Enable Shard Count machanism",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrebalancerreaderscount-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrebalancerreaders-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrebalancer-"
              }
            },
            "recovery": {
              "description": "Recovery specifies configuration related to cluster recovery.",
              "type": "object",
              "properties": {
                "autoRecover": {
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrecoveryautorecover-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrecovery-"
              }
            },
            "restoreEncryptionSecret": {
              "description": "RestoreEncryptionSecret specifies optional name of secret which contains encryption key used for restore",
              "type": "string",
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrestoreencryptionsecret-"
              }
            },
            "restoreFrom": {
              "description": "RestoreFrom setting specifies a `ArangoBackup` resource name the cluster should be restored from.\nAfter a restore or failure to do so, the status of the deployment contains information about the restore operation in the restore key.\nIt will contain some of the following fields:\n- `requestedFrom`: name of the ArangoBackup used to restore from.\n- `message`: optional message explaining why the restore failed.\n- `state`: state indicating if the restore was successful or not. Possible values: Restoring, Restored, RestoreFailed\nIf the restoreFrom key is removed from the spec, the restore key is deleted as well.\nA new restore attempt is made if and only if either in the status restore is not set or if spec.restoreFrom and status.requestedFrom are different.",
              "type": "string",
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrestorefrom-"
              }
            },
            "rocksdb": {
              "description": "RocksDB holds rocksdb-specific configuration settings",
              "type": "object",
              "properties": {
                "encryption": {
                  "type": "object",
                  "properties": {
                    "keySecretName": {
                      "description": "KeySecretName setting specifies the name of a Kubernetes `Secret` that contains an encryption key used for encrypting all data stored by ArangoDB servers.\nWhen an encryption key is used, encryption of the data in the cluster is enabled, without it encryption is disabled.\nThe default value is empty.\nThis requires the Enterprise Edition.\nThe encryption key cannot be changed after the cluster has been created.\nThe secret specified by this setting, must have a data field named 'key' containing an encryption key that is exactly 32 bytes long.",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrocksdbencryptionkeysecretname-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrocksdbencryption-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrocksdb-"
              }
            },
            "single": {
              "description": "Single contains specification for servers running in deployment mode `Single` or `ActiveFailover`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleaffinity-"
                  }
                },
                "allowMemberRecreation": {
                  "description": "AllowMemberRecreation allows to recreate member.\nThis setting changes the member recreation logic based on group:\n- For Sync Masters, Sync Workers, Coordinator and DB-Servers it determines if a member can be recreated in case of failure (default `true`)\n- For Agents and Single this value is hardcoded to `false` and the value provided in spec is ignored.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleallowmemberrecreation-"
                  }
                },
                "annotations": {
                  "description": "Annotations specified the annotations added to Pods in this group.\nAnnotations are merged with `spec.annotations`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleannotations-"
                  }
                },
                "annotationsIgnoreList": {
                  "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleannotationsignorelist-"
                  }
                },
                "annotationsMode": {
                  "description": "AnnotationsMode Define annotations mode which should be use while overriding annotations",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleannotationsmode-"
                  }
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleantiaffinity-"
                  }
                },
                "args": {
                  "description": "Args setting specifies additional command-line arguments passed to all servers of this group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleargs-"
                  }
                },
                "count": {
                  "description": "Count setting specifies the number of servers to start for the given group.\nFor the Agent group, this value must be a positive, odd number.\nThe default value is `3` for all groups except `single` (there the default is `1`\nfor `spec.mode: Single` and `2` for `spec.mode: ActiveFailover`).\nFor the `syncworkers` group, it is highly recommended to use the same number\nas for the `dbservers` group.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglecount-"
                  }
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleentrypoint-"
                  }
                },
                "envs": {
                  "description": "Envs allow to specify additional envs in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleenvsname-"
                        }
                      },
                      "value": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleenvsvalue-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleenvs-"
                  }
                },
                "ephemeralVolumes": {
                  "description": "EphemeralVolumes keeps information about ephemeral volumes.",
                  "type": "object",
                  "properties": {
                    "apps": {
                      "description": "Apps define apps ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleephemeralvolumesappssize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleephemeralvolumesapps-"
                      }
                    },
                    "temp": {
                      "description": "Temp define temp ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleephemeralvolumestempsize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleephemeralvolumestemp-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleephemeralvolumes-"
                  }
                },
                "exporterPort": {
                  "description": "ExporterPort define Port used by exporter",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleexporterport-"
                  }
                },
                "extendedRotationCheck": {
                  "description": "ExtendedRotationCheck extend checks for rotation",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleextendedrotationcheck-"
                  }
                },
                "externalPortEnabled": {
                  "description": "ExternalPortEnabled if external port should be enabled. If is set to false, ports needs to be exposed via sidecar. Only for ArangoD members",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleexternalportenabled-"
                  }
                },
                "indexMethod": {
                  "description": "IndexMethod define group Indexing method",
                  "type": "string",
                  "enum": [
                    "random",
                    "ordered"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleindexmethod-"
                  }
                },
                "initContainers": {
                  "description": "InitContainers Init containers specification",
                  "type": "object",
                  "properties": {
                    "containers": {
                      "description": "Containers contains list of containers",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "fieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "apiVersion": {
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resourceFieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "containerName": {
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "type": "object",
                                          "properties": {
                                            "": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "resource": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "secretKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "envFrom": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "type": "string"
                          },
                          "lifecycle": {
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "type": "string"
                                },
                                "hostPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "protocol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "readinessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityContext": {
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "drop": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "type": "boolean"
                              },
                              "procMount": {
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "type": "object",
                                "properties": {
                                  "localhostProfile": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "startupProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "stdin": {
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "type": "string"
                          },
                          "tty": {
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumeMounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mountPath": {
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "workingDir": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleinitcontainerscontainers-"
                      }
                    },
                    "mode": {
                      "description": "Mode keep container replace mode",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleinitcontainersmode-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleinitcontainers-"
                  }
                },
                "internalPort": {
                  "description": "InternalPort define port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleinternalport-"
                  }
                },
                "internalPortProtocol": {
                  "description": "InternalPortProtocol define protocol of port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleinternalportprotocol-"
                  }
                },
                "labels": {
                  "description": "Labels specified the labels added to Pods in this group.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglelabels-"
                  }
                },
                "labelsIgnoreList": {
                  "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglelabelsignorelist-"
                  }
                },
                "labelsMode": {
                  "description": "LabelsMode Define labels mode which should be use while overriding labels",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglelabelsmode-"
                  }
                },
                "maxCount": {
                  "description": "MaxCount specifies a maximum for the count of servers. If set, a specification is invalid if `count \u003e maxCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglemaxcount-"
                  }
                },
                "memoryReservation": {
                  "description": "MemoryReservation determines system reservation of memory while calculating `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` value.\nIf this field is set, `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` is reduced by specified value in percents.\nAccepted Range \u003c0, 50\u003e. If value is outside accepted range, it is adjusted to the closest value.",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglememoryreservation-"
                  }
                },
                "minCount": {
                  "description": "MinCount specifies a minimum for the count of servers. If set, a specification is invalid if `count \u003c minCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglemincount-"
                  }
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglenodeaffinity-"
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector setting specifies a set of labels to be used as `nodeSelector` for Pods of this node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglenodeselector-"
                  }
                },
                "numactl": {
                  "description": "Numactl define Numactl options passed to the process",
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "Args define list of the numactl process",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglenumactlargs-"
                      }
                    },
                    "enabled": {
                      "description": "Enabled define if numactl should be enabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglenumactlenabled-"
                      }
                    },
                    "path": {
                      "description": "Path define numactl path within the container",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglenumactlpath-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglenumactl-"
                  }
                },
                "overrideDetectedNumberOfCores": {
                  "description": "OverrideDetectedNumberOfCores determines if number of cores should be overridden based on values in resources.\nIf is set to true and Container CPU Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES` to the value from the Container CPU Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleoverridedetectednumberofcores-"
                  }
                },
                "overrideDetectedTotalMemory": {
                  "description": "OverrideDetectedTotalMemory determines if memory should be overridden based on values in resources.\nIf is set to true and Container Memory Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` to the value from the Container Memory Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleoverridedetectedtotalmemory-"
                  }
                },
                "podModes": {
                  "description": "PodModes define additional modes enabled on the Pod level",
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglepodmodesnetwork-"
                      }
                    },
                    "pid": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglepodmodespid-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglepodmodes-"
                  }
                },
                "port": {
                  "description": "Port define Port used by member",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleport-"
                  }
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name\nWill be forwarded to the pod spec.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglepriorityclassname-"
                  }
                },
                "probes": {
                  "description": "Probes specifies additional behaviour for probes",
                  "type": "object",
                  "properties": {
                    "ReadinessProbeDisabled": {
                      "description": "OldReadinessProbeDisabled if true readinessProbes are disabled\nDeprecated: This field is deprecated, keept only for backward compatibility.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesreadinessprobedisabled-"
                      }
                    },
                    "livenessProbeDisabled": {
                      "description": "LivenessProbeDisabled if set to true, the operator does not generate a liveness probe for new pods belonging to this group",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobeslivenessprobedisabled-"
                      }
                    },
                    "livenessProbeSpec": {
                      "description": "LivenessProbeSpec override liveness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobeslivenessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobeslivenessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobeslivenessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobeslivenessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobeslivenessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobeslivenessprobespec-"
                      }
                    },
                    "readinessProbeDisabled": {
                      "description": "ReadinessProbeDisabled override flag for probe disabled in good manner (lowercase) with backward compatibility",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesreadinessprobedisabled-"
                      }
                    },
                    "readinessProbeSpec": {
                      "description": "ReadinessProbeSpec override readiness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesreadinessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesreadinessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesreadinessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesreadinessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesreadinessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesreadinessprobespec-"
                      }
                    },
                    "startupProbeDisabled": {
                      "description": "StartupProbeDisabled if true startupProbes are disabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesstartupprobedisabled-"
                      }
                    },
                    "startupProbeSpec": {
                      "description": "StartupProbeSpec override startup probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesstartupprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesstartupprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesstartupprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesstartupprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesstartupprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesstartupprobespec-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobes-"
                  }
                },
                "pvcResizeMode": {
                  "description": "VolumeResizeMode specified resize mode for PVCs and PVs",
                  "type": "string",
                  "enum": [
                    "runtime",
                    "rotate"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglepvcresizemode-"
                  }
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleresources-"
                  }
                },
                "schedulerName": {
                  "description": "SchedulerName define scheduler name used for group",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleschedulername-"
                  }
                },
                "securityContext": {
                  "description": "SecurityContext specifies additional `securityContext` settings in ArangoDB Pod definitions.\nThis is similar (but not fully compatible) to k8s SecurityContext definition.",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextaddcapabilities-"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextallowprivilegeescalation-"
                      }
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextdropallcapabilities-"
                      }
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextfsgroup-"
                      }
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextprivileged-"
                      }
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextreadonlyrootfilesystem-"
                      }
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextrunasgroup-"
                      }
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextrunasnonroot-"
                      }
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextrunasuser-"
                      }
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextselinuxoptions-"
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextseccompprofile-"
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextsupplementalgroups-"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextsysctls-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontext-"
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName setting specifies the `serviceAccountName` for the `Pods` created\nfor each server of this group. If empty, it defaults to using the\n`default` service account.\nUsing an alternative `ServiceAccount` is typically used to separate access rights.\nThe ArangoDB deployments need some very minimal access rights. With the\ndeployment of the operator, we grant the rights to 'get' all 'pod' resources.\nIf you are using a different service account, please grant these rights\nto that service account.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleserviceaccountname-"
                  }
                },
                "shutdownDelay": {
                  "description": "ShutdownDelay define how long operator should delay finalizer removal after shutdown",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleshutdowndelay-"
                  }
                },
                "shutdownMethod": {
                  "description": "ShutdownMethod describe procedure of member shutdown taken by Operator",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleshutdownmethod-"
                  }
                },
                "sidecarCoreNames": {
                  "description": "SidecarCoreNames is a list of sidecar containers which must run in the pod.\nSome names (e.g.: \"server\", \"worker\") are reserved, and they don't have any impact.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesidecarcorenames-"
                  }
                },
                "sidecars": {
                  "description": "Sidecars specifies a list of additional containers to be started",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "lifecycle": {
                        "type": "object",
                        "properties": {
                          "postStart": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "preStop": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "livenessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "ports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "type": "string"
                            },
                            "hostPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readinessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "type": "object",
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "startupProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "stdin": {
                        "type": "boolean"
                      },
                      "stdinOnce": {
                        "type": "boolean"
                      },
                      "terminationMessagePath": {
                        "type": "string"
                      },
                      "terminationMessagePolicy": {
                        "type": "string"
                      },
                      "tty": {
                        "type": "boolean"
                      },
                      "volumeDevices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "devicePath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesidecars-"
                  }
                },
                "storageClassName": {
                  "description": "StorageClassName specifies the classname for storage of the servers.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglestorageclassname-"
                  }
                },
                "terminationGracePeriodSeconds": {
                  "description": "TerminationGracePeriodSeconds override default TerminationGracePeriodSeconds for pods - via silent rotation",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleterminationgraceperiodseconds-"
                  }
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.\nBy default, suitable tolerations are set for the following keys with the `NoExecute` effect:\n- `node.kubernetes.io/not-ready`\n- `node.kubernetes.io/unreachable`\n- `node.alpha.kubernetes.io/unreachable` (will be removed in future version)\nFor more information on tolerations, consult the https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingletolerations-"
                  }
                },
                "volumeAllowShrink": {
                  "description": "Deprecated: VolumeAllowShrink allows shrink the volume",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumeallowshrink-"
                  }
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate specifies a volumeClaimTemplate used by operator to create to volume claims for pods of this group.\nThis setting is not available for group `coordinators`, `syncmasters` \u0026 `syncworkers`.\nThe default value describes a volume with `8Gi` storage, `ReadWriteOnce` access mode and volume mode set to `PersistentVolumeFilesystem`.\nIf this field is not set and `spec.\u003cgroup\u003e.resources.requests.storage` is set, then a default volume claim\nwith size as specified by `spec.\u003cgroup\u003e.resources.requests.storage` will be created. In that case `storage`\nand `iops` is not forwarded to the pods resource requirements.",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "creationTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "deletionTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generateName": {
                          "type": "string"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldsType": {
                                "type": "string"
                              },
                              "fieldsV1": {
                                "type": "object"
                              },
                              "manager": {
                                "type": "string"
                              },
                              "operation": {
                                "type": "string"
                              },
                              "subresource": {
                                "type": "string"
                              },
                              "time": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "blockOwnerDeletion": {
                                "type": "boolean"
                              },
                              "controller": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resourceVersion": {
                          "type": "string"
                        },
                        "selfLink": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataSource": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "dataSourceRef": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requests": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "storageClassName": {
                          "type": "string"
                        },
                        "volumeMode": {
                          "type": "string"
                        },
                        "volumeName": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allocatedResources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastProbeTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "lastTransitionTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "type": "string"
                        },
                        "resizeStatus": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumeclaimtemplate-"
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts define list of volume mounts mounted into server container",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "mountPropagation": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      },
                      "subPathExpr": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumemounts-"
                  }
                },
                "volumes": {
                  "description": "Volumes define list of volumes mounted to pod",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumesconfigmap-"
                        }
                      },
                      "emptyDir": {
                        "description": "EmptyDir",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string"
                          },
                          "sizeLimit": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumesemptydir-"
                        }
                      },
                      "hostPath": {
                        "description": "HostPath",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumeshostpath-"
                        }
                      },
                      "name": {
                        "description": "Name of volume",
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumesname-"
                        }
                      },
                      "persistentVolumeClaim": {
                        "description": "PersistentVolumeClaim",
                        "type": "object",
                        "properties": {
                          "claimName": {
                            "type": "string"
                          },
                          "readOnly": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumespersistentvolumeclaim-"
                        }
                      },
                      "secret": {
                        "description": "Secret which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumessecret-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumes-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingle-"
              }
            },
            "storageEngine": {
              "description": "StorageEngine specifies the type of storage engine used for all servers in the cluster.",
              "type": "string",
              "enum": [
                "RocksDB",
                "MMFiles"
              ],
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specstorageengine-"
              },
              "x-kubernetes-validations": [
                {
                  "rule": "self.spec.storageEngine == oldSelf.spec.storageEngine",
                  "message": "field spec.storageEngine is immutable"
                }
              ]
            },
            "sync": {
              "description": "Sync holds Deployment-to-Deployment synchronization configuration settings",
              "type": "object",
              "properties": {
                "auth": {
                  "type": "object",
                  "properties": {
                    "clientCASecretName": {
                      "description": "ClientCASecretName setting specifies the name of a kubernetes `Secret` that contains\na PEM encoded CA certificate used for client certificate verification\nin all ArangoSync master servers.\nThis is a required setting when `spec.sync.enabled` is `true`.",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncauthclientcasecretname-"
                      }
                    },
                    "jwtSecretName": {
                      "description": "JWTSecretName setting specifies the name of a kubernetes `Secret` that contains\nthe JWT token used for accessing all ArangoSync master servers.\nWhen not specified, the `spec.auth.jwtSecretName` value is used.\nIf you specify a name of a `Secret` that does not exist, a random token is created\nand stored in a `Secret` with given name.",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncauthjwtsecretname-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncauth-"
                  }
                },
                "enabled": {
                  "description": "Enabled setting enables/disables support for data center 2 data center\nreplication in the cluster. When enabled, the cluster will contain\na number of `syncmaster` \u0026 `syncworker` servers.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncenabled-"
                  }
                },
                "externalAccess": {
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "advertisedEndpoint": {
                          "description": "AdvertisedEndpoint is passed to the coordinators/single servers for advertising a specific endpoint",
                          "type": "string",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncexternalaccessadvertisedendpoint-"
                          }
                        },
                        "loadBalancerIP": {
                          "description": "LoadBalancerIP define optional IP used to configure a load-balancer on, in case of Auto or LoadBalancer type.\nIf you do not specify this setting, an IP will be chosen automatically by the load-balancer provisioner.",
                          "type": "string",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncexternalaccessloadbalancerip-"
                          }
                        },
                        "loadBalancerSourceRanges": {
                          "description": "LoadBalancerSourceRanges define LoadBalancerSourceRanges used for LoadBalancer Service type\nIf specified and supported by the platform, this will restrict traffic through the cloud-provider\nload-balancer will be restricted to the specified client IPs. This field will be ignored if the\ncloud-provider does not support the feature.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncexternalaccessloadbalancersourceranges-"
                          }
                        },
                        "managedServiceNames": {
                          "description": "ManagedServiceNames keeps names of services which are not managed by KubeArangoDB.\nIt is only relevant when type of service is `managed`.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncexternalaccessmanagedservicenames-"
                          }
                        },
                        "nodePort": {
                          "description": "NodePort define optional port used in case of Auto or NodePort type.\nThis setting is used when `spec.externalAccess.type` is set to `NodePort` or `Auto`.\nIf you do not specify this setting, a random port will be chosen automatically.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncexternalaccessnodeport-"
                          }
                        },
                        "type": {
                          "description": "Type specifies the type of Service that will be created to provide access to the ArangoDB deployment from outside the Kubernetes cluster.",
                          "type": "string",
                          "enum": [
                            "Auto",
                            "None",
                            "LoadBalancer",
                            "NodePort"
                          ],
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncexternalaccesstype-"
                          }
                        }
                      }
                    },
                    "accessPackageSecretNames": {
                      "description": "AccessPackageSecretNames setting specifies the names of zero of more `Secrets` that will be created by the deployment\noperator containing \"access packages\". An access package contains those `Secrets` that are needed\nto access the SyncMasters of this `ArangoDeployment`.\nBy removing a name from this setting, the corresponding `Secret` is also deleted.\nNote that to remove all access packages, leave an empty array in place (`[]`).\nCompletely removing the setting results in not modifying the list.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncexternalaccessaccesspackagesecretnames-"
                      }
                    },
                    "masterEndpoint": {
                      "description": "MasterEndpoint setting specifies the master endpoint(s) advertised by the ArangoSync SyncMasters.\nIf not set, this setting defaults to:\n- If `spec.sync.externalAccess.loadBalancerIP` is set, it defaults to `https://\u003cload-balancer-ip\u003e:\u003c8629\u003e`.\n- Otherwise it defaults to `https://\u003csync-service-dns-name\u003e:\u003c8629\u003e`.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncexternalaccessmasterendpoint-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncexternalaccess-"
                  }
                },
                "image": {
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncimage-"
                  }
                },
                "monitoring": {
                  "type": "object",
                  "properties": {
                    "tokenSecretName": {
                      "description": "TokenSecretName setting specifies the name of a kubernetes `Secret` that contains\nthe bearer token used for accessing all monitoring endpoints of all arangod/arangosync servers.\nWhen not specified, no monitoring token is used.",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmonitoringtokensecretname-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmonitoring-"
                  }
                },
                "tls": {
                  "type": "object",
                  "properties": {
                    "altNames": {
                      "description": "AltNames setting specifies a list of alternate names that will be added to all generated\ncertificates. These names can be DNS names or email addresses.\nThe default value is empty.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsynctlsaltnames-"
                      }
                    },
                    "caSecretName": {
                      "description": "CASecretName  setting specifies the name of a kubernetes `Secret` that contains\na standard CA certificate + private key used to sign certificates for individual\nArangoDB servers.\nWhen no name is specified, it defaults to `\u003cdeployment-name\u003e-ca`.\nTo disable authentication, set this value to `None`.\nIf you specify a name of a `Secret` that does not exist, a self-signed CA certificate + key is created\nand stored in a `Secret` with given name.\nThe specified `Secret`, must contain the following data fields:\n- `ca.crt` PEM encoded public key of the CA certificate\n- `ca.key` PEM encoded private key of the CA certificate",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsynctlscasecretname-"
                      }
                    },
                    "mode": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsynctlsmode-"
                      }
                    },
                    "sni": {
                      "type": "object",
                      "properties": {
                        "mapping": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsynctlssnimapping-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsynctlssni-"
                      }
                    },
                    "ttl": {
                      "description": "TTL setting specifies the time to live of all generated server certificates.\nWhen the server certificate is about to expire, it will be automatically replaced\nby a new one and the affected server will be restarted.\nNote: The time to live of the CA certificate (when created automatically)\nwill be set to 10 years.",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsynctlsttl-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsynctls-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsync-"
              }
            },
            "syncmasters": {
              "description": "SyncMasters contains specification for Syncmaster pods running in deployment mode `Cluster`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersaffinity-"
                  }
                },
                "allowMemberRecreation": {
                  "description": "AllowMemberRecreation allows to recreate member.\nThis setting changes the member recreation logic based on group:\n- For Sync Masters, Sync Workers, Coordinator and DB-Servers it determines if a member can be recreated in case of failure (default `true`)\n- For Agents and Single this value is hardcoded to `false` and the value provided in spec is ignored.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersallowmemberrecreation-"
                  }
                },
                "annotations": {
                  "description": "Annotations specified the annotations added to Pods in this group.\nAnnotations are merged with `spec.annotations`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersannotations-"
                  }
                },
                "annotationsIgnoreList": {
                  "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersannotationsignorelist-"
                  }
                },
                "annotationsMode": {
                  "description": "AnnotationsMode Define annotations mode which should be use while overriding annotations",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersannotationsmode-"
                  }
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersantiaffinity-"
                  }
                },
                "args": {
                  "description": "Args setting specifies additional command-line arguments passed to all servers of this group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersargs-"
                  }
                },
                "count": {
                  "description": "Count setting specifies the number of servers to start for the given group.\nFor the Agent group, this value must be a positive, odd number.\nThe default value is `3` for all groups except `single` (there the default is `1`\nfor `spec.mode: Single` and `2` for `spec.mode: ActiveFailover`).\nFor the `syncworkers` group, it is highly recommended to use the same number\nas for the `dbservers` group.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterscount-"
                  }
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersentrypoint-"
                  }
                },
                "envs": {
                  "description": "Envs allow to specify additional envs in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersenvsname-"
                        }
                      },
                      "value": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersenvsvalue-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersenvs-"
                  }
                },
                "ephemeralVolumes": {
                  "description": "EphemeralVolumes keeps information about ephemeral volumes.",
                  "type": "object",
                  "properties": {
                    "apps": {
                      "description": "Apps define apps ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersephemeralvolumesappssize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersephemeralvolumesapps-"
                      }
                    },
                    "temp": {
                      "description": "Temp define temp ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersephemeralvolumestempsize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersephemeralvolumestemp-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersephemeralvolumes-"
                  }
                },
                "exporterPort": {
                  "description": "ExporterPort define Port used by exporter",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersexporterport-"
                  }
                },
                "extendedRotationCheck": {
                  "description": "ExtendedRotationCheck extend checks for rotation",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersextendedrotationcheck-"
                  }
                },
                "externalPortEnabled": {
                  "description": "ExternalPortEnabled if external port should be enabled. If is set to false, ports needs to be exposed via sidecar. Only for ArangoD members",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersexternalportenabled-"
                  }
                },
                "indexMethod": {
                  "description": "IndexMethod define group Indexing method",
                  "type": "string",
                  "enum": [
                    "random",
                    "ordered"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersindexmethod-"
                  }
                },
                "initContainers": {
                  "description": "InitContainers Init containers specification",
                  "type": "object",
                  "properties": {
                    "containers": {
                      "description": "Containers contains list of containers",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "fieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "apiVersion": {
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resourceFieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "containerName": {
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "type": "object",
                                          "properties": {
                                            "": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "resource": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "secretKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "envFrom": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "type": "string"
                          },
                          "lifecycle": {
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "type": "string"
                                },
                                "hostPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "protocol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "readinessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityContext": {
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "drop": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "type": "boolean"
                              },
                              "procMount": {
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "type": "object",
                                "properties": {
                                  "localhostProfile": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "startupProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "stdin": {
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "type": "string"
                          },
                          "tty": {
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumeMounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mountPath": {
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "workingDir": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersinitcontainerscontainers-"
                      }
                    },
                    "mode": {
                      "description": "Mode keep container replace mode",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersinitcontainersmode-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersinitcontainers-"
                  }
                },
                "internalPort": {
                  "description": "InternalPort define port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersinternalport-"
                  }
                },
                "internalPortProtocol": {
                  "description": "InternalPortProtocol define protocol of port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersinternalportprotocol-"
                  }
                },
                "labels": {
                  "description": "Labels specified the labels added to Pods in this group.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterslabels-"
                  }
                },
                "labelsIgnoreList": {
                  "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterslabelsignorelist-"
                  }
                },
                "labelsMode": {
                  "description": "LabelsMode Define labels mode which should be use while overriding labels",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterslabelsmode-"
                  }
                },
                "maxCount": {
                  "description": "MaxCount specifies a maximum for the count of servers. If set, a specification is invalid if `count \u003e maxCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersmaxcount-"
                  }
                },
                "memoryReservation": {
                  "description": "MemoryReservation determines system reservation of memory while calculating `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` value.\nIf this field is set, `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` is reduced by specified value in percents.\nAccepted Range \u003c0, 50\u003e. If value is outside accepted range, it is adjusted to the closest value.",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersmemoryreservation-"
                  }
                },
                "minCount": {
                  "description": "MinCount specifies a minimum for the count of servers. If set, a specification is invalid if `count \u003c minCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersmincount-"
                  }
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersnodeaffinity-"
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector setting specifies a set of labels to be used as `nodeSelector` for Pods of this node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersnodeselector-"
                  }
                },
                "numactl": {
                  "description": "Numactl define Numactl options passed to the process",
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "Args define list of the numactl process",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersnumactlargs-"
                      }
                    },
                    "enabled": {
                      "description": "Enabled define if numactl should be enabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersnumactlenabled-"
                      }
                    },
                    "path": {
                      "description": "Path define numactl path within the container",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersnumactlpath-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersnumactl-"
                  }
                },
                "overrideDetectedNumberOfCores": {
                  "description": "OverrideDetectedNumberOfCores determines if number of cores should be overridden based on values in resources.\nIf is set to true and Container CPU Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES` to the value from the Container CPU Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersoverridedetectednumberofcores-"
                  }
                },
                "overrideDetectedTotalMemory": {
                  "description": "OverrideDetectedTotalMemory determines if memory should be overridden based on values in resources.\nIf is set to true and Container Memory Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` to the value from the Container Memory Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersoverridedetectedtotalmemory-"
                  }
                },
                "podModes": {
                  "description": "PodModes define additional modes enabled on the Pod level",
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterspodmodesnetwork-"
                      }
                    },
                    "pid": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterspodmodespid-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterspodmodes-"
                  }
                },
                "port": {
                  "description": "Port define Port used by member",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersport-"
                  }
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name\nWill be forwarded to the pod spec.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterspriorityclassname-"
                  }
                },
                "probes": {
                  "description": "Probes specifies additional behaviour for probes",
                  "type": "object",
                  "properties": {
                    "ReadinessProbeDisabled": {
                      "description": "OldReadinessProbeDisabled if true readinessProbes are disabled\nDeprecated: This field is deprecated, keept only for backward compatibility.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesreadinessprobedisabled-"
                      }
                    },
                    "livenessProbeDisabled": {
                      "description": "LivenessProbeDisabled if set to true, the operator does not generate a liveness probe for new pods belonging to this group",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobeslivenessprobedisabled-"
                      }
                    },
                    "livenessProbeSpec": {
                      "description": "LivenessProbeSpec override liveness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobeslivenessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobeslivenessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobeslivenessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobeslivenessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobeslivenessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobeslivenessprobespec-"
                      }
                    },
                    "readinessProbeDisabled": {
                      "description": "ReadinessProbeDisabled override flag for probe disabled in good manner (lowercase) with backward compatibility",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesreadinessprobedisabled-"
                      }
                    },
                    "readinessProbeSpec": {
                      "description": "ReadinessProbeSpec override readiness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesreadinessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesreadinessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesreadinessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesreadinessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesreadinessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesreadinessprobespec-"
                      }
                    },
                    "startupProbeDisabled": {
                      "description": "StartupProbeDisabled if true startupProbes are disabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesstartupprobedisabled-"
                      }
                    },
                    "startupProbeSpec": {
                      "description": "StartupProbeSpec override startup probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesstartupprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesstartupprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesstartupprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesstartupprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesstartupprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesstartupprobespec-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobes-"
                  }
                },
                "pvcResizeMode": {
                  "description": "VolumeResizeMode specified resize mode for PVCs and PVs",
                  "type": "string",
                  "enum": [
                    "runtime",
                    "rotate"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterspvcresizemode-"
                  }
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersresources-"
                  }
                },
                "schedulerName": {
                  "description": "SchedulerName define scheduler name used for group",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersschedulername-"
                  }
                },
                "securityContext": {
                  "description": "SecurityContext specifies additional `securityContext` settings in ArangoDB Pod definitions.\nThis is similar (but not fully compatible) to k8s SecurityContext definition.",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextaddcapabilities-"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextallowprivilegeescalation-"
                      }
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextdropallcapabilities-"
                      }
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextfsgroup-"
                      }
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextprivileged-"
                      }
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextreadonlyrootfilesystem-"
                      }
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextrunasgroup-"
                      }
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextrunasnonroot-"
                      }
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextrunasuser-"
                      }
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextselinuxoptions-"
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextseccompprofile-"
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextsupplementalgroups-"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextsysctls-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontext-"
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName setting specifies the `serviceAccountName` for the `Pods` created\nfor each server of this group. If empty, it defaults to using the\n`default` service account.\nUsing an alternative `ServiceAccount` is typically used to separate access rights.\nThe ArangoDB deployments need some very minimal access rights. With the\ndeployment of the operator, we grant the rights to 'get' all 'pod' resources.\nIf you are using a different service account, please grant these rights\nto that service account.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersserviceaccountname-"
                  }
                },
                "shutdownDelay": {
                  "description": "ShutdownDelay define how long operator should delay finalizer removal after shutdown",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersshutdowndelay-"
                  }
                },
                "shutdownMethod": {
                  "description": "ShutdownMethod describe procedure of member shutdown taken by Operator",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersshutdownmethod-"
                  }
                },
                "sidecarCoreNames": {
                  "description": "SidecarCoreNames is a list of sidecar containers which must run in the pod.\nSome names (e.g.: \"server\", \"worker\") are reserved, and they don't have any impact.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssidecarcorenames-"
                  }
                },
                "sidecars": {
                  "description": "Sidecars specifies a list of additional containers to be started",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "lifecycle": {
                        "type": "object",
                        "properties": {
                          "postStart": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "preStop": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "livenessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "ports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "type": "string"
                            },
                            "hostPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readinessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "type": "object",
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "startupProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "stdin": {
                        "type": "boolean"
                      },
                      "stdinOnce": {
                        "type": "boolean"
                      },
                      "terminationMessagePath": {
                        "type": "string"
                      },
                      "terminationMessagePolicy": {
                        "type": "string"
                      },
                      "tty": {
                        "type": "boolean"
                      },
                      "volumeDevices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "devicePath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssidecars-"
                  }
                },
                "storageClassName": {
                  "description": "StorageClassName specifies the classname for storage of the servers.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersstorageclassname-"
                  }
                },
                "terminationGracePeriodSeconds": {
                  "description": "TerminationGracePeriodSeconds override default TerminationGracePeriodSeconds for pods - via silent rotation",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersterminationgraceperiodseconds-"
                  }
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.\nBy default, suitable tolerations are set for the following keys with the `NoExecute` effect:\n- `node.kubernetes.io/not-ready`\n- `node.kubernetes.io/unreachable`\n- `node.alpha.kubernetes.io/unreachable` (will be removed in future version)\nFor more information on tolerations, consult the https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterstolerations-"
                  }
                },
                "volumeAllowShrink": {
                  "description": "Deprecated: VolumeAllowShrink allows shrink the volume",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumeallowshrink-"
                  }
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate specifies a volumeClaimTemplate used by operator to create to volume claims for pods of this group.\nThis setting is not available for group `coordinators`, `syncmasters` \u0026 `syncworkers`.\nThe default value describes a volume with `8Gi` storage, `ReadWriteOnce` access mode and volume mode set to `PersistentVolumeFilesystem`.\nIf this field is not set and `spec.\u003cgroup\u003e.resources.requests.storage` is set, then a default volume claim\nwith size as specified by `spec.\u003cgroup\u003e.resources.requests.storage` will be created. In that case `storage`\nand `iops` is not forwarded to the pods resource requirements.",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "creationTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "deletionTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generateName": {
                          "type": "string"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldsType": {
                                "type": "string"
                              },
                              "fieldsV1": {
                                "type": "object"
                              },
                              "manager": {
                                "type": "string"
                              },
                              "operation": {
                                "type": "string"
                              },
                              "subresource": {
                                "type": "string"
                              },
                              "time": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "blockOwnerDeletion": {
                                "type": "boolean"
                              },
                              "controller": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resourceVersion": {
                          "type": "string"
                        },
                        "selfLink": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataSource": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "dataSourceRef": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requests": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "storageClassName": {
                          "type": "string"
                        },
                        "volumeMode": {
                          "type": "string"
                        },
                        "volumeName": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allocatedResources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastProbeTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "lastTransitionTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "type": "string"
                        },
                        "resizeStatus": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumeclaimtemplate-"
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts define list of volume mounts mounted into server container",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "mountPropagation": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      },
                      "subPathExpr": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumemounts-"
                  }
                },
                "volumes": {
                  "description": "Volumes define list of volumes mounted to pod",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumesconfigmap-"
                        }
                      },
                      "emptyDir": {
                        "description": "EmptyDir",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string"
                          },
                          "sizeLimit": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumesemptydir-"
                        }
                      },
                      "hostPath": {
                        "description": "HostPath",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumeshostpath-"
                        }
                      },
                      "name": {
                        "description": "Name of volume",
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumesname-"
                        }
                      },
                      "persistentVolumeClaim": {
                        "description": "PersistentVolumeClaim",
                        "type": "object",
                        "properties": {
                          "claimName": {
                            "type": "string"
                          },
                          "readOnly": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumespersistentvolumeclaim-"
                        }
                      },
                      "secret": {
                        "description": "Secret which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumessecret-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumes-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasters-"
              }
            },
            "syncworkers": {
              "description": "SyncWorkers contains specification for Syncworker pods running in deployment mode `Cluster`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersaffinity-"
                  }
                },
                "allowMemberRecreation": {
                  "description": "AllowMemberRecreation allows to recreate member.\nThis setting changes the member recreation logic based on group:\n- For Sync Masters, Sync Workers, Coordinator and DB-Servers it determines if a member can be recreated in case of failure (default `true`)\n- For Agents and Single this value is hardcoded to `false` and the value provided in spec is ignored.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersallowmemberrecreation-"
                  }
                },
                "annotations": {
                  "description": "Annotations specified the annotations added to Pods in this group.\nAnnotations are merged with `spec.annotations`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersannotations-"
                  }
                },
                "annotationsIgnoreList": {
                  "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersannotationsignorelist-"
                  }
                },
                "annotationsMode": {
                  "description": "AnnotationsMode Define annotations mode which should be use while overriding annotations",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersannotationsmode-"
                  }
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersantiaffinity-"
                  }
                },
                "args": {
                  "description": "Args setting specifies additional command-line arguments passed to all servers of this group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersargs-"
                  }
                },
                "count": {
                  "description": "Count setting specifies the number of servers to start for the given group.\nFor the Agent group, this value must be a positive, odd number.\nThe default value is `3` for all groups except `single` (there the default is `1`\nfor `spec.mode: Single` and `2` for `spec.mode: ActiveFailover`).\nFor the `syncworkers` group, it is highly recommended to use the same number\nas for the `dbservers` group.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerscount-"
                  }
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersentrypoint-"
                  }
                },
                "envs": {
                  "description": "Envs allow to specify additional envs in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersenvsname-"
                        }
                      },
                      "value": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersenvsvalue-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersenvs-"
                  }
                },
                "ephemeralVolumes": {
                  "description": "EphemeralVolumes keeps information about ephemeral volumes.",
                  "type": "object",
                  "properties": {
                    "apps": {
                      "description": "Apps define apps ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersephemeralvolumesappssize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersephemeralvolumesapps-"
                      }
                    },
                    "temp": {
                      "description": "Temp define temp ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersephemeralvolumestempsize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersephemeralvolumestemp-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersephemeralvolumes-"
                  }
                },
                "exporterPort": {
                  "description": "ExporterPort define Port used by exporter",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersexporterport-"
                  }
                },
                "extendedRotationCheck": {
                  "description": "ExtendedRotationCheck extend checks for rotation",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersextendedrotationcheck-"
                  }
                },
                "externalPortEnabled": {
                  "description": "ExternalPortEnabled if external port should be enabled. If is set to false, ports needs to be exposed via sidecar. Only for ArangoD members",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersexternalportenabled-"
                  }
                },
                "indexMethod": {
                  "description": "IndexMethod define group Indexing method",
                  "type": "string",
                  "enum": [
                    "random",
                    "ordered"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersindexmethod-"
                  }
                },
                "initContainers": {
                  "description": "InitContainers Init containers specification",
                  "type": "object",
                  "properties": {
                    "containers": {
                      "description": "Containers contains list of containers",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "fieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "apiVersion": {
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resourceFieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "containerName": {
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "type": "object",
                                          "properties": {
                                            "": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "resource": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "secretKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "envFrom": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "type": "string"
                          },
                          "lifecycle": {
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "type": "string"
                                },
                                "hostPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "protocol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "readinessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityContext": {
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "drop": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "type": "boolean"
                              },
                              "procMount": {
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "type": "object",
                                "properties": {
                                  "localhostProfile": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "startupProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "stdin": {
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "type": "string"
                          },
                          "tty": {
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumeMounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mountPath": {
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "workingDir": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersinitcontainerscontainers-"
                      }
                    },
                    "mode": {
                      "description": "Mode keep container replace mode",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersinitcontainersmode-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersinitcontainers-"
                  }
                },
                "internalPort": {
                  "description": "InternalPort define port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersinternalport-"
                  }
                },
                "internalPortProtocol": {
                  "description": "InternalPortProtocol define protocol of port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersinternalportprotocol-"
                  }
                },
                "labels": {
                  "description": "Labels specified the labels added to Pods in this group.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerslabels-"
                  }
                },
                "labelsIgnoreList": {
                  "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerslabelsignorelist-"
                  }
                },
                "labelsMode": {
                  "description": "LabelsMode Define labels mode which should be use while overriding labels",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerslabelsmode-"
                  }
                },
                "maxCount": {
                  "description": "MaxCount specifies a maximum for the count of servers. If set, a specification is invalid if `count \u003e maxCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersmaxcount-"
                  }
                },
                "memoryReservation": {
                  "description": "MemoryReservation determines system reservation of memory while calculating `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` value.\nIf this field is set, `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` is reduced by specified value in percents.\nAccepted Range \u003c0, 50\u003e. If value is outside accepted range, it is adjusted to the closest value.",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersmemoryreservation-"
                  }
                },
                "minCount": {
                  "description": "MinCount specifies a minimum for the count of servers. If set, a specification is invalid if `count \u003c minCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersmincount-"
                  }
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersnodeaffinity-"
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector setting specifies a set of labels to be used as `nodeSelector` for Pods of this node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersnodeselector-"
                  }
                },
                "numactl": {
                  "description": "Numactl define Numactl options passed to the process",
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "Args define list of the numactl process",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersnumactlargs-"
                      }
                    },
                    "enabled": {
                      "description": "Enabled define if numactl should be enabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersnumactlenabled-"
                      }
                    },
                    "path": {
                      "description": "Path define numactl path within the container",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersnumactlpath-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersnumactl-"
                  }
                },
                "overrideDetectedNumberOfCores": {
                  "description": "OverrideDetectedNumberOfCores determines if number of cores should be overridden based on values in resources.\nIf is set to true and Container CPU Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES` to the value from the Container CPU Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersoverridedetectednumberofcores-"
                  }
                },
                "overrideDetectedTotalMemory": {
                  "description": "OverrideDetectedTotalMemory determines if memory should be overridden based on values in resources.\nIf is set to true and Container Memory Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` to the value from the Container Memory Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersoverridedetectedtotalmemory-"
                  }
                },
                "podModes": {
                  "description": "PodModes define additional modes enabled on the Pod level",
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerspodmodesnetwork-"
                      }
                    },
                    "pid": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerspodmodespid-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerspodmodes-"
                  }
                },
                "port": {
                  "description": "Port define Port used by member",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersport-"
                  }
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name\nWill be forwarded to the pod spec.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerspriorityclassname-"
                  }
                },
                "probes": {
                  "description": "Probes specifies additional behaviour for probes",
                  "type": "object",
                  "properties": {
                    "ReadinessProbeDisabled": {
                      "description": "OldReadinessProbeDisabled if true readinessProbes are disabled\nDeprecated: This field is deprecated, keept only for backward compatibility.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesreadinessprobedisabled-"
                      }
                    },
                    "livenessProbeDisabled": {
                      "description": "LivenessProbeDisabled if set to true, the operator does not generate a liveness probe for new pods belonging to this group",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobeslivenessprobedisabled-"
                      }
                    },
                    "livenessProbeSpec": {
                      "description": "LivenessProbeSpec override liveness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobeslivenessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobeslivenessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobeslivenessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobeslivenessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobeslivenessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobeslivenessprobespec-"
                      }
                    },
                    "readinessProbeDisabled": {
                      "description": "ReadinessProbeDisabled override flag for probe disabled in good manner (lowercase) with backward compatibility",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesreadinessprobedisabled-"
                      }
                    },
                    "readinessProbeSpec": {
                      "description": "ReadinessProbeSpec override readiness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesreadinessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesreadinessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesreadinessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesreadinessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesreadinessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesreadinessprobespec-"
                      }
                    },
                    "startupProbeDisabled": {
                      "description": "StartupProbeDisabled if true startupProbes are disabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesstartupprobedisabled-"
                      }
                    },
                    "startupProbeSpec": {
                      "description": "StartupProbeSpec override startup probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesstartupprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesstartupprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesstartupprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesstartupprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesstartupprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesstartupprobespec-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobes-"
                  }
                },
                "pvcResizeMode": {
                  "description": "VolumeResizeMode specified resize mode for PVCs and PVs",
                  "type": "string",
                  "enum": [
                    "runtime",
                    "rotate"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerspvcresizemode-"
                  }
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersresources-"
                  }
                },
                "schedulerName": {
                  "description": "SchedulerName define scheduler name used for group",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersschedulername-"
                  }
                },
                "securityContext": {
                  "description": "SecurityContext specifies additional `securityContext` settings in ArangoDB Pod definitions.\nThis is similar (but not fully compatible) to k8s SecurityContext definition.",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextaddcapabilities-"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextallowprivilegeescalation-"
                      }
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextdropallcapabilities-"
                      }
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextfsgroup-"
                      }
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextprivileged-"
                      }
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextreadonlyrootfilesystem-"
                      }
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextrunasgroup-"
                      }
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextrunasnonroot-"
                      }
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextrunasuser-"
                      }
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextselinuxoptions-"
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextseccompprofile-"
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextsupplementalgroups-"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextsysctls-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontext-"
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName setting specifies the `serviceAccountName` for the `Pods` created\nfor each server of this group. If empty, it defaults to using the\n`default` service account.\nUsing an alternative `ServiceAccount` is typically used to separate access rights.\nThe ArangoDB deployments need some very minimal access rights. With the\ndeployment of the operator, we grant the rights to 'get' all 'pod' resources.\nIf you are using a different service account, please grant these rights\nto that service account.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersserviceaccountname-"
                  }
                },
                "shutdownDelay": {
                  "description": "ShutdownDelay define how long operator should delay finalizer removal after shutdown",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersshutdowndelay-"
                  }
                },
                "shutdownMethod": {
                  "description": "ShutdownMethod describe procedure of member shutdown taken by Operator",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersshutdownmethod-"
                  }
                },
                "sidecarCoreNames": {
                  "description": "SidecarCoreNames is a list of sidecar containers which must run in the pod.\nSome names (e.g.: \"server\", \"worker\") are reserved, and they don't have any impact.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssidecarcorenames-"
                  }
                },
                "sidecars": {
                  "description": "Sidecars specifies a list of additional containers to be started",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "lifecycle": {
                        "type": "object",
                        "properties": {
                          "postStart": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "preStop": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "livenessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "ports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "type": "string"
                            },
                            "hostPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readinessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "type": "object",
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "startupProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "stdin": {
                        "type": "boolean"
                      },
                      "stdinOnce": {
                        "type": "boolean"
                      },
                      "terminationMessagePath": {
                        "type": "string"
                      },
                      "terminationMessagePolicy": {
                        "type": "string"
                      },
                      "tty": {
                        "type": "boolean"
                      },
                      "volumeDevices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "devicePath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssidecars-"
                  }
                },
                "storageClassName": {
                  "description": "StorageClassName specifies the classname for storage of the servers.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersstorageclassname-"
                  }
                },
                "terminationGracePeriodSeconds": {
                  "description": "TerminationGracePeriodSeconds override default TerminationGracePeriodSeconds for pods - via silent rotation",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersterminationgraceperiodseconds-"
                  }
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.\nBy default, suitable tolerations are set for the following keys with the `NoExecute` effect:\n- `node.kubernetes.io/not-ready`\n- `node.kubernetes.io/unreachable`\n- `node.alpha.kubernetes.io/unreachable` (will be removed in future version)\nFor more information on tolerations, consult the https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerstolerations-"
                  }
                },
                "volumeAllowShrink": {
                  "description": "Deprecated: VolumeAllowShrink allows shrink the volume",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumeallowshrink-"
                  }
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate specifies a volumeClaimTemplate used by operator to create to volume claims for pods of this group.\nThis setting is not available for group `coordinators`, `syncmasters` \u0026 `syncworkers`.\nThe default value describes a volume with `8Gi` storage, `ReadWriteOnce` access mode and volume mode set to `PersistentVolumeFilesystem`.\nIf this field is not set and `spec.\u003cgroup\u003e.resources.requests.storage` is set, then a default volume claim\nwith size as specified by `spec.\u003cgroup\u003e.resources.requests.storage` will be created. In that case `storage`\nand `iops` is not forwarded to the pods resource requirements.",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "creationTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "deletionTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generateName": {
                          "type": "string"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldsType": {
                                "type": "string"
                              },
                              "fieldsV1": {
                                "type": "object"
                              },
                              "manager": {
                                "type": "string"
                              },
                              "operation": {
                                "type": "string"
                              },
                              "subresource": {
                                "type": "string"
                              },
                              "time": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "blockOwnerDeletion": {
                                "type": "boolean"
                              },
                              "controller": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resourceVersion": {
                          "type": "string"
                        },
                        "selfLink": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataSource": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "dataSourceRef": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requests": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "storageClassName": {
                          "type": "string"
                        },
                        "volumeMode": {
                          "type": "string"
                        },
                        "volumeName": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allocatedResources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastProbeTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "lastTransitionTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "type": "string"
                        },
                        "resizeStatus": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumeclaimtemplate-"
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts define list of volume mounts mounted into server container",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "mountPropagation": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      },
                      "subPathExpr": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumemounts-"
                  }
                },
                "volumes": {
                  "description": "Volumes define list of volumes mounted to pod",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumesconfigmap-"
                        }
                      },
                      "emptyDir": {
                        "description": "EmptyDir",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string"
                          },
                          "sizeLimit": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumesemptydir-"
                        }
                      },
                      "hostPath": {
                        "description": "HostPath",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumeshostpath-"
                        }
                      },
                      "name": {
                        "description": "Name of volume",
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumesname-"
                        }
                      },
                      "persistentVolumeClaim": {
                        "description": "PersistentVolumeClaim",
                        "type": "object",
                        "properties": {
                          "claimName": {
                            "type": "string"
                          },
                          "readOnly": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumespersistentvolumeclaim-"
                        }
                      },
                      "secret": {
                        "description": "Secret which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumessecret-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumes-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkers-"
              }
            },
            "timeouts": {
              "description": "Timeouts object allows to configure various time-outs",
              "type": "object",
              "properties": {
                "actions": {
                  "description": "Actions keep map of the actions timeouts.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectimeoutsactions-"
                  }
                },
                "maintenanceGracePeriod": {
                  "description": "MaintenanceGracePeriod action timeout",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "integer",
                      "format": "int64"
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectimeoutsmaintenancegraceperiod-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectimeouts-"
              }
            },
            "timezone": {
              "description": "Timezone if specified, will set a timezone for deployment.\nMust be in format accepted by \"tzdata\", e.g. `America/New_York` or `Europe/London`",
              "type": "string",
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectimezone-"
              }
            },
            "tls": {
              "description": "TLS holds TLS configuration settings",
              "type": "object",
              "properties": {
                "altNames": {
                  "description": "AltNames setting specifies a list of alternate names that will be added to all generated\ncertificates. These names can be DNS names or email addresses.\nThe default value is empty.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectlsaltnames-"
                  }
                },
                "caSecretName": {
                  "description": "CASecretName  setting specifies the name of a kubernetes `Secret` that contains\na standard CA certificate + private key used to sign certificates for individual\nArangoDB servers.\nWhen no name is specified, it defaults to `\u003cdeployment-name\u003e-ca`.\nTo disable authentication, set this value to `None`.\nIf you specify a name of a `Secret` that does not exist, a self-signed CA certificate + key is created\nand stored in a `Secret` with given name.\nThe specified `Secret`, must contain the following data fields:\n- `ca.crt` PEM encoded public key of the CA certificate\n- `ca.key` PEM encoded private key of the CA certificate",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectlscasecretname-"
                  }
                },
                "mode": {
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectlsmode-"
                  }
                },
                "sni": {
                  "type": "object",
                  "properties": {
                    "mapping": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectlssnimapping-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectlssni-"
                  }
                },
                "ttl": {
                  "description": "TTL setting specifies the time to live of all generated server certificates.\nWhen the server certificate is about to expire, it will be automatically replaced\nby a new one and the affected server will be restarted.\nNote: The time to live of the CA certificate (when created automatically)\nwill be set to 10 years.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectlsttl-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectls-"
              }
            },
            "topology": {
              "description": "Topology define topology adjustment details, Enterprise only",
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectopologyenabled-"
                  }
                },
                "label": {
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectopologylabel-"
                  }
                },
                "zones": {
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectopologyzones-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectopology-"
              }
            },
            "upgrade": {
              "description": "Upgrade allows to configure upgrade-related options",
              "type": "object",
              "properties": {
                "autoUpgrade": {
                  "description": "AutoUpgrade flag specifies if upgrade should be auto-injected, even if is not required (in case of stuck)",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specupgradeautoupgrade-"
                  }
                },
                "debugLog": {
                  "description": "DebugLog flag specifies if containers running upgrade process should print more debugging information.\nThis applies only to init containers.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specupgradedebuglog-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specupgrade-"
              }
            }
          }
        }
      },
      "x-kubernetes-preserve-unknown-fields": true
    }
  },
  "v1alpha": {
    "openAPIV3Schema": {
      "type": "object",
      "properties": {
        "spec": {
          "type": "object",
          "properties": {
            "ClusterDomain": {
              "description": "ClusterDomain define domain used in the kubernetes cluster.\nRequired only of domain is not set to default (cluster.local)",
              "type": "string",
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specclusterdomain-"
              }
            },
            "agents": {
              "description": "Agents contains specification for Agency pods running in deployment mode `Cluster` or `ActiveFailover`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsaffinity-"
                  }
                },
                "allowMemberRecreation": {
                  "description": "AllowMemberRecreation allows to recreate member.\nThis setting changes the member recreation logic based on group:\n- For Sync Masters, Sync Workers, Coordinator and DB-Servers it determines if a member can be recreated in case of failure (default `true`)\n- For Agents and Single this value is hardcoded to `false` and the value provided in spec is ignored.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsallowmemberrecreation-"
                  }
                },
                "annotations": {
                  "description": "Annotations specified the annotations added to Pods in this group.\nAnnotations are merged with `spec.annotations`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsannotations-"
                  }
                },
                "annotationsIgnoreList": {
                  "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsannotationsignorelist-"
                  }
                },
                "annotationsMode": {
                  "description": "AnnotationsMode Define annotations mode which should be use while overriding annotations",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsannotationsmode-"
                  }
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsantiaffinity-"
                  }
                },
                "args": {
                  "description": "Args setting specifies additional command-line arguments passed to all servers of this group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsargs-"
                  }
                },
                "count": {
                  "description": "Count setting specifies the number of servers to start for the given group.\nFor the Agent group, this value must be a positive, odd number.\nThe default value is `3` for all groups except `single` (there the default is `1`\nfor `spec.mode: Single` and `2` for `spec.mode: ActiveFailover`).\nFor the `syncworkers` group, it is highly recommended to use the same number\nas for the `dbservers` group.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentscount-"
                  }
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsentrypoint-"
                  }
                },
                "envs": {
                  "description": "Envs allow to specify additional envs in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsenvsname-"
                        }
                      },
                      "value": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsenvsvalue-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsenvs-"
                  }
                },
                "ephemeralVolumes": {
                  "description": "EphemeralVolumes keeps information about ephemeral volumes.",
                  "type": "object",
                  "properties": {
                    "apps": {
                      "description": "Apps define apps ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsephemeralvolumesappssize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsephemeralvolumesapps-"
                      }
                    },
                    "temp": {
                      "description": "Temp define temp ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsephemeralvolumestempsize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsephemeralvolumestemp-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsephemeralvolumes-"
                  }
                },
                "exporterPort": {
                  "description": "ExporterPort define Port used by exporter",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsexporterport-"
                  }
                },
                "extendedRotationCheck": {
                  "description": "ExtendedRotationCheck extend checks for rotation",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsextendedrotationcheck-"
                  }
                },
                "externalPortEnabled": {
                  "description": "ExternalPortEnabled if external port should be enabled. If is set to false, ports needs to be exposed via sidecar. Only for ArangoD members",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsexternalportenabled-"
                  }
                },
                "indexMethod": {
                  "description": "IndexMethod define group Indexing method",
                  "type": "string",
                  "enum": [
                    "random",
                    "ordered"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsindexmethod-"
                  }
                },
                "initContainers": {
                  "description": "InitContainers Init containers specification",
                  "type": "object",
                  "properties": {
                    "containers": {
                      "description": "Containers contains list of containers",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "fieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "apiVersion": {
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resourceFieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "containerName": {
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "type": "object",
                                          "properties": {
                                            "": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "resource": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "secretKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "envFrom": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "type": "string"
                          },
                          "lifecycle": {
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "type": "string"
                                },
                                "hostPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "protocol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "readinessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityContext": {
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "drop": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "type": "boolean"
                              },
                              "procMount": {
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "type": "object",
                                "properties": {
                                  "localhostProfile": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "startupProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "stdin": {
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "type": "string"
                          },
                          "tty": {
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumeMounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mountPath": {
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "workingDir": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsinitcontainerscontainers-"
                      }
                    },
                    "mode": {
                      "description": "Mode keep container replace mode",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsinitcontainersmode-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsinitcontainers-"
                  }
                },
                "internalPort": {
                  "description": "InternalPort define port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsinternalport-"
                  }
                },
                "internalPortProtocol": {
                  "description": "InternalPortProtocol define protocol of port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsinternalportprotocol-"
                  }
                },
                "labels": {
                  "description": "Labels specified the labels added to Pods in this group.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentslabels-"
                  }
                },
                "labelsIgnoreList": {
                  "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentslabelsignorelist-"
                  }
                },
                "labelsMode": {
                  "description": "LabelsMode Define labels mode which should be use while overriding labels",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentslabelsmode-"
                  }
                },
                "maxCount": {
                  "description": "MaxCount specifies a maximum for the count of servers. If set, a specification is invalid if `count \u003e maxCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsmaxcount-"
                  }
                },
                "memoryReservation": {
                  "description": "MemoryReservation determines system reservation of memory while calculating `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` value.\nIf this field is set, `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` is reduced by specified value in percents.\nAccepted Range \u003c0, 50\u003e. If value is outside accepted range, it is adjusted to the closest value.",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsmemoryreservation-"
                  }
                },
                "minCount": {
                  "description": "MinCount specifies a minimum for the count of servers. If set, a specification is invalid if `count \u003c minCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsmincount-"
                  }
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsnodeaffinity-"
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector setting specifies a set of labels to be used as `nodeSelector` for Pods of this node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsnodeselector-"
                  }
                },
                "numactl": {
                  "description": "Numactl define Numactl options passed to the process",
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "Args define list of the numactl process",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsnumactlargs-"
                      }
                    },
                    "enabled": {
                      "description": "Enabled define if numactl should be enabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsnumactlenabled-"
                      }
                    },
                    "path": {
                      "description": "Path define numactl path within the container",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsnumactlpath-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsnumactl-"
                  }
                },
                "overrideDetectedNumberOfCores": {
                  "description": "OverrideDetectedNumberOfCores determines if number of cores should be overridden based on values in resources.\nIf is set to true and Container CPU Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES` to the value from the Container CPU Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsoverridedetectednumberofcores-"
                  }
                },
                "overrideDetectedTotalMemory": {
                  "description": "OverrideDetectedTotalMemory determines if memory should be overridden based on values in resources.\nIf is set to true and Container Memory Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` to the value from the Container Memory Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsoverridedetectedtotalmemory-"
                  }
                },
                "podModes": {
                  "description": "PodModes define additional modes enabled on the Pod level",
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentspodmodesnetwork-"
                      }
                    },
                    "pid": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentspodmodespid-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentspodmodes-"
                  }
                },
                "port": {
                  "description": "Port define Port used by member",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsport-"
                  }
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name\nWill be forwarded to the pod spec.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentspriorityclassname-"
                  }
                },
                "probes": {
                  "description": "Probes specifies additional behaviour for probes",
                  "type": "object",
                  "properties": {
                    "ReadinessProbeDisabled": {
                      "description": "OldReadinessProbeDisabled if true readinessProbes are disabled\nDeprecated: This field is deprecated, keept only for backward compatibility.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesreadinessprobedisabled-"
                      }
                    },
                    "livenessProbeDisabled": {
                      "description": "LivenessProbeDisabled if set to true, the operator does not generate a liveness probe for new pods belonging to this group",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobeslivenessprobedisabled-"
                      }
                    },
                    "livenessProbeSpec": {
                      "description": "LivenessProbeSpec override liveness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobeslivenessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobeslivenessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobeslivenessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobeslivenessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobeslivenessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobeslivenessprobespec-"
                      }
                    },
                    "readinessProbeDisabled": {
                      "description": "ReadinessProbeDisabled override flag for probe disabled in good manner (lowercase) with backward compatibility",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesreadinessprobedisabled-"
                      }
                    },
                    "readinessProbeSpec": {
                      "description": "ReadinessProbeSpec override readiness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesreadinessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesreadinessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesreadinessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesreadinessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesreadinessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesreadinessprobespec-"
                      }
                    },
                    "startupProbeDisabled": {
                      "description": "StartupProbeDisabled if true startupProbes are disabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesstartupprobedisabled-"
                      }
                    },
                    "startupProbeSpec": {
                      "description": "StartupProbeSpec override startup probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesstartupprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesstartupprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesstartupprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesstartupprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesstartupprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobesstartupprobespec-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsprobes-"
                  }
                },
                "pvcResizeMode": {
                  "description": "VolumeResizeMode specified resize mode for PVCs and PVs",
                  "type": "string",
                  "enum": [
                    "runtime",
                    "rotate"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentspvcresizemode-"
                  }
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsresources-"
                  }
                },
                "schedulerName": {
                  "description": "SchedulerName define scheduler name used for group",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsschedulername-"
                  }
                },
                "securityContext": {
                  "description": "SecurityContext specifies additional `securityContext` settings in ArangoDB Pod definitions.\nThis is similar (but not fully compatible) to k8s SecurityContext definition.",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextaddcapabilities-"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextallowprivilegeescalation-"
                      }
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextdropallcapabilities-"
                      }
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextfsgroup-"
                      }
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextprivileged-"
                      }
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextreadonlyrootfilesystem-"
                      }
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextrunasgroup-"
                      }
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextrunasnonroot-"
                      }
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextrunasuser-"
                      }
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextselinuxoptions-"
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextseccompprofile-"
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextsupplementalgroups-"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontextsysctls-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssecuritycontext-"
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName setting specifies the `serviceAccountName` for the `Pods` created\nfor each server of this group. If empty, it defaults to using the\n`default` service account.\nUsing an alternative `ServiceAccount` is typically used to separate access rights.\nThe ArangoDB deployments need some very minimal access rights. With the\ndeployment of the operator, we grant the rights to 'get' all 'pod' resources.\nIf you are using a different service account, please grant these rights\nto that service account.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsserviceaccountname-"
                  }
                },
                "shutdownDelay": {
                  "description": "ShutdownDelay define how long operator should delay finalizer removal after shutdown",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsshutdowndelay-"
                  }
                },
                "shutdownMethod": {
                  "description": "ShutdownMethod describe procedure of member shutdown taken by Operator",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsshutdownmethod-"
                  }
                },
                "sidecarCoreNames": {
                  "description": "SidecarCoreNames is a list of sidecar containers which must run in the pod.\nSome names (e.g.: \"server\", \"worker\") are reserved, and they don't have any impact.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssidecarcorenames-"
                  }
                },
                "sidecars": {
                  "description": "Sidecars specifies a list of additional containers to be started",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "lifecycle": {
                        "type": "object",
                        "properties": {
                          "postStart": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "preStop": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "livenessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "ports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "type": "string"
                            },
                            "hostPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readinessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "type": "object",
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "startupProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "stdin": {
                        "type": "boolean"
                      },
                      "stdinOnce": {
                        "type": "boolean"
                      },
                      "terminationMessagePath": {
                        "type": "string"
                      },
                      "terminationMessagePolicy": {
                        "type": "string"
                      },
                      "tty": {
                        "type": "boolean"
                      },
                      "volumeDevices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "devicePath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentssidecars-"
                  }
                },
                "storageClassName": {
                  "description": "StorageClassName specifies the classname for storage of the servers.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsstorageclassname-"
                  }
                },
                "terminationGracePeriodSeconds": {
                  "description": "TerminationGracePeriodSeconds override default TerminationGracePeriodSeconds for pods - via silent rotation",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsterminationgraceperiodseconds-"
                  }
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.\nBy default, suitable tolerations are set for the following keys with the `NoExecute` effect:\n- `node.kubernetes.io/not-ready`\n- `node.kubernetes.io/unreachable`\n- `node.alpha.kubernetes.io/unreachable` (will be removed in future version)\nFor more information on tolerations, consult the https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentstolerations-"
                  }
                },
                "volumeAllowShrink": {
                  "description": "Deprecated: VolumeAllowShrink allows shrink the volume",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumeallowshrink-"
                  }
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate specifies a volumeClaimTemplate used by operator to create to volume claims for pods of this group.\nThis setting is not available for group `coordinators`, `syncmasters` \u0026 `syncworkers`.\nThe default value describes a volume with `8Gi` storage, `ReadWriteOnce` access mode and volume mode set to `PersistentVolumeFilesystem`.\nIf this field is not set and `spec.\u003cgroup\u003e.resources.requests.storage` is set, then a default volume claim\nwith size as specified by `spec.\u003cgroup\u003e.resources.requests.storage` will be created. In that case `storage`\nand `iops` is not forwarded to the pods resource requirements.",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "creationTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "deletionTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generateName": {
                          "type": "string"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldsType": {
                                "type": "string"
                              },
                              "fieldsV1": {
                                "type": "object"
                              },
                              "manager": {
                                "type": "string"
                              },
                              "operation": {
                                "type": "string"
                              },
                              "subresource": {
                                "type": "string"
                              },
                              "time": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "blockOwnerDeletion": {
                                "type": "boolean"
                              },
                              "controller": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resourceVersion": {
                          "type": "string"
                        },
                        "selfLink": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataSource": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "dataSourceRef": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requests": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "storageClassName": {
                          "type": "string"
                        },
                        "volumeMode": {
                          "type": "string"
                        },
                        "volumeName": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allocatedResources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastProbeTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "lastTransitionTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "type": "string"
                        },
                        "resizeStatus": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumeclaimtemplate-"
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts define list of volume mounts mounted into server container",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "mountPropagation": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      },
                      "subPathExpr": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumemounts-"
                  }
                },
                "volumes": {
                  "description": "Volumes define list of volumes mounted to pod",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumesconfigmap-"
                        }
                      },
                      "emptyDir": {
                        "description": "EmptyDir",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string"
                          },
                          "sizeLimit": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumesemptydir-"
                        }
                      },
                      "hostPath": {
                        "description": "HostPath",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumeshostpath-"
                        }
                      },
                      "name": {
                        "description": "Name of volume",
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumesname-"
                        }
                      },
                      "persistentVolumeClaim": {
                        "description": "PersistentVolumeClaim",
                        "type": "object",
                        "properties": {
                          "claimName": {
                            "type": "string"
                          },
                          "readOnly": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumespersistentvolumeclaim-"
                        }
                      },
                      "secret": {
                        "description": "Secret which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumessecret-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagentsvolumes-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specagents-"
              }
            },
            "allowUnsafeUpgrade": {
              "description": "AllowUnsafeUpgrade determines if upgrade on missing member or with not in sync shards is allowed",
              "type": "boolean",
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specallowunsafeupgrade-"
              }
            },
            "annotations": {
              "description": "Annotations specifies the annotations added to all ArangoDeployment owned resources (pods, services, PVC’s, PDB’s).",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specannotations-"
              }
            },
            "annotationsIgnoreList": {
              "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
              "type": "array",
              "items": {
                "type": "string"
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specannotationsignorelist-"
              }
            },
            "annotationsMode": {
              "description": "AnnotationsMode defines annotations mode which should be use while overriding annotations.",
              "type": "string",
              "enum": [
                "disabled",
                "append",
                "replace"
              ],
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specannotationsmode-"
              }
            },
            "architecture": {
              "description": "Architecture defines the list of supported architectures.\nFirst element on the list is marked as default architecture.\nPossible values are:\n- `amd64`: Use processors with the x86-64 architecture.\n- `arm64`: Use processors with the 64-bit ARM architecture.\nThe setting expects a list of strings, but you should only specify a single\nlist item for the architecture, except when you want to migrate from one\narchitecture to the other. The first list item defines the new default\narchitecture for the deployment that you want to migrate to.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specarchitecture-"
              }
            },
            "auth": {
              "description": "Authentication holds authentication configuration settings",
              "type": "object",
              "properties": {
                "jwtSecretName": {
                  "description": "JWTSecretName setting specifies the name of a kubernetes `Secret` that contains\nthe JWT token used for accessing all ArangoDB servers.\nWhen no name is specified, it defaults to `\u003cdeployment-name\u003e-jwt`.\nTo disable authentication, set this value to `None`.\nIf you specify a name of a `Secret`, that secret must have the token\nin a data field named `token`.\nIf you specify a name of a `Secret` that does not exist, a random token is created\nand stored in a `Secret` with given name.\nChanging a JWT token results in restarting of a whole cluster.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specauthjwtsecretname-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specauth-"
              }
            },
            "bootstrap": {
              "description": "Bootstrap contains information for cluster bootstrapping",
              "type": "object",
              "properties": {
                "passwordSecretNames": {
                  "description": "PasswordSecretNames contains a map of username to password-secret-name\nThis setting specifies a secret name for the credentials per specific users.\nWhen a deployment is created the operator will setup the user accounts\naccording to the credentials given by the secret. If the secret doesn't exist\nthe operator creates a secret with a random password.\nThere are two magic values for the secret name:\n- `None` specifies no action. This disables root password randomization. This is the default value. (Thus the root password is empty - not recommended)\n- `Auto` specifies automatic name generation, which is `\u003cdeploymentname\u003e-root-password`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specbootstrappasswordsecretnames-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specbootstrap-"
              }
            },
            "chaos": {
              "description": "ChaosSpec can be used for chaos-monkey testing of your ArangoDeployment",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Enabled switches the chaos monkey for a deployment on or off.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specchaosenabled-"
                  }
                },
                "interval": {
                  "description": "Interval is the time between events",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specchaosinterval-"
                  }
                },
                "kill-pod-probability": {
                  "description": "KillPodProbability is the chance of a pod being killed during an event",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specchaoskill-pod-probability-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specchaos-"
              }
            },
            "communicationMethod": {
              "description": "CommunicationMethod define communication method used in deployment",
              "type": "string",
              "enum": [
                "headless",
                "dns",
                "short-dns",
                "headless-dns",
                "ip"
              ],
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccommunicationmethod-"
              }
            },
            "coordinators": {
              "description": "Coordinators contains specification for Coordinator pods running in deployment mode `Cluster` or `ActiveFailover`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsaffinity-"
                  }
                },
                "allowMemberRecreation": {
                  "description": "AllowMemberRecreation allows to recreate member.\nThis setting changes the member recreation logic based on group:\n- For Sync Masters, Sync Workers, Coordinator and DB-Servers it determines if a member can be recreated in case of failure (default `true`)\n- For Agents and Single this value is hardcoded to `false` and the value provided in spec is ignored.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsallowmemberrecreation-"
                  }
                },
                "annotations": {
                  "description": "Annotations specified the annotations added to Pods in this group.\nAnnotations are merged with `spec.annotations`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsannotations-"
                  }
                },
                "annotationsIgnoreList": {
                  "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsannotationsignorelist-"
                  }
                },
                "annotationsMode": {
                  "description": "AnnotationsMode Define annotations mode which should be use while overriding annotations",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsannotationsmode-"
                  }
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsantiaffinity-"
                  }
                },
                "args": {
                  "description": "Args setting specifies additional command-line arguments passed to all servers of this group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsargs-"
                  }
                },
                "count": {
                  "description": "Count setting specifies the number of servers to start for the given group.\nFor the Agent group, this value must be a positive, odd number.\nThe default value is `3` for all groups except `single` (there the default is `1`\nfor `spec.mode: Single` and `2` for `spec.mode: ActiveFailover`).\nFor the `syncworkers` group, it is highly recommended to use the same number\nas for the `dbservers` group.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorscount-"
                  }
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsentrypoint-"
                  }
                },
                "envs": {
                  "description": "Envs allow to specify additional envs in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsenvsname-"
                        }
                      },
                      "value": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsenvsvalue-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsenvs-"
                  }
                },
                "ephemeralVolumes": {
                  "description": "EphemeralVolumes keeps information about ephemeral volumes.",
                  "type": "object",
                  "properties": {
                    "apps": {
                      "description": "Apps define apps ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsephemeralvolumesappssize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsephemeralvolumesapps-"
                      }
                    },
                    "temp": {
                      "description": "Temp define temp ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsephemeralvolumestempsize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsephemeralvolumestemp-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsephemeralvolumes-"
                  }
                },
                "exporterPort": {
                  "description": "ExporterPort define Port used by exporter",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsexporterport-"
                  }
                },
                "extendedRotationCheck": {
                  "description": "ExtendedRotationCheck extend checks for rotation",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsextendedrotationcheck-"
                  }
                },
                "externalPortEnabled": {
                  "description": "ExternalPortEnabled if external port should be enabled. If is set to false, ports needs to be exposed via sidecar. Only for ArangoD members",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsexternalportenabled-"
                  }
                },
                "indexMethod": {
                  "description": "IndexMethod define group Indexing method",
                  "type": "string",
                  "enum": [
                    "random",
                    "ordered"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsindexmethod-"
                  }
                },
                "initContainers": {
                  "description": "InitContainers Init containers specification",
                  "type": "object",
                  "properties": {
                    "containers": {
                      "description": "Containers contains list of containers",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "fieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "apiVersion": {
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resourceFieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "containerName": {
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "type": "object",
                                          "properties": {
                                            "": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "resource": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "secretKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "envFrom": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "type": "string"
                          },
                          "lifecycle": {
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "type": "string"
                                },
                                "hostPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "protocol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "readinessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityContext": {
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "drop": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "type": "boolean"
                              },
                              "procMount": {
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "type": "object",
                                "properties": {
                                  "localhostProfile": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "startupProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "stdin": {
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "type": "string"
                          },
                          "tty": {
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumeMounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mountPath": {
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "workingDir": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsinitcontainerscontainers-"
                      }
                    },
                    "mode": {
                      "description": "Mode keep container replace mode",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsinitcontainersmode-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsinitcontainers-"
                  }
                },
                "internalPort": {
                  "description": "InternalPort define port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsinternalport-"
                  }
                },
                "internalPortProtocol": {
                  "description": "InternalPortProtocol define protocol of port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsinternalportprotocol-"
                  }
                },
                "labels": {
                  "description": "Labels specified the labels added to Pods in this group.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorslabels-"
                  }
                },
                "labelsIgnoreList": {
                  "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorslabelsignorelist-"
                  }
                },
                "labelsMode": {
                  "description": "LabelsMode Define labels mode which should be use while overriding labels",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorslabelsmode-"
                  }
                },
                "maxCount": {
                  "description": "MaxCount specifies a maximum for the count of servers. If set, a specification is invalid if `count \u003e maxCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsmaxcount-"
                  }
                },
                "memoryReservation": {
                  "description": "MemoryReservation determines system reservation of memory while calculating `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` value.\nIf this field is set, `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` is reduced by specified value in percents.\nAccepted Range \u003c0, 50\u003e. If value is outside accepted range, it is adjusted to the closest value.",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsmemoryreservation-"
                  }
                },
                "minCount": {
                  "description": "MinCount specifies a minimum for the count of servers. If set, a specification is invalid if `count \u003c minCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsmincount-"
                  }
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsnodeaffinity-"
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector setting specifies a set of labels to be used as `nodeSelector` for Pods of this node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsnodeselector-"
                  }
                },
                "numactl": {
                  "description": "Numactl define Numactl options passed to the process",
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "Args define list of the numactl process",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsnumactlargs-"
                      }
                    },
                    "enabled": {
                      "description": "Enabled define if numactl should be enabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsnumactlenabled-"
                      }
                    },
                    "path": {
                      "description": "Path define numactl path within the container",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsnumactlpath-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsnumactl-"
                  }
                },
                "overrideDetectedNumberOfCores": {
                  "description": "OverrideDetectedNumberOfCores determines if number of cores should be overridden based on values in resources.\nIf is set to true and Container CPU Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES` to the value from the Container CPU Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsoverridedetectednumberofcores-"
                  }
                },
                "overrideDetectedTotalMemory": {
                  "description": "OverrideDetectedTotalMemory determines if memory should be overridden based on values in resources.\nIf is set to true and Container Memory Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` to the value from the Container Memory Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsoverridedetectedtotalmemory-"
                  }
                },
                "podModes": {
                  "description": "PodModes define additional modes enabled on the Pod level",
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorspodmodesnetwork-"
                      }
                    },
                    "pid": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorspodmodespid-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorspodmodes-"
                  }
                },
                "port": {
                  "description": "Port define Port used by member",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsport-"
                  }
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name\nWill be forwarded to the pod spec.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorspriorityclassname-"
                  }
                },
                "probes": {
                  "description": "Probes specifies additional behaviour for probes",
                  "type": "object",
                  "properties": {
                    "ReadinessProbeDisabled": {
                      "description": "OldReadinessProbeDisabled if true readinessProbes are disabled\nDeprecated: This field is deprecated, keept only for backward compatibility.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesreadinessprobedisabled-"
                      }
                    },
                    "livenessProbeDisabled": {
                      "description": "LivenessProbeDisabled if set to true, the operator does not generate a liveness probe for new pods belonging to this group",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobeslivenessprobedisabled-"
                      }
                    },
                    "livenessProbeSpec": {
                      "description": "LivenessProbeSpec override liveness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobeslivenessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobeslivenessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobeslivenessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobeslivenessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobeslivenessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobeslivenessprobespec-"
                      }
                    },
                    "readinessProbeDisabled": {
                      "description": "ReadinessProbeDisabled override flag for probe disabled in good manner (lowercase) with backward compatibility",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesreadinessprobedisabled-"
                      }
                    },
                    "readinessProbeSpec": {
                      "description": "ReadinessProbeSpec override readiness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesreadinessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesreadinessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesreadinessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesreadinessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesreadinessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesreadinessprobespec-"
                      }
                    },
                    "startupProbeDisabled": {
                      "description": "StartupProbeDisabled if true startupProbes are disabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesstartupprobedisabled-"
                      }
                    },
                    "startupProbeSpec": {
                      "description": "StartupProbeSpec override startup probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesstartupprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesstartupprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesstartupprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesstartupprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesstartupprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobesstartupprobespec-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsprobes-"
                  }
                },
                "pvcResizeMode": {
                  "description": "VolumeResizeMode specified resize mode for PVCs and PVs",
                  "type": "string",
                  "enum": [
                    "runtime",
                    "rotate"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorspvcresizemode-"
                  }
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsresources-"
                  }
                },
                "schedulerName": {
                  "description": "SchedulerName define scheduler name used for group",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsschedulername-"
                  }
                },
                "securityContext": {
                  "description": "SecurityContext specifies additional `securityContext` settings in ArangoDB Pod definitions.\nThis is similar (but not fully compatible) to k8s SecurityContext definition.",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextaddcapabilities-"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextallowprivilegeescalation-"
                      }
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextdropallcapabilities-"
                      }
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextfsgroup-"
                      }
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextprivileged-"
                      }
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextreadonlyrootfilesystem-"
                      }
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextrunasgroup-"
                      }
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextrunasnonroot-"
                      }
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextrunasuser-"
                      }
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextselinuxoptions-"
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextseccompprofile-"
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextsupplementalgroups-"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontextsysctls-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssecuritycontext-"
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName setting specifies the `serviceAccountName` for the `Pods` created\nfor each server of this group. If empty, it defaults to using the\n`default` service account.\nUsing an alternative `ServiceAccount` is typically used to separate access rights.\nThe ArangoDB deployments need some very minimal access rights. With the\ndeployment of the operator, we grant the rights to 'get' all 'pod' resources.\nIf you are using a different service account, please grant these rights\nto that service account.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsserviceaccountname-"
                  }
                },
                "shutdownDelay": {
                  "description": "ShutdownDelay define how long operator should delay finalizer removal after shutdown",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsshutdowndelay-"
                  }
                },
                "shutdownMethod": {
                  "description": "ShutdownMethod describe procedure of member shutdown taken by Operator",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsshutdownmethod-"
                  }
                },
                "sidecarCoreNames": {
                  "description": "SidecarCoreNames is a list of sidecar containers which must run in the pod.\nSome names (e.g.: \"server\", \"worker\") are reserved, and they don't have any impact.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssidecarcorenames-"
                  }
                },
                "sidecars": {
                  "description": "Sidecars specifies a list of additional containers to be started",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "lifecycle": {
                        "type": "object",
                        "properties": {
                          "postStart": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "preStop": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "livenessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "ports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "type": "string"
                            },
                            "hostPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readinessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "type": "object",
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "startupProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "stdin": {
                        "type": "boolean"
                      },
                      "stdinOnce": {
                        "type": "boolean"
                      },
                      "terminationMessagePath": {
                        "type": "string"
                      },
                      "terminationMessagePolicy": {
                        "type": "string"
                      },
                      "tty": {
                        "type": "boolean"
                      },
                      "volumeDevices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "devicePath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorssidecars-"
                  }
                },
                "storageClassName": {
                  "description": "StorageClassName specifies the classname for storage of the servers.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsstorageclassname-"
                  }
                },
                "terminationGracePeriodSeconds": {
                  "description": "TerminationGracePeriodSeconds override default TerminationGracePeriodSeconds for pods - via silent rotation",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsterminationgraceperiodseconds-"
                  }
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.\nBy default, suitable tolerations are set for the following keys with the `NoExecute` effect:\n- `node.kubernetes.io/not-ready`\n- `node.kubernetes.io/unreachable`\n- `node.alpha.kubernetes.io/unreachable` (will be removed in future version)\nFor more information on tolerations, consult the https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorstolerations-"
                  }
                },
                "volumeAllowShrink": {
                  "description": "Deprecated: VolumeAllowShrink allows shrink the volume",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumeallowshrink-"
                  }
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate specifies a volumeClaimTemplate used by operator to create to volume claims for pods of this group.\nThis setting is not available for group `coordinators`, `syncmasters` \u0026 `syncworkers`.\nThe default value describes a volume with `8Gi` storage, `ReadWriteOnce` access mode and volume mode set to `PersistentVolumeFilesystem`.\nIf this field is not set and `spec.\u003cgroup\u003e.resources.requests.storage` is set, then a default volume claim\nwith size as specified by `spec.\u003cgroup\u003e.resources.requests.storage` will be created. In that case `storage`\nand `iops` is not forwarded to the pods resource requirements.",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "creationTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "deletionTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generateName": {
                          "type": "string"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldsType": {
                                "type": "string"
                              },
                              "fieldsV1": {
                                "type": "object"
                              },
                              "manager": {
                                "type": "string"
                              },
                              "operation": {
                                "type": "string"
                              },
                              "subresource": {
                                "type": "string"
                              },
                              "time": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "blockOwnerDeletion": {
                                "type": "boolean"
                              },
                              "controller": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resourceVersion": {
                          "type": "string"
                        },
                        "selfLink": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataSource": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "dataSourceRef": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requests": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "storageClassName": {
                          "type": "string"
                        },
                        "volumeMode": {
                          "type": "string"
                        },
                        "volumeName": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allocatedResources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastProbeTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "lastTransitionTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "type": "string"
                        },
                        "resizeStatus": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumeclaimtemplate-"
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts define list of volume mounts mounted into server container",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "mountPropagation": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      },
                      "subPathExpr": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumemounts-"
                  }
                },
                "volumes": {
                  "description": "Volumes define list of volumes mounted to pod",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumesconfigmap-"
                        }
                      },
                      "emptyDir": {
                        "description": "EmptyDir",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string"
                          },
                          "sizeLimit": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumesemptydir-"
                        }
                      },
                      "hostPath": {
                        "description": "HostPath",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumeshostpath-"
                        }
                      },
                      "name": {
                        "description": "Name of volume",
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumesname-"
                        }
                      },
                      "persistentVolumeClaim": {
                        "description": "PersistentVolumeClaim",
                        "type": "object",
                        "properties": {
                          "claimName": {
                            "type": "string"
                          },
                          "readOnly": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumespersistentvolumeclaim-"
                        }
                      },
                      "secret": {
                        "description": "Secret which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumessecret-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinatorsvolumes-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speccoordinators-"
              }
            },
            "database": {
              "description": "Database holds information about database state, like maintenance mode",
              "type": "object",
              "properties": {
                "maintenance": {
                  "description": "Maintenance manage maintenance mode on Cluster side. Requires maintenance feature to be enabled",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdatabasemaintenance-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdatabase-"
              }
            },
            "dbservers": {
              "description": "DBServers contains specification for DBServer pods running in deployment mode `Cluster` or `ActiveFailover`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversaffinity-"
                  }
                },
                "allowMemberRecreation": {
                  "description": "AllowMemberRecreation allows to recreate member.\nThis setting changes the member recreation logic based on group:\n- For Sync Masters, Sync Workers, Coordinator and DB-Servers it determines if a member can be recreated in case of failure (default `true`)\n- For Agents and Single this value is hardcoded to `false` and the value provided in spec is ignored.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversallowmemberrecreation-"
                  }
                },
                "annotations": {
                  "description": "Annotations specified the annotations added to Pods in this group.\nAnnotations are merged with `spec.annotations`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversannotations-"
                  }
                },
                "annotationsIgnoreList": {
                  "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversannotationsignorelist-"
                  }
                },
                "annotationsMode": {
                  "description": "AnnotationsMode Define annotations mode which should be use while overriding annotations",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversannotationsmode-"
                  }
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversantiaffinity-"
                  }
                },
                "args": {
                  "description": "Args setting specifies additional command-line arguments passed to all servers of this group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversargs-"
                  }
                },
                "count": {
                  "description": "Count setting specifies the number of servers to start for the given group.\nFor the Agent group, this value must be a positive, odd number.\nThe default value is `3` for all groups except `single` (there the default is `1`\nfor `spec.mode: Single` and `2` for `spec.mode: ActiveFailover`).\nFor the `syncworkers` group, it is highly recommended to use the same number\nas for the `dbservers` group.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverscount-"
                  }
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversentrypoint-"
                  }
                },
                "envs": {
                  "description": "Envs allow to specify additional envs in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversenvsname-"
                        }
                      },
                      "value": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversenvsvalue-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversenvs-"
                  }
                },
                "ephemeralVolumes": {
                  "description": "EphemeralVolumes keeps information about ephemeral volumes.",
                  "type": "object",
                  "properties": {
                    "apps": {
                      "description": "Apps define apps ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversephemeralvolumesappssize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversephemeralvolumesapps-"
                      }
                    },
                    "temp": {
                      "description": "Temp define temp ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversephemeralvolumestempsize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversephemeralvolumestemp-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversephemeralvolumes-"
                  }
                },
                "exporterPort": {
                  "description": "ExporterPort define Port used by exporter",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversexporterport-"
                  }
                },
                "extendedRotationCheck": {
                  "description": "ExtendedRotationCheck extend checks for rotation",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversextendedrotationcheck-"
                  }
                },
                "externalPortEnabled": {
                  "description": "ExternalPortEnabled if external port should be enabled. If is set to false, ports needs to be exposed via sidecar. Only for ArangoD members",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversexternalportenabled-"
                  }
                },
                "indexMethod": {
                  "description": "IndexMethod define group Indexing method",
                  "type": "string",
                  "enum": [
                    "random",
                    "ordered"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversindexmethod-"
                  }
                },
                "initContainers": {
                  "description": "InitContainers Init containers specification",
                  "type": "object",
                  "properties": {
                    "containers": {
                      "description": "Containers contains list of containers",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "fieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "apiVersion": {
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resourceFieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "containerName": {
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "type": "object",
                                          "properties": {
                                            "": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "resource": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "secretKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "envFrom": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "type": "string"
                          },
                          "lifecycle": {
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "type": "string"
                                },
                                "hostPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "protocol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "readinessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityContext": {
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "drop": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "type": "boolean"
                              },
                              "procMount": {
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "type": "object",
                                "properties": {
                                  "localhostProfile": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "startupProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "stdin": {
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "type": "string"
                          },
                          "tty": {
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumeMounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mountPath": {
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "workingDir": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversinitcontainerscontainers-"
                      }
                    },
                    "mode": {
                      "description": "Mode keep container replace mode",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversinitcontainersmode-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversinitcontainers-"
                  }
                },
                "internalPort": {
                  "description": "InternalPort define port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversinternalport-"
                  }
                },
                "internalPortProtocol": {
                  "description": "InternalPortProtocol define protocol of port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversinternalportprotocol-"
                  }
                },
                "labels": {
                  "description": "Labels specified the labels added to Pods in this group.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverslabels-"
                  }
                },
                "labelsIgnoreList": {
                  "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverslabelsignorelist-"
                  }
                },
                "labelsMode": {
                  "description": "LabelsMode Define labels mode which should be use while overriding labels",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverslabelsmode-"
                  }
                },
                "maxCount": {
                  "description": "MaxCount specifies a maximum for the count of servers. If set, a specification is invalid if `count \u003e maxCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversmaxcount-"
                  }
                },
                "memoryReservation": {
                  "description": "MemoryReservation determines system reservation of memory while calculating `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` value.\nIf this field is set, `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` is reduced by specified value in percents.\nAccepted Range \u003c0, 50\u003e. If value is outside accepted range, it is adjusted to the closest value.",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversmemoryreservation-"
                  }
                },
                "minCount": {
                  "description": "MinCount specifies a minimum for the count of servers. If set, a specification is invalid if `count \u003c minCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversmincount-"
                  }
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversnodeaffinity-"
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector setting specifies a set of labels to be used as `nodeSelector` for Pods of this node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversnodeselector-"
                  }
                },
                "numactl": {
                  "description": "Numactl define Numactl options passed to the process",
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "Args define list of the numactl process",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversnumactlargs-"
                      }
                    },
                    "enabled": {
                      "description": "Enabled define if numactl should be enabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversnumactlenabled-"
                      }
                    },
                    "path": {
                      "description": "Path define numactl path within the container",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversnumactlpath-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversnumactl-"
                  }
                },
                "overrideDetectedNumberOfCores": {
                  "description": "OverrideDetectedNumberOfCores determines if number of cores should be overridden based on values in resources.\nIf is set to true and Container CPU Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES` to the value from the Container CPU Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversoverridedetectednumberofcores-"
                  }
                },
                "overrideDetectedTotalMemory": {
                  "description": "OverrideDetectedTotalMemory determines if memory should be overridden based on values in resources.\nIf is set to true and Container Memory Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` to the value from the Container Memory Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversoverridedetectedtotalmemory-"
                  }
                },
                "podModes": {
                  "description": "PodModes define additional modes enabled on the Pod level",
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverspodmodesnetwork-"
                      }
                    },
                    "pid": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverspodmodespid-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverspodmodes-"
                  }
                },
                "port": {
                  "description": "Port define Port used by member",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversport-"
                  }
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name\nWill be forwarded to the pod spec.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverspriorityclassname-"
                  }
                },
                "probes": {
                  "description": "Probes specifies additional behaviour for probes",
                  "type": "object",
                  "properties": {
                    "ReadinessProbeDisabled": {
                      "description": "OldReadinessProbeDisabled if true readinessProbes are disabled\nDeprecated: This field is deprecated, keept only for backward compatibility.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesreadinessprobedisabled-"
                      }
                    },
                    "livenessProbeDisabled": {
                      "description": "LivenessProbeDisabled if set to true, the operator does not generate a liveness probe for new pods belonging to this group",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobeslivenessprobedisabled-"
                      }
                    },
                    "livenessProbeSpec": {
                      "description": "LivenessProbeSpec override liveness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobeslivenessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobeslivenessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobeslivenessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobeslivenessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobeslivenessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobeslivenessprobespec-"
                      }
                    },
                    "readinessProbeDisabled": {
                      "description": "ReadinessProbeDisabled override flag for probe disabled in good manner (lowercase) with backward compatibility",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesreadinessprobedisabled-"
                      }
                    },
                    "readinessProbeSpec": {
                      "description": "ReadinessProbeSpec override readiness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesreadinessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesreadinessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesreadinessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesreadinessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesreadinessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesreadinessprobespec-"
                      }
                    },
                    "startupProbeDisabled": {
                      "description": "StartupProbeDisabled if true startupProbes are disabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesstartupprobedisabled-"
                      }
                    },
                    "startupProbeSpec": {
                      "description": "StartupProbeSpec override startup probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesstartupprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesstartupprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesstartupprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesstartupprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesstartupprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobesstartupprobespec-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversprobes-"
                  }
                },
                "pvcResizeMode": {
                  "description": "VolumeResizeMode specified resize mode for PVCs and PVs",
                  "type": "string",
                  "enum": [
                    "runtime",
                    "rotate"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverspvcresizemode-"
                  }
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversresources-"
                  }
                },
                "schedulerName": {
                  "description": "SchedulerName define scheduler name used for group",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversschedulername-"
                  }
                },
                "securityContext": {
                  "description": "SecurityContext specifies additional `securityContext` settings in ArangoDB Pod definitions.\nThis is similar (but not fully compatible) to k8s SecurityContext definition.",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextaddcapabilities-"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextallowprivilegeescalation-"
                      }
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextdropallcapabilities-"
                      }
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextfsgroup-"
                      }
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextprivileged-"
                      }
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextreadonlyrootfilesystem-"
                      }
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextrunasgroup-"
                      }
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextrunasnonroot-"
                      }
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextrunasuser-"
                      }
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextselinuxoptions-"
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextseccompprofile-"
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextsupplementalgroups-"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontextsysctls-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssecuritycontext-"
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName setting specifies the `serviceAccountName` for the `Pods` created\nfor each server of this group. If empty, it defaults to using the\n`default` service account.\nUsing an alternative `ServiceAccount` is typically used to separate access rights.\nThe ArangoDB deployments need some very minimal access rights. With the\ndeployment of the operator, we grant the rights to 'get' all 'pod' resources.\nIf you are using a different service account, please grant these rights\nto that service account.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversserviceaccountname-"
                  }
                },
                "shutdownDelay": {
                  "description": "ShutdownDelay define how long operator should delay finalizer removal after shutdown",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversshutdowndelay-"
                  }
                },
                "shutdownMethod": {
                  "description": "ShutdownMethod describe procedure of member shutdown taken by Operator",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversshutdownmethod-"
                  }
                },
                "sidecarCoreNames": {
                  "description": "SidecarCoreNames is a list of sidecar containers which must run in the pod.\nSome names (e.g.: \"server\", \"worker\") are reserved, and they don't have any impact.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssidecarcorenames-"
                  }
                },
                "sidecars": {
                  "description": "Sidecars specifies a list of additional containers to be started",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "lifecycle": {
                        "type": "object",
                        "properties": {
                          "postStart": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "preStop": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "livenessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "ports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "type": "string"
                            },
                            "hostPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readinessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "type": "object",
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "startupProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "stdin": {
                        "type": "boolean"
                      },
                      "stdinOnce": {
                        "type": "boolean"
                      },
                      "terminationMessagePath": {
                        "type": "string"
                      },
                      "terminationMessagePolicy": {
                        "type": "string"
                      },
                      "tty": {
                        "type": "boolean"
                      },
                      "volumeDevices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "devicePath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverssidecars-"
                  }
                },
                "storageClassName": {
                  "description": "StorageClassName specifies the classname for storage of the servers.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversstorageclassname-"
                  }
                },
                "terminationGracePeriodSeconds": {
                  "description": "TerminationGracePeriodSeconds override default TerminationGracePeriodSeconds for pods - via silent rotation",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversterminationgraceperiodseconds-"
                  }
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.\nBy default, suitable tolerations are set for the following keys with the `NoExecute` effect:\n- `node.kubernetes.io/not-ready`\n- `node.kubernetes.io/unreachable`\n- `node.alpha.kubernetes.io/unreachable` (will be removed in future version)\nFor more information on tolerations, consult the https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserverstolerations-"
                  }
                },
                "volumeAllowShrink": {
                  "description": "Deprecated: VolumeAllowShrink allows shrink the volume",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumeallowshrink-"
                  }
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate specifies a volumeClaimTemplate used by operator to create to volume claims for pods of this group.\nThis setting is not available for group `coordinators`, `syncmasters` \u0026 `syncworkers`.\nThe default value describes a volume with `8Gi` storage, `ReadWriteOnce` access mode and volume mode set to `PersistentVolumeFilesystem`.\nIf this field is not set and `spec.\u003cgroup\u003e.resources.requests.storage` is set, then a default volume claim\nwith size as specified by `spec.\u003cgroup\u003e.resources.requests.storage` will be created. In that case `storage`\nand `iops` is not forwarded to the pods resource requirements.",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "creationTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "deletionTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generateName": {
                          "type": "string"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldsType": {
                                "type": "string"
                              },
                              "fieldsV1": {
                                "type": "object"
                              },
                              "manager": {
                                "type": "string"
                              },
                              "operation": {
                                "type": "string"
                              },
                              "subresource": {
                                "type": "string"
                              },
                              "time": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "blockOwnerDeletion": {
                                "type": "boolean"
                              },
                              "controller": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resourceVersion": {
                          "type": "string"
                        },
                        "selfLink": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataSource": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "dataSourceRef": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requests": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "storageClassName": {
                          "type": "string"
                        },
                        "volumeMode": {
                          "type": "string"
                        },
                        "volumeName": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allocatedResources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastProbeTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "lastTransitionTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "type": "string"
                        },
                        "resizeStatus": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumeclaimtemplate-"
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts define list of volume mounts mounted into server container",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "mountPropagation": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      },
                      "subPathExpr": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumemounts-"
                  }
                },
                "volumes": {
                  "description": "Volumes define list of volumes mounted to pod",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumesconfigmap-"
                        }
                      },
                      "emptyDir": {
                        "description": "EmptyDir",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string"
                          },
                          "sizeLimit": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumesemptydir-"
                        }
                      },
                      "hostPath": {
                        "description": "HostPath",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumeshostpath-"
                        }
                      },
                      "name": {
                        "description": "Name of volume",
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumesname-"
                        }
                      },
                      "persistentVolumeClaim": {
                        "description": "PersistentVolumeClaim",
                        "type": "object",
                        "properties": {
                          "claimName": {
                            "type": "string"
                          },
                          "readOnly": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumespersistentvolumeclaim-"
                        }
                      },
                      "secret": {
                        "description": "Secret which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumessecret-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbserversvolumes-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdbservers-"
              }
            },
            "disableIPv6": {
              "description": "DisableIPv6 setting prevents the use of IPv6 addresses by ArangoDB servers.\nThis setting cannot be changed after the deployment has been created.",
              "type": "boolean",
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdisableipv6-"
              }
            },
            "downtimeAllowed": {
              "description": "DowntimeAllowed setting is used to allow automatic reconciliation actions that yield some downtime of the ArangoDB deployment.\nWhen this setting is set to false, no automatic action that may result in downtime is allowed.\nIf the need for such an action is detected, an event is added to the ArangoDeployment.\nOnce this setting is set to true, the automatic action is executed.\nOperations that may result in downtime are:\n- Rotating TLS CA certificate\nNote: It is still possible that there is some downtime when the Kubernetes cluster is down, or in a bad state, irrespective of the value of this setting.",
              "type": "boolean",
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specdowntimeallowed-"
              }
            },
            "environment": {
              "description": "Environment setting specifies the type of environment in which the deployment is created.",
              "type": "string",
              "enum": [
                "Development",
                "Production"
              ],
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specenvironment-"
              }
            },
            "externalAccess": {
              "description": "ExternalAccess holds configuration for the external access provided for the deployment.",
              "type": "object",
              "properties": {
                "advertisedEndpoint": {
                  "description": "AdvertisedEndpoint is passed to the coordinators/single servers for advertising a specific endpoint",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specexternalaccessadvertisedendpoint-"
                  }
                },
                "loadBalancerIP": {
                  "description": "LoadBalancerIP define optional IP used to configure a load-balancer on, in case of Auto or LoadBalancer type.\nIf you do not specify this setting, an IP will be chosen automatically by the load-balancer provisioner.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specexternalaccessloadbalancerip-"
                  }
                },
                "loadBalancerSourceRanges": {
                  "description": "LoadBalancerSourceRanges define LoadBalancerSourceRanges used for LoadBalancer Service type\nIf specified and supported by the platform, this will restrict traffic through the cloud-provider\nload-balancer will be restricted to the specified client IPs. This field will be ignored if the\ncloud-provider does not support the feature.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specexternalaccessloadbalancersourceranges-"
                  }
                },
                "managedServiceNames": {
                  "description": "ManagedServiceNames keeps names of services which are not managed by KubeArangoDB.\nIt is only relevant when type of service is `managed`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specexternalaccessmanagedservicenames-"
                  }
                },
                "nodePort": {
                  "description": "NodePort define optional port used in case of Auto or NodePort type.\nThis setting is used when `spec.externalAccess.type` is set to `NodePort` or `Auto`.\nIf you do not specify this setting, a random port will be chosen automatically.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specexternalaccessnodeport-"
                  }
                },
                "type": {
                  "description": "Type specifies the type of Service that will be created to provide access to the ArangoDB deployment from outside the Kubernetes cluster.",
                  "type": "string",
                  "enum": [
                    "Auto",
                    "None",
                    "LoadBalancer",
                    "NodePort"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specexternalaccesstype-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specexternalaccess-"
              }
            },
            "features": {
              "description": "Features allows to configure feature flags",
              "type": "object",
              "properties": {
                "foxx.queues": {
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specfeaturesfoxxqueues-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specfeatures-"
              }
            },
            "id": {
              "description": "ServerIDGroupSpec contains the specification for Image Discovery image.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidaffinity-"
                  }
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidantiaffinity-"
                  }
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidentrypoint-"
                  }
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidnodeaffinity-"
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector specifies a set of selectors for nodes",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidnodeselector-"
                  }
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidpriorityclassname-"
                  }
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidresources-"
                  }
                },
                "securityContext": {
                  "description": "SecurityContext specifies security context for group",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextaddcapabilities-"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextallowprivilegeescalation-"
                      }
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextdropallcapabilities-"
                      }
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextfsgroup-"
                      }
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextprivileged-"
                      }
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextreadonlyrootfilesystem-"
                      }
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextrunasgroup-"
                      }
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextrunasnonroot-"
                      }
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextrunasuser-"
                      }
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextselinuxoptions-"
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextseccompprofile-"
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextsupplementalgroups-"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontextsysctls-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidsecuritycontext-"
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName specifies the name of the service account used for Pods in this group.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidserviceaccountname-"
                  }
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specidtolerations-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specid-"
              }
            },
            "image": {
              "description": "Image specifies the docker image to use for all ArangoDB servers.\nIn a development environment this setting defaults to arangodb/arangodb:latest.\nFor production environments this is a required setting without a default value.\nIt is highly recommend to use explicit version (not latest) for production environments.",
              "type": "string",
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specimage-"
              }
            },
            "imageDiscoveryMode": {
              "description": "ImageDiscoveryMode specifies the image discovery mode.",
              "type": "string",
              "enum": [
                "kubelet",
                "direct"
              ],
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specimagediscoverymode-"
              }
            },
            "imagePullPolicy": {
              "description": "ImagePullPolicy specifies the pull policy for the docker image to use for all ArangoDB servers.",
              "type": "string",
              "enum": [
                "Always",
                "Never",
                "IfNotPresent"
              ],
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specimagepullpolicy-"
              }
            },
            "imagePullSecrets": {
              "description": "ImagePullSecrets specifies the list of image pull secrets for the docker image to use for all ArangoDB servers.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specimagepullsecrets-"
              }
            },
            "labels": {
              "description": "Labels specifies the labels added to Pods in this group.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speclabels-"
              }
            },
            "labelsIgnoreList": {
              "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
              "type": "array",
              "items": {
                "type": "string"
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speclabelsignorelist-"
              }
            },
            "labelsMode": {
              "description": "LabelsMode Define labels mode which should be use while overriding labels",
              "type": "string",
              "enum": [
                "disabled",
                "append",
                "replace"
              ],
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speclabelsmode-"
              }
            },
            "license": {
              "description": "License holds license settings",
              "type": "object",
              "properties": {
                "secretName": {
                  "description": "SecretName setting specifies the name of a kubernetes `Secret` that contains\nthe license key token used for enterprise images. This value is not used for\nthe Community Edition.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speclicensesecretname-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speclicense-"
              }
            },
            "lifecycle": {
              "description": "Lifecycle holds lifecycle configuration settings",
              "type": "object",
              "properties": {
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speclifecycleresources-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#speclifecycle-"
              }
            },
            "memberPropagationMode": {
              "description": "MemberPropagationMode defines how changes to pod spec should be propogated.\nChanges to a pod’s configuration require a restart of that pod in almost all cases.\nPods are restarted eagerly by default, which can cause more restarts than desired, especially when updating arangod as well as the operator.\nThe propagation of the configuration changes can be deferred to the next restart, either triggered manually by the user or by another operation like an upgrade.\nThis reduces the number of restarts for upgrading both the server and the operator from two to one.",
              "type": "string",
              "enum": [
                "always",
                "on-restart"
              ],
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmemberpropagationmode-"
              }
            },
            "metrics": {
              "description": "Metrics holds metrics configuration settings",
              "type": "object",
              "properties": {
                "authentication": {
                  "type": "object",
                  "properties": {
                    "jwtTokenSecretName": {
                      "description": "JWTTokenSecretName contains the name of the JWT kubernetes secret used for authentication",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsauthenticationjwttokensecretname-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsauthentication-"
                  }
                },
                "enabled": {
                  "description": "Enabled if this is set to `true`, the operator runs a sidecar container for\nevery Agent, DB-Server, Coordinator and Single server.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsenabled-"
                  }
                },
                "image": {
                  "description": "deprecated",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsimage-"
                  }
                },
                "mode": {
                  "description": "deprecated",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsmode-"
                  }
                },
                "port": {
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsport-"
                  }
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsresources-"
                  }
                },
                "serviceMonitor": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsservicemonitorenabled-"
                      }
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsservicemonitorlabels-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricsservicemonitor-"
                  }
                },
                "tls": {
                  "description": "TLS defines if TLS should be enabled on Metrics exporter endpoint.\nThis option will enable TLS only if TLS is enabled on ArangoDeployment,\notherwise `true` value will not take any effect.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetricstls-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmetrics-"
              }
            },
            "mode": {
              "description": "Mode specifies the type of ArangoDB deployment to create.",
              "type": "string",
              "enum": [
                "Cluster",
                "ActiveFailover",
                "Single"
              ],
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specmode-"
              },
              "x-kubernetes-validations": [
                {
                  "rule": "self.spec.mode == oldSelf.spec.mode",
                  "message": "field spec.mode is immutable"
                }
              ]
            },
            "networkAttachedVolumes": {
              "description": "NetworkAttachedVolumes\nIf set to `true`, a ResignLeadership operation will be triggered when a DB-Server pod is evicted (rather than a CleanOutServer operation).\nFurthermore, the pod will simply be redeployed on a different node, rather than cleaned and retired and replaced by a new member.\nYou must only set this option to true if your persistent volumes are “movable” in the sense that they can be mounted from a different k8s node, like in the case of network attached volumes.\nIf your persistent volumes are tied to a specific pod, you must leave this option on false.",
              "type": "boolean",
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specnetworkattachedvolumes-"
              }
            },
            "rebalancer": {
              "description": "Rebalancer defines the rebalancer specification",
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrebalancerenabled-"
                  }
                },
                "optimizers": {
                  "type": "object",
                  "properties": {
                    "leader": {
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrebalanceroptimizersleader-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrebalanceroptimizers-"
                  }
                },
                "parallelMoves": {
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrebalancerparallelmoves-"
                  }
                },
                "readers": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "deprecated does not work in Rebalancer V2\nCount Enable Shard Count machanism",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrebalancerreaderscount-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrebalancerreaders-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrebalancer-"
              }
            },
            "recovery": {
              "description": "Recovery specifies configuration related to cluster recovery.",
              "type": "object",
              "properties": {
                "autoRecover": {
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrecoveryautorecover-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrecovery-"
              }
            },
            "restoreEncryptionSecret": {
              "description": "RestoreEncryptionSecret specifies optional name of secret which contains encryption key used for restore",
              "type": "string",
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrestoreencryptionsecret-"
              }
            },
            "restoreFrom": {
              "description": "RestoreFrom setting specifies a `ArangoBackup` resource name the cluster should be restored from.\nAfter a restore or failure to do so, the status of the deployment contains information about the restore operation in the restore key.\nIt will contain some of the following fields:\n- `requestedFrom`: name of the ArangoBackup used to restore from.\n- `message`: optional message explaining why the restore failed.\n- `state`: state indicating if the restore was successful or not. Possible values: Restoring, Restored, RestoreFailed\nIf the restoreFrom key is removed from the spec, the restore key is deleted as well.\nA new restore attempt is made if and only if either in the status restore is not set or if spec.restoreFrom and status.requestedFrom are different.",
              "type": "string",
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrestorefrom-"
              }
            },
            "rocksdb": {
              "description": "RocksDB holds rocksdb-specific configuration settings",
              "type": "object",
              "properties": {
                "encryption": {
                  "type": "object",
                  "properties": {
                    "keySecretName": {
                      "description": "KeySecretName setting specifies the name of a Kubernetes `Secret` that contains an encryption key used for encrypting all data stored by ArangoDB servers.\nWhen an encryption key is used, encryption of the data in the cluster is enabled, without it encryption is disabled.\nThe default value is empty.\nThis requires the Enterprise Edition.\nThe encryption key cannot be changed after the cluster has been created.\nThe secret specified by this setting, must have a data field named 'key' containing an encryption key that is exactly 32 bytes long.",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrocksdbencryptionkeysecretname-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrocksdbencryption-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specrocksdb-"
              }
            },
            "single": {
              "description": "Single contains specification for servers running in deployment mode `Single` or `ActiveFailover`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleaffinity-"
                  }
                },
                "allowMemberRecreation": {
                  "description": "AllowMemberRecreation allows to recreate member.\nThis setting changes the member recreation logic based on group:\n- For Sync Masters, Sync Workers, Coordinator and DB-Servers it determines if a member can be recreated in case of failure (default `true`)\n- For Agents and Single this value is hardcoded to `false` and the value provided in spec is ignored.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleallowmemberrecreation-"
                  }
                },
                "annotations": {
                  "description": "Annotations specified the annotations added to Pods in this group.\nAnnotations are merged with `spec.annotations`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleannotations-"
                  }
                },
                "annotationsIgnoreList": {
                  "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleannotationsignorelist-"
                  }
                },
                "annotationsMode": {
                  "description": "AnnotationsMode Define annotations mode which should be use while overriding annotations",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleannotationsmode-"
                  }
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleantiaffinity-"
                  }
                },
                "args": {
                  "description": "Args setting specifies additional command-line arguments passed to all servers of this group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleargs-"
                  }
                },
                "count": {
                  "description": "Count setting specifies the number of servers to start for the given group.\nFor the Agent group, this value must be a positive, odd number.\nThe default value is `3` for all groups except `single` (there the default is `1`\nfor `spec.mode: Single` and `2` for `spec.mode: ActiveFailover`).\nFor the `syncworkers` group, it is highly recommended to use the same number\nas for the `dbservers` group.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglecount-"
                  }
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleentrypoint-"
                  }
                },
                "envs": {
                  "description": "Envs allow to specify additional envs in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleenvsname-"
                        }
                      },
                      "value": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleenvsvalue-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleenvs-"
                  }
                },
                "ephemeralVolumes": {
                  "description": "EphemeralVolumes keeps information about ephemeral volumes.",
                  "type": "object",
                  "properties": {
                    "apps": {
                      "description": "Apps define apps ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleephemeralvolumesappssize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleephemeralvolumesapps-"
                      }
                    },
                    "temp": {
                      "description": "Temp define temp ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleephemeralvolumestempsize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleephemeralvolumestemp-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleephemeralvolumes-"
                  }
                },
                "exporterPort": {
                  "description": "ExporterPort define Port used by exporter",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleexporterport-"
                  }
                },
                "extendedRotationCheck": {
                  "description": "ExtendedRotationCheck extend checks for rotation",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleextendedrotationcheck-"
                  }
                },
                "externalPortEnabled": {
                  "description": "ExternalPortEnabled if external port should be enabled. If is set to false, ports needs to be exposed via sidecar. Only for ArangoD members",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleexternalportenabled-"
                  }
                },
                "indexMethod": {
                  "description": "IndexMethod define group Indexing method",
                  "type": "string",
                  "enum": [
                    "random",
                    "ordered"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleindexmethod-"
                  }
                },
                "initContainers": {
                  "description": "InitContainers Init containers specification",
                  "type": "object",
                  "properties": {
                    "containers": {
                      "description": "Containers contains list of containers",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "fieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "apiVersion": {
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resourceFieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "containerName": {
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "type": "object",
                                          "properties": {
                                            "": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "resource": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "secretKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "envFrom": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "type": "string"
                          },
                          "lifecycle": {
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "type": "string"
                                },
                                "hostPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "protocol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "readinessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityContext": {
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "drop": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "type": "boolean"
                              },
                              "procMount": {
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "type": "object",
                                "properties": {
                                  "localhostProfile": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "startupProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "stdin": {
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "type": "string"
                          },
                          "tty": {
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumeMounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mountPath": {
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "workingDir": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleinitcontainerscontainers-"
                      }
                    },
                    "mode": {
                      "description": "Mode keep container replace mode",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleinitcontainersmode-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleinitcontainers-"
                  }
                },
                "internalPort": {
                  "description": "InternalPort define port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleinternalport-"
                  }
                },
                "internalPortProtocol": {
                  "description": "InternalPortProtocol define protocol of port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleinternalportprotocol-"
                  }
                },
                "labels": {
                  "description": "Labels specified the labels added to Pods in this group.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglelabels-"
                  }
                },
                "labelsIgnoreList": {
                  "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglelabelsignorelist-"
                  }
                },
                "labelsMode": {
                  "description": "LabelsMode Define labels mode which should be use while overriding labels",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglelabelsmode-"
                  }
                },
                "maxCount": {
                  "description": "MaxCount specifies a maximum for the count of servers. If set, a specification is invalid if `count \u003e maxCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglemaxcount-"
                  }
                },
                "memoryReservation": {
                  "description": "MemoryReservation determines system reservation of memory while calculating `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` value.\nIf this field is set, `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` is reduced by specified value in percents.\nAccepted Range \u003c0, 50\u003e. If value is outside accepted range, it is adjusted to the closest value.",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglememoryreservation-"
                  }
                },
                "minCount": {
                  "description": "MinCount specifies a minimum for the count of servers. If set, a specification is invalid if `count \u003c minCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglemincount-"
                  }
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglenodeaffinity-"
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector setting specifies a set of labels to be used as `nodeSelector` for Pods of this node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglenodeselector-"
                  }
                },
                "numactl": {
                  "description": "Numactl define Numactl options passed to the process",
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "Args define list of the numactl process",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglenumactlargs-"
                      }
                    },
                    "enabled": {
                      "description": "Enabled define if numactl should be enabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglenumactlenabled-"
                      }
                    },
                    "path": {
                      "description": "Path define numactl path within the container",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglenumactlpath-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglenumactl-"
                  }
                },
                "overrideDetectedNumberOfCores": {
                  "description": "OverrideDetectedNumberOfCores determines if number of cores should be overridden based on values in resources.\nIf is set to true and Container CPU Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES` to the value from the Container CPU Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleoverridedetectednumberofcores-"
                  }
                },
                "overrideDetectedTotalMemory": {
                  "description": "OverrideDetectedTotalMemory determines if memory should be overridden based on values in resources.\nIf is set to true and Container Memory Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` to the value from the Container Memory Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleoverridedetectedtotalmemory-"
                  }
                },
                "podModes": {
                  "description": "PodModes define additional modes enabled on the Pod level",
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglepodmodesnetwork-"
                      }
                    },
                    "pid": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglepodmodespid-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglepodmodes-"
                  }
                },
                "port": {
                  "description": "Port define Port used by member",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleport-"
                  }
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name\nWill be forwarded to the pod spec.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglepriorityclassname-"
                  }
                },
                "probes": {
                  "description": "Probes specifies additional behaviour for probes",
                  "type": "object",
                  "properties": {
                    "ReadinessProbeDisabled": {
                      "description": "OldReadinessProbeDisabled if true readinessProbes are disabled\nDeprecated: This field is deprecated, keept only for backward compatibility.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesreadinessprobedisabled-"
                      }
                    },
                    "livenessProbeDisabled": {
                      "description": "LivenessProbeDisabled if set to true, the operator does not generate a liveness probe for new pods belonging to this group",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobeslivenessprobedisabled-"
                      }
                    },
                    "livenessProbeSpec": {
                      "description": "LivenessProbeSpec override liveness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobeslivenessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobeslivenessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobeslivenessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobeslivenessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobeslivenessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobeslivenessprobespec-"
                      }
                    },
                    "readinessProbeDisabled": {
                      "description": "ReadinessProbeDisabled override flag for probe disabled in good manner (lowercase) with backward compatibility",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesreadinessprobedisabled-"
                      }
                    },
                    "readinessProbeSpec": {
                      "description": "ReadinessProbeSpec override readiness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesreadinessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesreadinessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesreadinessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesreadinessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesreadinessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesreadinessprobespec-"
                      }
                    },
                    "startupProbeDisabled": {
                      "description": "StartupProbeDisabled if true startupProbes are disabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesstartupprobedisabled-"
                      }
                    },
                    "startupProbeSpec": {
                      "description": "StartupProbeSpec override startup probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesstartupprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesstartupprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesstartupprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesstartupprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesstartupprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobesstartupprobespec-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleprobes-"
                  }
                },
                "pvcResizeMode": {
                  "description": "VolumeResizeMode specified resize mode for PVCs and PVs",
                  "type": "string",
                  "enum": [
                    "runtime",
                    "rotate"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglepvcresizemode-"
                  }
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleresources-"
                  }
                },
                "schedulerName": {
                  "description": "SchedulerName define scheduler name used for group",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleschedulername-"
                  }
                },
                "securityContext": {
                  "description": "SecurityContext specifies additional `securityContext` settings in ArangoDB Pod definitions.\nThis is similar (but not fully compatible) to k8s SecurityContext definition.",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextaddcapabilities-"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextallowprivilegeescalation-"
                      }
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextdropallcapabilities-"
                      }
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextfsgroup-"
                      }
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextprivileged-"
                      }
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextreadonlyrootfilesystem-"
                      }
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextrunasgroup-"
                      }
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextrunasnonroot-"
                      }
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextrunasuser-"
                      }
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextselinuxoptions-"
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextseccompprofile-"
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextsupplementalgroups-"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontextsysctls-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesecuritycontext-"
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName setting specifies the `serviceAccountName` for the `Pods` created\nfor each server of this group. If empty, it defaults to using the\n`default` service account.\nUsing an alternative `ServiceAccount` is typically used to separate access rights.\nThe ArangoDB deployments need some very minimal access rights. With the\ndeployment of the operator, we grant the rights to 'get' all 'pod' resources.\nIf you are using a different service account, please grant these rights\nto that service account.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleserviceaccountname-"
                  }
                },
                "shutdownDelay": {
                  "description": "ShutdownDelay define how long operator should delay finalizer removal after shutdown",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleshutdowndelay-"
                  }
                },
                "shutdownMethod": {
                  "description": "ShutdownMethod describe procedure of member shutdown taken by Operator",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleshutdownmethod-"
                  }
                },
                "sidecarCoreNames": {
                  "description": "SidecarCoreNames is a list of sidecar containers which must run in the pod.\nSome names (e.g.: \"server\", \"worker\") are reserved, and they don't have any impact.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesidecarcorenames-"
                  }
                },
                "sidecars": {
                  "description": "Sidecars specifies a list of additional containers to be started",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "lifecycle": {
                        "type": "object",
                        "properties": {
                          "postStart": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "preStop": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "livenessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "ports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "type": "string"
                            },
                            "hostPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readinessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "type": "object",
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "startupProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "stdin": {
                        "type": "boolean"
                      },
                      "stdinOnce": {
                        "type": "boolean"
                      },
                      "terminationMessagePath": {
                        "type": "string"
                      },
                      "terminationMessagePolicy": {
                        "type": "string"
                      },
                      "tty": {
                        "type": "boolean"
                      },
                      "volumeDevices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "devicePath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglesidecars-"
                  }
                },
                "storageClassName": {
                  "description": "StorageClassName specifies the classname for storage of the servers.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglestorageclassname-"
                  }
                },
                "terminationGracePeriodSeconds": {
                  "description": "TerminationGracePeriodSeconds override default TerminationGracePeriodSeconds for pods - via silent rotation",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingleterminationgraceperiodseconds-"
                  }
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.\nBy default, suitable tolerations are set for the following keys with the `NoExecute` effect:\n- `node.kubernetes.io/not-ready`\n- `node.kubernetes.io/unreachable`\n- `node.alpha.kubernetes.io/unreachable` (will be removed in future version)\nFor more information on tolerations, consult the https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingletolerations-"
                  }
                },
                "volumeAllowShrink": {
                  "description": "Deprecated: VolumeAllowShrink allows shrink the volume",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumeallowshrink-"
                  }
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate specifies a volumeClaimTemplate used by operator to create to volume claims for pods of this group.\nThis setting is not available for group `coordinators`, `syncmasters` \u0026 `syncworkers`.\nThe default value describes a volume with `8Gi` storage, `ReadWriteOnce` access mode and volume mode set to `PersistentVolumeFilesystem`.\nIf this field is not set and `spec.\u003cgroup\u003e.resources.requests.storage` is set, then a default volume claim\nwith size as specified by `spec.\u003cgroup\u003e.resources.requests.storage` will be created. In that case `storage`\nand `iops` is not forwarded to the pods resource requirements.",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "creationTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "deletionTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generateName": {
                          "type": "string"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldsType": {
                                "type": "string"
                              },
                              "fieldsV1": {
                                "type": "object"
                              },
                              "manager": {
                                "type": "string"
                              },
                              "operation": {
                                "type": "string"
                              },
                              "subresource": {
                                "type": "string"
                              },
                              "time": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "blockOwnerDeletion": {
                                "type": "boolean"
                              },
                              "controller": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resourceVersion": {
                          "type": "string"
                        },
                        "selfLink": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataSource": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "dataSourceRef": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requests": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "storageClassName": {
                          "type": "string"
                        },
                        "volumeMode": {
                          "type": "string"
                        },
                        "volumeName": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allocatedResources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastProbeTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "lastTransitionTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "type": "string"
                        },
                        "resizeStatus": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumeclaimtemplate-"
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts define list of volume mounts mounted into server container",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "mountPropagation": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      },
                      "subPathExpr": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumemounts-"
                  }
                },
                "volumes": {
                  "description": "Volumes define list of volumes mounted to pod",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumesconfigmap-"
                        }
                      },
                      "emptyDir": {
                        "description": "EmptyDir",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string"
                          },
                          "sizeLimit": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumesemptydir-"
                        }
                      },
                      "hostPath": {
                        "description": "HostPath",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumeshostpath-"
                        }
                      },
                      "name": {
                        "description": "Name of volume",
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumesname-"
                        }
                      },
                      "persistentVolumeClaim": {
                        "description": "PersistentVolumeClaim",
                        "type": "object",
                        "properties": {
                          "claimName": {
                            "type": "string"
                          },
                          "readOnly": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumespersistentvolumeclaim-"
                        }
                      },
                      "secret": {
                        "description": "Secret which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumessecret-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsinglevolumes-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsingle-"
              }
            },
            "storageEngine": {
              "description": "StorageEngine specifies the type of storage engine used for all servers in the cluster.",
              "type": "string",
              "enum": [
                "RocksDB",
                "MMFiles"
              ],
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specstorageengine-"
              },
              "x-kubernetes-validations": [
                {
                  "rule": "self.spec.storageEngine == oldSelf.spec.storageEngine",
                  "message": "field spec.storageEngine is immutable"
                }
              ]
            },
            "sync": {
              "description": "Sync holds Deployment-to-Deployment synchronization configuration settings",
              "type": "object",
              "properties": {
                "auth": {
                  "type": "object",
                  "properties": {
                    "clientCASecretName": {
                      "description": "ClientCASecretName setting specifies the name of a kubernetes `Secret` that contains\na PEM encoded CA certificate used for client certificate verification\nin all ArangoSync master servers.\nThis is a required setting when `spec.sync.enabled` is `true`.",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncauthclientcasecretname-"
                      }
                    },
                    "jwtSecretName": {
                      "description": "JWTSecretName setting specifies the name of a kubernetes `Secret` that contains\nthe JWT token used for accessing all ArangoSync master servers.\nWhen not specified, the `spec.auth.jwtSecretName` value is used.\nIf you specify a name of a `Secret` that does not exist, a random token is created\nand stored in a `Secret` with given name.",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncauthjwtsecretname-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncauth-"
                  }
                },
                "enabled": {
                  "description": "Enabled setting enables/disables support for data center 2 data center\nreplication in the cluster. When enabled, the cluster will contain\na number of `syncmaster` \u0026 `syncworker` servers.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncenabled-"
                  }
                },
                "externalAccess": {
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "advertisedEndpoint": {
                          "description": "AdvertisedEndpoint is passed to the coordinators/single servers for advertising a specific endpoint",
                          "type": "string",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncexternalaccessadvertisedendpoint-"
                          }
                        },
                        "loadBalancerIP": {
                          "description": "LoadBalancerIP define optional IP used to configure a load-balancer on, in case of Auto or LoadBalancer type.\nIf you do not specify this setting, an IP will be chosen automatically by the load-balancer provisioner.",
                          "type": "string",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncexternalaccessloadbalancerip-"
                          }
                        },
                        "loadBalancerSourceRanges": {
                          "description": "LoadBalancerSourceRanges define LoadBalancerSourceRanges used for LoadBalancer Service type\nIf specified and supported by the platform, this will restrict traffic through the cloud-provider\nload-balancer will be restricted to the specified client IPs. This field will be ignored if the\ncloud-provider does not support the feature.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncexternalaccessloadbalancersourceranges-"
                          }
                        },
                        "managedServiceNames": {
                          "description": "ManagedServiceNames keeps names of services which are not managed by KubeArangoDB.\nIt is only relevant when type of service is `managed`.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncexternalaccessmanagedservicenames-"
                          }
                        },
                        "nodePort": {
                          "description": "NodePort define optional port used in case of Auto or NodePort type.\nThis setting is used when `spec.externalAccess.type` is set to `NodePort` or `Auto`.\nIf you do not specify this setting, a random port will be chosen automatically.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncexternalaccessnodeport-"
                          }
                        },
                        "type": {
                          "description": "Type specifies the type of Service that will be created to provide access to the ArangoDB deployment from outside the Kubernetes cluster.",
                          "type": "string",
                          "enum": [
                            "Auto",
                            "None",
                            "LoadBalancer",
                            "NodePort"
                          ],
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncexternalaccesstype-"
                          }
                        }
                      }
                    },
                    "accessPackageSecretNames": {
                      "description": "AccessPackageSecretNames setting specifies the names of zero of more `Secrets` that will be created by the deployment\noperator containing \"access packages\". An access package contains those `Secrets` that are needed\nto access the SyncMasters of this `ArangoDeployment`.\nBy removing a name from this setting, the corresponding `Secret` is also deleted.\nNote that to remove all access packages, leave an empty array in place (`[]`).\nCompletely removing the setting results in not modifying the list.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncexternalaccessaccesspackagesecretnames-"
                      }
                    },
                    "masterEndpoint": {
                      "description": "MasterEndpoint setting specifies the master endpoint(s) advertised by the ArangoSync SyncMasters.\nIf not set, this setting defaults to:\n- If `spec.sync.externalAccess.loadBalancerIP` is set, it defaults to `https://\u003cload-balancer-ip\u003e:\u003c8629\u003e`.\n- Otherwise it defaults to `https://\u003csync-service-dns-name\u003e:\u003c8629\u003e`.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncexternalaccessmasterendpoint-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncexternalaccess-"
                  }
                },
                "image": {
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncimage-"
                  }
                },
                "monitoring": {
                  "type": "object",
                  "properties": {
                    "tokenSecretName": {
                      "description": "TokenSecretName setting specifies the name of a kubernetes `Secret` that contains\nthe bearer token used for accessing all monitoring endpoints of all arangod/arangosync servers.\nWhen not specified, no monitoring token is used.",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmonitoringtokensecretname-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmonitoring-"
                  }
                },
                "tls": {
                  "type": "object",
                  "properties": {
                    "altNames": {
                      "description": "AltNames setting specifies a list of alternate names that will be added to all generated\ncertificates. These names can be DNS names or email addresses.\nThe default value is empty.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsynctlsaltnames-"
                      }
                    },
                    "caSecretName": {
                      "description": "CASecretName  setting specifies the name of a kubernetes `Secret` that contains\na standard CA certificate + private key used to sign certificates for individual\nArangoDB servers.\nWhen no name is specified, it defaults to `\u003cdeployment-name\u003e-ca`.\nTo disable authentication, set this value to `None`.\nIf you specify a name of a `Secret` that does not exist, a self-signed CA certificate + key is created\nand stored in a `Secret` with given name.\nThe specified `Secret`, must contain the following data fields:\n- `ca.crt` PEM encoded public key of the CA certificate\n- `ca.key` PEM encoded private key of the CA certificate",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsynctlscasecretname-"
                      }
                    },
                    "mode": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsynctlsmode-"
                      }
                    },
                    "sni": {
                      "type": "object",
                      "properties": {
                        "mapping": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsynctlssnimapping-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsynctlssni-"
                      }
                    },
                    "ttl": {
                      "description": "TTL setting specifies the time to live of all generated server certificates.\nWhen the server certificate is about to expire, it will be automatically replaced\nby a new one and the affected server will be restarted.\nNote: The time to live of the CA certificate (when created automatically)\nwill be set to 10 years.",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsynctlsttl-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsynctls-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsync-"
              }
            },
            "syncmasters": {
              "description": "SyncMasters contains specification for Syncmaster pods running in deployment mode `Cluster`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersaffinity-"
                  }
                },
                "allowMemberRecreation": {
                  "description": "AllowMemberRecreation allows to recreate member.\nThis setting changes the member recreation logic based on group:\n- For Sync Masters, Sync Workers, Coordinator and DB-Servers it determines if a member can be recreated in case of failure (default `true`)\n- For Agents and Single this value is hardcoded to `false` and the value provided in spec is ignored.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersallowmemberrecreation-"
                  }
                },
                "annotations": {
                  "description": "Annotations specified the annotations added to Pods in this group.\nAnnotations are merged with `spec.annotations`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersannotations-"
                  }
                },
                "annotationsIgnoreList": {
                  "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersannotationsignorelist-"
                  }
                },
                "annotationsMode": {
                  "description": "AnnotationsMode Define annotations mode which should be use while overriding annotations",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersannotationsmode-"
                  }
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersantiaffinity-"
                  }
                },
                "args": {
                  "description": "Args setting specifies additional command-line arguments passed to all servers of this group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersargs-"
                  }
                },
                "count": {
                  "description": "Count setting specifies the number of servers to start for the given group.\nFor the Agent group, this value must be a positive, odd number.\nThe default value is `3` for all groups except `single` (there the default is `1`\nfor `spec.mode: Single` and `2` for `spec.mode: ActiveFailover`).\nFor the `syncworkers` group, it is highly recommended to use the same number\nas for the `dbservers` group.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterscount-"
                  }
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersentrypoint-"
                  }
                },
                "envs": {
                  "description": "Envs allow to specify additional envs in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersenvsname-"
                        }
                      },
                      "value": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersenvsvalue-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersenvs-"
                  }
                },
                "ephemeralVolumes": {
                  "description": "EphemeralVolumes keeps information about ephemeral volumes.",
                  "type": "object",
                  "properties": {
                    "apps": {
                      "description": "Apps define apps ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersephemeralvolumesappssize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersephemeralvolumesapps-"
                      }
                    },
                    "temp": {
                      "description": "Temp define temp ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersephemeralvolumestempsize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersephemeralvolumestemp-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersephemeralvolumes-"
                  }
                },
                "exporterPort": {
                  "description": "ExporterPort define Port used by exporter",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersexporterport-"
                  }
                },
                "extendedRotationCheck": {
                  "description": "ExtendedRotationCheck extend checks for rotation",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersextendedrotationcheck-"
                  }
                },
                "externalPortEnabled": {
                  "description": "ExternalPortEnabled if external port should be enabled. If is set to false, ports needs to be exposed via sidecar. Only for ArangoD members",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersexternalportenabled-"
                  }
                },
                "indexMethod": {
                  "description": "IndexMethod define group Indexing method",
                  "type": "string",
                  "enum": [
                    "random",
                    "ordered"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersindexmethod-"
                  }
                },
                "initContainers": {
                  "description": "InitContainers Init containers specification",
                  "type": "object",
                  "properties": {
                    "containers": {
                      "description": "Containers contains list of containers",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "fieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "apiVersion": {
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resourceFieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "containerName": {
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "type": "object",
                                          "properties": {
                                            "": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "resource": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "secretKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "envFrom": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "type": "string"
                          },
                          "lifecycle": {
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "type": "string"
                                },
                                "hostPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "protocol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "readinessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityContext": {
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "drop": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "type": "boolean"
                              },
                              "procMount": {
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "type": "object",
                                "properties": {
                                  "localhostProfile": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "startupProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "stdin": {
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "type": "string"
                          },
                          "tty": {
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumeMounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mountPath": {
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "workingDir": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersinitcontainerscontainers-"
                      }
                    },
                    "mode": {
                      "description": "Mode keep container replace mode",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersinitcontainersmode-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersinitcontainers-"
                  }
                },
                "internalPort": {
                  "description": "InternalPort define port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersinternalport-"
                  }
                },
                "internalPortProtocol": {
                  "description": "InternalPortProtocol define protocol of port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersinternalportprotocol-"
                  }
                },
                "labels": {
                  "description": "Labels specified the labels added to Pods in this group.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterslabels-"
                  }
                },
                "labelsIgnoreList": {
                  "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterslabelsignorelist-"
                  }
                },
                "labelsMode": {
                  "description": "LabelsMode Define labels mode which should be use while overriding labels",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterslabelsmode-"
                  }
                },
                "maxCount": {
                  "description": "MaxCount specifies a maximum for the count of servers. If set, a specification is invalid if `count \u003e maxCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersmaxcount-"
                  }
                },
                "memoryReservation": {
                  "description": "MemoryReservation determines system reservation of memory while calculating `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` value.\nIf this field is set, `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` is reduced by specified value in percents.\nAccepted Range \u003c0, 50\u003e. If value is outside accepted range, it is adjusted to the closest value.",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersmemoryreservation-"
                  }
                },
                "minCount": {
                  "description": "MinCount specifies a minimum for the count of servers. If set, a specification is invalid if `count \u003c minCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersmincount-"
                  }
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersnodeaffinity-"
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector setting specifies a set of labels to be used as `nodeSelector` for Pods of this node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersnodeselector-"
                  }
                },
                "numactl": {
                  "description": "Numactl define Numactl options passed to the process",
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "Args define list of the numactl process",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersnumactlargs-"
                      }
                    },
                    "enabled": {
                      "description": "Enabled define if numactl should be enabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersnumactlenabled-"
                      }
                    },
                    "path": {
                      "description": "Path define numactl path within the container",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersnumactlpath-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersnumactl-"
                  }
                },
                "overrideDetectedNumberOfCores": {
                  "description": "OverrideDetectedNumberOfCores determines if number of cores should be overridden based on values in resources.\nIf is set to true and Container CPU Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES` to the value from the Container CPU Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersoverridedetectednumberofcores-"
                  }
                },
                "overrideDetectedTotalMemory": {
                  "description": "OverrideDetectedTotalMemory determines if memory should be overridden based on values in resources.\nIf is set to true and Container Memory Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` to the value from the Container Memory Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersoverridedetectedtotalmemory-"
                  }
                },
                "podModes": {
                  "description": "PodModes define additional modes enabled on the Pod level",
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterspodmodesnetwork-"
                      }
                    },
                    "pid": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterspodmodespid-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterspodmodes-"
                  }
                },
                "port": {
                  "description": "Port define Port used by member",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersport-"
                  }
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name\nWill be forwarded to the pod spec.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterspriorityclassname-"
                  }
                },
                "probes": {
                  "description": "Probes specifies additional behaviour for probes",
                  "type": "object",
                  "properties": {
                    "ReadinessProbeDisabled": {
                      "description": "OldReadinessProbeDisabled if true readinessProbes are disabled\nDeprecated: This field is deprecated, keept only for backward compatibility.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesreadinessprobedisabled-"
                      }
                    },
                    "livenessProbeDisabled": {
                      "description": "LivenessProbeDisabled if set to true, the operator does not generate a liveness probe for new pods belonging to this group",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobeslivenessprobedisabled-"
                      }
                    },
                    "livenessProbeSpec": {
                      "description": "LivenessProbeSpec override liveness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobeslivenessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobeslivenessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobeslivenessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobeslivenessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobeslivenessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobeslivenessprobespec-"
                      }
                    },
                    "readinessProbeDisabled": {
                      "description": "ReadinessProbeDisabled override flag for probe disabled in good manner (lowercase) with backward compatibility",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesreadinessprobedisabled-"
                      }
                    },
                    "readinessProbeSpec": {
                      "description": "ReadinessProbeSpec override readiness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesreadinessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesreadinessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesreadinessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesreadinessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesreadinessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesreadinessprobespec-"
                      }
                    },
                    "startupProbeDisabled": {
                      "description": "StartupProbeDisabled if true startupProbes are disabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesstartupprobedisabled-"
                      }
                    },
                    "startupProbeSpec": {
                      "description": "StartupProbeSpec override startup probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesstartupprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesstartupprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesstartupprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesstartupprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesstartupprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobesstartupprobespec-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersprobes-"
                  }
                },
                "pvcResizeMode": {
                  "description": "VolumeResizeMode specified resize mode for PVCs and PVs",
                  "type": "string",
                  "enum": [
                    "runtime",
                    "rotate"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterspvcresizemode-"
                  }
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersresources-"
                  }
                },
                "schedulerName": {
                  "description": "SchedulerName define scheduler name used for group",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersschedulername-"
                  }
                },
                "securityContext": {
                  "description": "SecurityContext specifies additional `securityContext` settings in ArangoDB Pod definitions.\nThis is similar (but not fully compatible) to k8s SecurityContext definition.",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextaddcapabilities-"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextallowprivilegeescalation-"
                      }
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextdropallcapabilities-"
                      }
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextfsgroup-"
                      }
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextprivileged-"
                      }
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextreadonlyrootfilesystem-"
                      }
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextrunasgroup-"
                      }
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextrunasnonroot-"
                      }
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextrunasuser-"
                      }
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextselinuxoptions-"
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextseccompprofile-"
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextsupplementalgroups-"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontextsysctls-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssecuritycontext-"
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName setting specifies the `serviceAccountName` for the `Pods` created\nfor each server of this group. If empty, it defaults to using the\n`default` service account.\nUsing an alternative `ServiceAccount` is typically used to separate access rights.\nThe ArangoDB deployments need some very minimal access rights. With the\ndeployment of the operator, we grant the rights to 'get' all 'pod' resources.\nIf you are using a different service account, please grant these rights\nto that service account.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersserviceaccountname-"
                  }
                },
                "shutdownDelay": {
                  "description": "ShutdownDelay define how long operator should delay finalizer removal after shutdown",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersshutdowndelay-"
                  }
                },
                "shutdownMethod": {
                  "description": "ShutdownMethod describe procedure of member shutdown taken by Operator",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersshutdownmethod-"
                  }
                },
                "sidecarCoreNames": {
                  "description": "SidecarCoreNames is a list of sidecar containers which must run in the pod.\nSome names (e.g.: \"server\", \"worker\") are reserved, and they don't have any impact.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssidecarcorenames-"
                  }
                },
                "sidecars": {
                  "description": "Sidecars specifies a list of additional containers to be started",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "lifecycle": {
                        "type": "object",
                        "properties": {
                          "postStart": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "preStop": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "livenessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "ports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "type": "string"
                            },
                            "hostPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readinessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "type": "object",
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "startupProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "stdin": {
                        "type": "boolean"
                      },
                      "stdinOnce": {
                        "type": "boolean"
                      },
                      "terminationMessagePath": {
                        "type": "string"
                      },
                      "terminationMessagePolicy": {
                        "type": "string"
                      },
                      "tty": {
                        "type": "boolean"
                      },
                      "volumeDevices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "devicePath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterssidecars-"
                  }
                },
                "storageClassName": {
                  "description": "StorageClassName specifies the classname for storage of the servers.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersstorageclassname-"
                  }
                },
                "terminationGracePeriodSeconds": {
                  "description": "TerminationGracePeriodSeconds override default TerminationGracePeriodSeconds for pods - via silent rotation",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersterminationgraceperiodseconds-"
                  }
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.\nBy default, suitable tolerations are set for the following keys with the `NoExecute` effect:\n- `node.kubernetes.io/not-ready`\n- `node.kubernetes.io/unreachable`\n- `node.alpha.kubernetes.io/unreachable` (will be removed in future version)\nFor more information on tolerations, consult the https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasterstolerations-"
                  }
                },
                "volumeAllowShrink": {
                  "description": "Deprecated: VolumeAllowShrink allows shrink the volume",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumeallowshrink-"
                  }
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate specifies a volumeClaimTemplate used by operator to create to volume claims for pods of this group.\nThis setting is not available for group `coordinators`, `syncmasters` \u0026 `syncworkers`.\nThe default value describes a volume with `8Gi` storage, `ReadWriteOnce` access mode and volume mode set to `PersistentVolumeFilesystem`.\nIf this field is not set and `spec.\u003cgroup\u003e.resources.requests.storage` is set, then a default volume claim\nwith size as specified by `spec.\u003cgroup\u003e.resources.requests.storage` will be created. In that case `storage`\nand `iops` is not forwarded to the pods resource requirements.",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "creationTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "deletionTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generateName": {
                          "type": "string"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldsType": {
                                "type": "string"
                              },
                              "fieldsV1": {
                                "type": "object"
                              },
                              "manager": {
                                "type": "string"
                              },
                              "operation": {
                                "type": "string"
                              },
                              "subresource": {
                                "type": "string"
                              },
                              "time": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "blockOwnerDeletion": {
                                "type": "boolean"
                              },
                              "controller": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resourceVersion": {
                          "type": "string"
                        },
                        "selfLink": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataSource": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "dataSourceRef": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requests": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "storageClassName": {
                          "type": "string"
                        },
                        "volumeMode": {
                          "type": "string"
                        },
                        "volumeName": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allocatedResources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastProbeTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "lastTransitionTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "type": "string"
                        },
                        "resizeStatus": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumeclaimtemplate-"
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts define list of volume mounts mounted into server container",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "mountPropagation": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      },
                      "subPathExpr": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumemounts-"
                  }
                },
                "volumes": {
                  "description": "Volumes define list of volumes mounted to pod",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumesconfigmap-"
                        }
                      },
                      "emptyDir": {
                        "description": "EmptyDir",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string"
                          },
                          "sizeLimit": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumesemptydir-"
                        }
                      },
                      "hostPath": {
                        "description": "HostPath",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumeshostpath-"
                        }
                      },
                      "name": {
                        "description": "Name of volume",
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumesname-"
                        }
                      },
                      "persistentVolumeClaim": {
                        "description": "PersistentVolumeClaim",
                        "type": "object",
                        "properties": {
                          "claimName": {
                            "type": "string"
                          },
                          "readOnly": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumespersistentvolumeclaim-"
                        }
                      },
                      "secret": {
                        "description": "Secret which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumessecret-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmastersvolumes-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncmasters-"
              }
            },
            "syncworkers": {
              "description": "SyncWorkers contains specification for Syncworker pods running in deployment mode `Cluster`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersaffinity-"
                  }
                },
                "allowMemberRecreation": {
                  "description": "AllowMemberRecreation allows to recreate member.\nThis setting changes the member recreation logic based on group:\n- For Sync Masters, Sync Workers, Coordinator and DB-Servers it determines if a member can be recreated in case of failure (default `true`)\n- For Agents and Single this value is hardcoded to `false` and the value provided in spec is ignored.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersallowmemberrecreation-"
                  }
                },
                "annotations": {
                  "description": "Annotations specified the annotations added to Pods in this group.\nAnnotations are merged with `spec.annotations`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersannotations-"
                  }
                },
                "annotationsIgnoreList": {
                  "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersannotationsignorelist-"
                  }
                },
                "annotationsMode": {
                  "description": "AnnotationsMode Define annotations mode which should be use while overriding annotations",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersannotationsmode-"
                  }
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersantiaffinity-"
                  }
                },
                "args": {
                  "description": "Args setting specifies additional command-line arguments passed to all servers of this group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersargs-"
                  }
                },
                "count": {
                  "description": "Count setting specifies the number of servers to start for the given group.\nFor the Agent group, this value must be a positive, odd number.\nThe default value is `3` for all groups except `single` (there the default is `1`\nfor `spec.mode: Single` and `2` for `spec.mode: ActiveFailover`).\nFor the `syncworkers` group, it is highly recommended to use the same number\nas for the `dbservers` group.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerscount-"
                  }
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersentrypoint-"
                  }
                },
                "envs": {
                  "description": "Envs allow to specify additional envs in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersenvsname-"
                        }
                      },
                      "value": {
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersenvsvalue-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersenvs-"
                  }
                },
                "ephemeralVolumes": {
                  "description": "EphemeralVolumes keeps information about ephemeral volumes.",
                  "type": "object",
                  "properties": {
                    "apps": {
                      "description": "Apps define apps ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersephemeralvolumesappssize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersephemeralvolumesapps-"
                      }
                    },
                    "temp": {
                      "description": "Temp define temp ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          },
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersephemeralvolumestempsize-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersephemeralvolumestemp-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersephemeralvolumes-"
                  }
                },
                "exporterPort": {
                  "description": "ExporterPort define Port used by exporter",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersexporterport-"
                  }
                },
                "extendedRotationCheck": {
                  "description": "ExtendedRotationCheck extend checks for rotation",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersextendedrotationcheck-"
                  }
                },
                "externalPortEnabled": {
                  "description": "ExternalPortEnabled if external port should be enabled. If is set to false, ports needs to be exposed via sidecar. Only for ArangoD members",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersexternalportenabled-"
                  }
                },
                "indexMethod": {
                  "description": "IndexMethod define group Indexing method",
                  "type": "string",
                  "enum": [
                    "random",
                    "ordered"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersindexmethod-"
                  }
                },
                "initContainers": {
                  "description": "InitContainers Init containers specification",
                  "type": "object",
                  "properties": {
                    "containers": {
                      "description": "Containers contains list of containers",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "fieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "apiVersion": {
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resourceFieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "containerName": {
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "type": "object",
                                          "properties": {
                                            "": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "resource": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "secretKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "envFrom": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "type": "string"
                          },
                          "lifecycle": {
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "type": "string"
                                },
                                "hostPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "protocol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "readinessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityContext": {
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "drop": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "type": "boolean"
                              },
                              "procMount": {
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "type": "object",
                                "properties": {
                                  "localhostProfile": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "startupProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "stdin": {
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "type": "string"
                          },
                          "tty": {
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumeMounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mountPath": {
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "workingDir": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersinitcontainerscontainers-"
                      }
                    },
                    "mode": {
                      "description": "Mode keep container replace mode",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersinitcontainersmode-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersinitcontainers-"
                  }
                },
                "internalPort": {
                  "description": "InternalPort define port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersinternalport-"
                  }
                },
                "internalPortProtocol": {
                  "description": "InternalPortProtocol define protocol of port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersinternalportprotocol-"
                  }
                },
                "labels": {
                  "description": "Labels specified the labels added to Pods in this group.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerslabels-"
                  }
                },
                "labelsIgnoreList": {
                  "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerslabelsignorelist-"
                  }
                },
                "labelsMode": {
                  "description": "LabelsMode Define labels mode which should be use while overriding labels",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerslabelsmode-"
                  }
                },
                "maxCount": {
                  "description": "MaxCount specifies a maximum for the count of servers. If set, a specification is invalid if `count \u003e maxCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersmaxcount-"
                  }
                },
                "memoryReservation": {
                  "description": "MemoryReservation determines system reservation of memory while calculating `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` value.\nIf this field is set, `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` is reduced by specified value in percents.\nAccepted Range \u003c0, 50\u003e. If value is outside accepted range, it is adjusted to the closest value.",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersmemoryreservation-"
                  }
                },
                "minCount": {
                  "description": "MinCount specifies a minimum for the count of servers. If set, a specification is invalid if `count \u003c minCount`.",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersmincount-"
                  }
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersnodeaffinity-"
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector setting specifies a set of labels to be used as `nodeSelector` for Pods of this node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersnodeselector-"
                  }
                },
                "numactl": {
                  "description": "Numactl define Numactl options passed to the process",
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "Args define list of the numactl process",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersnumactlargs-"
                      }
                    },
                    "enabled": {
                      "description": "Enabled define if numactl should be enabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersnumactlenabled-"
                      }
                    },
                    "path": {
                      "description": "Path define numactl path within the container",
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersnumactlpath-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersnumactl-"
                  }
                },
                "overrideDetectedNumberOfCores": {
                  "description": "OverrideDetectedNumberOfCores determines if number of cores should be overridden based on values in resources.\nIf is set to true and Container CPU Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES` to the value from the Container CPU Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersoverridedetectednumberofcores-"
                  }
                },
                "overrideDetectedTotalMemory": {
                  "description": "OverrideDetectedTotalMemory determines if memory should be overridden based on values in resources.\nIf is set to true and Container Memory Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` to the value from the Container Memory Limits.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersoverridedetectedtotalmemory-"
                  }
                },
                "podModes": {
                  "description": "PodModes define additional modes enabled on the Pod level",
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerspodmodesnetwork-"
                      }
                    },
                    "pid": {
                      "type": "string",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerspodmodespid-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerspodmodes-"
                  }
                },
                "port": {
                  "description": "Port define Port used by member",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersport-"
                  }
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name\nWill be forwarded to the pod spec.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerspriorityclassname-"
                  }
                },
                "probes": {
                  "description": "Probes specifies additional behaviour for probes",
                  "type": "object",
                  "properties": {
                    "ReadinessProbeDisabled": {
                      "description": "OldReadinessProbeDisabled if true readinessProbes are disabled\nDeprecated: This field is deprecated, keept only for backward compatibility.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesreadinessprobedisabled-"
                      }
                    },
                    "livenessProbeDisabled": {
                      "description": "LivenessProbeDisabled if set to true, the operator does not generate a liveness probe for new pods belonging to this group",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobeslivenessprobedisabled-"
                      }
                    },
                    "livenessProbeSpec": {
                      "description": "LivenessProbeSpec override liveness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobeslivenessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobeslivenessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobeslivenessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobeslivenessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobeslivenessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobeslivenessprobespec-"
                      }
                    },
                    "readinessProbeDisabled": {
                      "description": "ReadinessProbeDisabled override flag for probe disabled in good manner (lowercase) with backward compatibility",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesreadinessprobedisabled-"
                      }
                    },
                    "readinessProbeSpec": {
                      "description": "ReadinessProbeSpec override readiness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesreadinessprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesreadinessprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesreadinessprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesreadinessprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesreadinessprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesreadinessprobespec-"
                      }
                    },
                    "startupProbeDisabled": {
                      "description": "StartupProbeDisabled if true startupProbes are disabled",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesstartupprobedisabled-"
                      }
                    },
                    "startupProbeSpec": {
                      "description": "StartupProbeSpec override startup probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesstartupprobespecfailurethreshold-"
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesstartupprobespecinitialdelayseconds-"
                          }
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesstartupprobespecperiodseconds-"
                          }
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesstartupprobespecsuccessthreshold-"
                          }
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32",
                          "externalDocs": {
                            "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesstartupprobespectimeoutseconds-"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobesstartupprobespec-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersprobes-"
                  }
                },
                "pvcResizeMode": {
                  "description": "VolumeResizeMode specified resize mode for PVCs and PVs",
                  "type": "string",
                  "enum": [
                    "runtime",
                    "rotate"
                  ],
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerspvcresizemode-"
                  }
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersresources-"
                  }
                },
                "schedulerName": {
                  "description": "SchedulerName define scheduler name used for group",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersschedulername-"
                  }
                },
                "securityContext": {
                  "description": "SecurityContext specifies additional `securityContext` settings in ArangoDB Pod definitions.\nThis is similar (but not fully compatible) to k8s SecurityContext definition.",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextaddcapabilities-"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextallowprivilegeescalation-"
                      }
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextdropallcapabilities-"
                      }
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextfsgroup-"
                      }
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextprivileged-"
                      }
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextreadonlyrootfilesystem-"
                      }
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextrunasgroup-"
                      }
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextrunasnonroot-"
                      }
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64",
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextrunasuser-"
                      }
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextselinuxoptions-"
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextseccompprofile-"
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextsupplementalgroups-"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontextsysctls-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssecuritycontext-"
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName setting specifies the `serviceAccountName` for the `Pods` created\nfor each server of this group. If empty, it defaults to using the\n`default` service account.\nUsing an alternative `ServiceAccount` is typically used to separate access rights.\nThe ArangoDB deployments need some very minimal access rights. With the\ndeployment of the operator, we grant the rights to 'get' all 'pod' resources.\nIf you are using a different service account, please grant these rights\nto that service account.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersserviceaccountname-"
                  }
                },
                "shutdownDelay": {
                  "description": "ShutdownDelay define how long operator should delay finalizer removal after shutdown",
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersshutdowndelay-"
                  }
                },
                "shutdownMethod": {
                  "description": "ShutdownMethod describe procedure of member shutdown taken by Operator",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersshutdownmethod-"
                  }
                },
                "sidecarCoreNames": {
                  "description": "SidecarCoreNames is a list of sidecar containers which must run in the pod.\nSome names (e.g.: \"server\", \"worker\") are reserved, and they don't have any impact.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssidecarcorenames-"
                  }
                },
                "sidecars": {
                  "description": "Sidecars specifies a list of additional containers to be started",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "lifecycle": {
                        "type": "object",
                        "properties": {
                          "postStart": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "preStop": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "livenessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "ports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "type": "string"
                            },
                            "hostPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readinessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "type": "object",
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "startupProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "stdin": {
                        "type": "boolean"
                      },
                      "stdinOnce": {
                        "type": "boolean"
                      },
                      "terminationMessagePath": {
                        "type": "string"
                      },
                      "terminationMessagePolicy": {
                        "type": "string"
                      },
                      "tty": {
                        "type": "boolean"
                      },
                      "volumeDevices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "devicePath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerssidecars-"
                  }
                },
                "storageClassName": {
                  "description": "StorageClassName specifies the classname for storage of the servers.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersstorageclassname-"
                  }
                },
                "terminationGracePeriodSeconds": {
                  "description": "TerminationGracePeriodSeconds override default TerminationGracePeriodSeconds for pods - via silent rotation",
                  "type": "integer",
                  "format": "int64",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersterminationgraceperiodseconds-"
                  }
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.\nBy default, suitable tolerations are set for the following keys with the `NoExecute` effect:\n- `node.kubernetes.io/not-ready`\n- `node.kubernetes.io/unreachable`\n- `node.alpha.kubernetes.io/unreachable` (will be removed in future version)\nFor more information on tolerations, consult the https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkerstolerations-"
                  }
                },
                "volumeAllowShrink": {
                  "description": "Deprecated: VolumeAllowShrink allows shrink the volume",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumeallowshrink-"
                  }
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate specifies a volumeClaimTemplate used by operator to create to volume claims for pods of this group.\nThis setting is not available for group `coordinators`, `syncmasters` \u0026 `syncworkers`.\nThe default value describes a volume with `8Gi` storage, `ReadWriteOnce` access mode and volume mode set to `PersistentVolumeFilesystem`.\nIf this field is not set and `spec.\u003cgroup\u003e.resources.requests.storage` is set, then a default volume claim\nwith size as specified by `spec.\u003cgroup\u003e.resources.requests.storage` will be created. In that case `storage`\nand `iops` is not forwarded to the pods resource requirements.",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "creationTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "deletionTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generateName": {
                          "type": "string"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldsType": {
                                "type": "string"
                              },
                              "fieldsV1": {
                                "type": "object"
                              },
                              "manager": {
                                "type": "string"
                              },
                              "operation": {
                                "type": "string"
                              },
                              "subresource": {
                                "type": "string"
                              },
                              "time": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "blockOwnerDeletion": {
                                "type": "boolean"
                              },
                              "controller": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resourceVersion": {
                          "type": "string"
                        },
                        "selfLink": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataSource": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "dataSourceRef": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requests": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "storageClassName": {
                          "type": "string"
                        },
                        "volumeMode": {
                          "type": "string"
                        },
                        "volumeName": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allocatedResources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastProbeTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "lastTransitionTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "type": "string"
                        },
                        "resizeStatus": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumeclaimtemplate-"
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts define list of volume mounts mounted into server container",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "mountPropagation": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      },
                      "subPathExpr": {
                        "type": "string"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumemounts-"
                  }
                },
                "volumes": {
                  "description": "Volumes define list of volumes mounted to pod",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumesconfigmap-"
                        }
                      },
                      "emptyDir": {
                        "description": "EmptyDir",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string"
                          },
                          "sizeLimit": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumesemptydir-"
                        }
                      },
                      "hostPath": {
                        "description": "HostPath",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumeshostpath-"
                        }
                      },
                      "name": {
                        "description": "Name of volume",
                        "type": "string",
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumesname-"
                        }
                      },
                      "persistentVolumeClaim": {
                        "description": "PersistentVolumeClaim",
                        "type": "object",
                        "properties": {
                          "claimName": {
                            "type": "string"
                          },
                          "readOnly": {
                            "type": "boolean"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumespersistentvolumeclaim-"
                        }
                      },
                      "secret": {
                        "description": "Secret which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        },
                        "externalDocs": {
                          "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumessecret-"
                        }
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkersvolumes-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specsyncworkers-"
              }
            },
            "timeouts": {
              "description": "Timeouts object allows to configure various time-outs",
              "type": "object",
              "properties": {
                "actions": {
                  "description": "Actions keep map of the actions timeouts.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectimeoutsactions-"
                  }
                },
                "maintenanceGracePeriod": {
                  "description": "MaintenanceGracePeriod action timeout",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "integer",
                      "format": "int64"
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectimeoutsmaintenancegraceperiod-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectimeouts-"
              }
            },
            "timezone": {
              "description": "Timezone if specified, will set a timezone for deployment.\nMust be in format accepted by \"tzdata\", e.g. `America/New_York` or `Europe/London`",
              "type": "string",
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectimezone-"
              }
            },
            "tls": {
              "description": "TLS holds TLS configuration settings",
              "type": "object",
              "properties": {
                "altNames": {
                  "description": "AltNames setting specifies a list of alternate names that will be added to all generated\ncertificates. These names can be DNS names or email addresses.\nThe default value is empty.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectlsaltnames-"
                  }
                },
                "caSecretName": {
                  "description": "CASecretName  setting specifies the name of a kubernetes `Secret` that contains\na standard CA certificate + private key used to sign certificates for individual\nArangoDB servers.\nWhen no name is specified, it defaults to `\u003cdeployment-name\u003e-ca`.\nTo disable authentication, set this value to `None`.\nIf you specify a name of a `Secret` that does not exist, a self-signed CA certificate + key is created\nand stored in a `Secret` with given name.\nThe specified `Secret`, must contain the following data fields:\n- `ca.crt` PEM encoded public key of the CA certificate\n- `ca.key` PEM encoded private key of the CA certificate",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectlscasecretname-"
                  }
                },
                "mode": {
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectlsmode-"
                  }
                },
                "sni": {
                  "type": "object",
                  "properties": {
                    "mapping": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "externalDocs": {
                        "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectlssnimapping-"
                      }
                    }
                  },
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectlssni-"
                  }
                },
                "ttl": {
                  "description": "TTL setting specifies the time to live of all generated server certificates.\nWhen the server certificate is about to expire, it will be automatically replaced\nby a new one and the affected server will be restarted.\nNote: The time to live of the CA certificate (when created automatically)\nwill be set to 10 years.",
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectlsttl-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectls-"
              }
            },
            "topology": {
              "description": "Topology define topology adjustment details, Enterprise only",
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectopologyenabled-"
                  }
                },
                "label": {
                  "type": "string",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectopologylabel-"
                  }
                },
                "zones": {
                  "type": "integer",
                  "format": "int32",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectopologyzones-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#spectopology-"
              }
            },
            "upgrade": {
              "description": "Upgrade allows to configure upgrade-related options",
              "type": "object",
              "properties": {
                "autoUpgrade": {
                  "description": "AutoUpgrade flag specifies if upgrade should be auto-injected, even if is not required (in case of stuck)",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specupgradeautoupgrade-"
                  }
                },
                "debugLog": {
                  "description": "DebugLog flag specifies if containers running upgrade process should print more debugging information.\nThis applies only to init containers.",
                  "type": "boolean",
                  "externalDocs": {
                    "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specupgradedebuglog-"
                  }
                }
              },
              "externalDocs": {
                "url": "https://arangodb.github.io/kube-arangodb/docs/api/ArangoDeployment.V1#specupgrade-"
              }
            }
          }
        }
      },
      "x-kubernetes-preserve-unknown-fields": true
    }
  },
  "v2alpha1": {
    "openAPIV3Schema": {
      "type": "object",
      "properties": {
        "spec": {
          "type": "object",
          "properties": {
            "ClusterDomain": {
              "description": "ClusterDomain define domain used in the kubernetes cluster.\nRequired only of domain is not set to default (cluster.local)",
              "type": "string"
            },
            "agents": {
              "description": "Agents contains specification for Agency pods running in deployment mode `Cluster` or `ActiveFailover`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "allowMemberRecreation": {
                  "description": "AllowMemberRecreation allows to recreate member.\nThis setting changes the member recreation logic based on group:\n- For Sync Masters, Sync Workers, Coordinator and DB-Servers it determines if a member can be recreated in case of failure (default `true`)\n- For Agents and Single this value is hardcoded to `false` and the value provided in spec is ignored.",
                  "type": "boolean"
                },
                "annotations": {
                  "description": "Annotations specified the annotations added to Pods in this group.\nAnnotations are merged with `spec.annotations`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "annotationsIgnoreList": {
                  "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "annotationsMode": {
                  "description": "AnnotationsMode Define annotations mode which should be use while overriding annotations",
                  "type": "string"
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "args": {
                  "description": "Args setting specifies additional command-line arguments passed to all servers of this group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "count": {
                  "description": "Count setting specifies the number of servers to start for the given group.\nFor the Agent group, this value must be a positive, odd number.\nThe default value is `3` for all groups except `single` (there the default is `1`\nfor `spec.mode: Single` and `2` for `spec.mode: ActiveFailover`).\nFor the `syncworkers` group, it is highly recommended to use the same number\nas for the `dbservers` group.",
                  "type": "integer",
                  "format": "int32"
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string"
                },
                "envs": {
                  "description": "Envs allow to specify additional envs in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "ephemeralVolumes": {
                  "description": "EphemeralVolumes keeps information about ephemeral volumes.",
                  "type": "object",
                  "properties": {
                    "apps": {
                      "description": "Apps define apps ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "temp": {
                      "description": "Temp define temp ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "exporterPort": {
                  "description": "ExporterPort define Port used by exporter",
                  "type": "integer",
                  "format": "int32"
                },
                "extendedRotationCheck": {
                  "description": "ExtendedRotationCheck extend checks for rotation",
                  "type": "boolean"
                },
                "externalPortEnabled": {
                  "description": "ExternalPortEnabled if external port should be enabled. If is set to false, ports needs to be exposed via sidecar. Only for ArangoD members",
                  "type": "boolean"
                },
                "indexMethod": {
                  "description": "IndexMethod define group Indexing method",
                  "type": "string",
                  "enum": [
                    "random",
                    "ordered"
                  ]
                },
                "initContainers": {
                  "description": "InitContainers Init containers specification",
                  "type": "object",
                  "properties": {
                    "containers": {
                      "description": "Containers contains list of containers",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "fieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "apiVersion": {
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resourceFieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "containerName": {
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "type": "object",
                                          "properties": {
                                            "": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "resource": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "secretKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "envFrom": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "type": "string"
                          },
                          "lifecycle": {
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "type": "string"
                                },
                                "hostPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "protocol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "readinessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityContext": {
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "drop": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "type": "boolean"
                              },
                              "procMount": {
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "type": "object",
                                "properties": {
                                  "localhostProfile": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "startupProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "stdin": {
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "type": "string"
                          },
                          "tty": {
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumeMounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mountPath": {
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "workingDir": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "mode": {
                      "description": "Mode keep container replace mode",
                      "type": "string"
                    }
                  }
                },
                "internalPort": {
                  "description": "InternalPort define port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "integer",
                  "format": "int32"
                },
                "internalPortProtocol": {
                  "description": "InternalPortProtocol define protocol of port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "string"
                },
                "labels": {
                  "description": "Labels specified the labels added to Pods in this group.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labelsIgnoreList": {
                  "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "labelsMode": {
                  "description": "LabelsMode Define labels mode which should be use while overriding labels",
                  "type": "string"
                },
                "maxCount": {
                  "description": "MaxCount specifies a maximum for the count of servers. If set, a specification is invalid if `count \u003e maxCount`.",
                  "type": "integer",
                  "format": "int32"
                },
                "memoryReservation": {
                  "description": "MemoryReservation determines system reservation of memory while calculating `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` value.\nIf this field is set, `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` is reduced by specified value in percents.\nAccepted Range \u003c0, 50\u003e. If value is outside accepted range, it is adjusted to the closest value.",
                  "type": "integer",
                  "format": "int64"
                },
                "minCount": {
                  "description": "MinCount specifies a minimum for the count of servers. If set, a specification is invalid if `count \u003c minCount`.",
                  "type": "integer",
                  "format": "int32"
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector setting specifies a set of labels to be used as `nodeSelector` for Pods of this node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "numactl": {
                  "description": "Numactl define Numactl options passed to the process",
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "Args define list of the numactl process",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "enabled": {
                      "description": "Enabled define if numactl should be enabled",
                      "type": "boolean"
                    },
                    "path": {
                      "description": "Path define numactl path within the container",
                      "type": "string"
                    }
                  }
                },
                "overrideDetectedNumberOfCores": {
                  "description": "OverrideDetectedNumberOfCores determines if number of cores should be overridden based on values in resources.\nIf is set to true and Container CPU Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES` to the value from the Container CPU Limits.",
                  "type": "boolean"
                },
                "overrideDetectedTotalMemory": {
                  "description": "OverrideDetectedTotalMemory determines if memory should be overridden based on values in resources.\nIf is set to true and Container Memory Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` to the value from the Container Memory Limits.",
                  "type": "boolean"
                },
                "podModes": {
                  "description": "PodModes define additional modes enabled on the Pod level",
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string"
                    },
                    "pid": {
                      "type": "string"
                    }
                  }
                },
                "port": {
                  "description": "Port define Port used by member",
                  "type": "integer",
                  "format": "int32"
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name\nWill be forwarded to the pod spec.",
                  "type": "string"
                },
                "probes": {
                  "description": "Probes specifies additional behaviour for probes",
                  "type": "object",
                  "properties": {
                    "ReadinessProbeDisabled": {
                      "description": "OldReadinessProbeDisabled if true readinessProbes are disabled\nDeprecated: This field is deprecated, keept only for backward compatibility.",
                      "type": "boolean"
                    },
                    "livenessProbeDisabled": {
                      "description": "LivenessProbeDisabled if set to true, the operator does not generate a liveness probe for new pods belonging to this group",
                      "type": "boolean"
                    },
                    "livenessProbeSpec": {
                      "description": "LivenessProbeSpec override liveness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "readinessProbeDisabled": {
                      "description": "ReadinessProbeDisabled override flag for probe disabled in good manner (lowercase) with backward compatibility",
                      "type": "boolean"
                    },
                    "readinessProbeSpec": {
                      "description": "ReadinessProbeSpec override readiness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "startupProbeDisabled": {
                      "description": "StartupProbeDisabled if true startupProbes are disabled",
                      "type": "boolean"
                    },
                    "startupProbeSpec": {
                      "description": "StartupProbeSpec override startup probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                },
                "pvcResizeMode": {
                  "description": "VolumeResizeMode specified resize mode for PVCs and PVs",
                  "type": "string",
                  "enum": [
                    "runtime",
                    "rotate"
                  ]
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "schedulerName": {
                  "description": "SchedulerName define scheduler name used for group",
                  "type": "string"
                },
                "securityContext": {
                  "description": "SecurityContext specifies additional `securityContext` settings in ArangoDB Pod definitions.\nThis is similar (but not fully compatible) to k8s SecurityContext definition.",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean"
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean"
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean"
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean"
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName setting specifies the `serviceAccountName` for the `Pods` created\nfor each server of this group. If empty, it defaults to using the\n`default` service account.\nUsing an alternative `ServiceAccount` is typically used to separate access rights.\nThe ArangoDB deployments need some very minimal access rights. With the\ndeployment of the operator, we grant the rights to 'get' all 'pod' resources.\nIf you are using a different service account, please grant these rights\nto that service account.",
                  "type": "string"
                },
                "shutdownDelay": {
                  "description": "ShutdownDelay define how long operator should delay finalizer removal after shutdown",
                  "type": "integer",
                  "format": "int32"
                },
                "shutdownMethod": {
                  "description": "ShutdownMethod describe procedure of member shutdown taken by Operator",
                  "type": "string"
                },
                "sidecarCoreNames": {
                  "description": "SidecarCoreNames is a list of sidecar containers which must run in the pod.\nSome names (e.g.: \"server\", \"worker\") are reserved, and they don't have any impact.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sidecars": {
                  "description": "Sidecars specifies a list of additional containers to be started",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "lifecycle": {
                        "type": "object",
                        "properties": {
                          "postStart": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "preStop": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "livenessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "ports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "type": "string"
                            },
                            "hostPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readinessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "type": "object",
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "startupProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "stdin": {
                        "type": "boolean"
                      },
                      "stdinOnce": {
                        "type": "boolean"
                      },
                      "terminationMessagePath": {
                        "type": "string"
                      },
                      "terminationMessagePolicy": {
                        "type": "string"
                      },
                      "tty": {
                        "type": "boolean"
                      },
                      "volumeDevices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "devicePath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    }
                  }
                },
                "storageClassName": {
                  "description": "StorageClassName specifies the classname for storage of the servers.",
                  "type": "string"
                },
                "terminationGracePeriodSeconds": {
                  "description": "TerminationGracePeriodSeconds override default TerminationGracePeriodSeconds for pods - via silent rotation",
                  "type": "integer",
                  "format": "int64"
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.\nBy default, suitable tolerations are set for the following keys with the `NoExecute` effect:\n- `node.kubernetes.io/not-ready`\n- `node.kubernetes.io/unreachable`\n- `node.alpha.kubernetes.io/unreachable` (will be removed in future version)\nFor more information on tolerations, consult the https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "volumeAllowShrink": {
                  "description": "Deprecated: VolumeAllowShrink allows shrink the volume",
                  "type": "boolean"
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate specifies a volumeClaimTemplate used by operator to create to volume claims for pods of this group.\nThis setting is not available for group `coordinators`, `syncmasters` \u0026 `syncworkers`.\nThe default value describes a volume with `8Gi` storage, `ReadWriteOnce` access mode and volume mode set to `PersistentVolumeFilesystem`.\nIf this field is not set and `spec.\u003cgroup\u003e.resources.requests.storage` is set, then a default volume claim\nwith size as specified by `spec.\u003cgroup\u003e.resources.requests.storage` will be created. In that case `storage`\nand `iops` is not forwarded to the pods resource requirements.",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "creationTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "deletionTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generateName": {
                          "type": "string"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldsType": {
                                "type": "string"
                              },
                              "fieldsV1": {
                                "type": "object"
                              },
                              "manager": {
                                "type": "string"
                              },
                              "operation": {
                                "type": "string"
                              },
                              "subresource": {
                                "type": "string"
                              },
                              "time": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "blockOwnerDeletion": {
                                "type": "boolean"
                              },
                              "controller": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resourceVersion": {
                          "type": "string"
                        },
                        "selfLink": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataSource": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "dataSourceRef": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requests": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "storageClassName": {
                          "type": "string"
                        },
                        "volumeMode": {
                          "type": "string"
                        },
                        "volumeName": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allocatedResources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastProbeTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "lastTransitionTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "type": "string"
                        },
                        "resizeStatus": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts define list of volume mounts mounted into server container",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "mountPropagation": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      },
                      "subPathExpr": {
                        "type": "string"
                      }
                    }
                  }
                },
                "volumes": {
                  "description": "Volumes define list of volumes mounted to pod",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        }
                      },
                      "emptyDir": {
                        "description": "EmptyDir",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string"
                          },
                          "sizeLimit": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "hostPath": {
                        "description": "HostPath",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name of volume",
                        "type": "string"
                      },
                      "persistentVolumeClaim": {
                        "description": "PersistentVolumeClaim",
                        "type": "object",
                        "properties": {
                          "claimName": {
                            "type": "string"
                          },
                          "readOnly": {
                            "type": "boolean"
                          }
                        }
                      },
                      "secret": {
                        "description": "Secret which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "allowUnsafeUpgrade": {
              "description": "AllowUnsafeUpgrade determines if upgrade on missing member or with not in sync shards is allowed",
              "type": "boolean"
            },
            "annotations": {
              "description": "Annotations specifies the annotations added to all ArangoDeployment owned resources (pods, services, PVC’s, PDB’s).",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "annotationsIgnoreList": {
              "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "annotationsMode": {
              "description": "AnnotationsMode defines annotations mode which should be use while overriding annotations.",
              "type": "string",
              "enum": [
                "disabled",
                "append",
                "replace"
              ]
            },
            "architecture": {
              "description": "Architecture defines the list of supported architectures.\nFirst element on the list is marked as default architecture.\nPossible values are:\n- `amd64`: Use processors with the x86-64 architecture.\n- `arm64`: Use processors with the 64-bit ARM architecture.\nThe setting expects a list of strings, but you should only specify a single\nlist item for the architecture, except when you want to migrate from one\narchitecture to the other. The first list item defines the new default\narchitecture for the deployment that you want to migrate to.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "auth": {
              "description": "Authentication holds authentication configuration settings",
              "type": "object",
              "properties": {
                "jwtSecretName": {
                  "description": "JWTSecretName setting specifies the name of a kubernetes `Secret` that contains\nthe JWT token used for accessing all ArangoDB servers.\nWhen no name is specified, it defaults to `\u003cdeployment-name\u003e-jwt`.\nTo disable authentication, set this value to `None`.\nIf you specify a name of a `Secret`, that secret must have the token\nin a data field named `token`.\nIf you specify a name of a `Secret` that does not exist, a random token is created\nand stored in a `Secret` with given name.\nChanging a JWT token results in restarting of a whole cluster.",
                  "type": "string"
                }
              }
            },
            "bootstrap": {
              "description": "Bootstrap contains information for cluster bootstrapping",
              "type": "object",
              "properties": {
                "passwordSecretNames": {
                  "description": "PasswordSecretNames contains a map of username to password-secret-name\nThis setting specifies a secret name for the credentials per specific users.\nWhen a deployment is created the operator will setup the user accounts\naccording to the credentials given by the secret. If the secret doesn't exist\nthe operator creates a secret with a random password.\nThere are two magic values for the secret name:\n- `None` specifies no action. This disables root password randomization. This is the default value. (Thus the root password is empty - not recommended)\n- `Auto` specifies automatic name generation, which is `\u003cdeploymentname\u003e-root-password`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "chaos": {
              "description": "ChaosSpec can be used for chaos-monkey testing of your ArangoDeployment",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Enabled switches the chaos monkey for a deployment on or off.",
                  "type": "boolean"
                },
                "interval": {
                  "description": "Interval is the time between events",
                  "type": "integer",
                  "format": "int64"
                },
                "kill-pod-probability": {
                  "description": "KillPodProbability is the chance of a pod being killed during an event",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "communicationMethod": {
              "description": "CommunicationMethod define communication method used in deployment",
              "type": "string",
              "enum": [
                "headless",
                "dns",
                "short-dns",
                "headless-dns",
                "ip"
              ]
            },
            "coordinators": {
              "description": "Coordinators contains specification for Coordinator pods running in deployment mode `Cluster` or `ActiveFailover`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "allowMemberRecreation": {
                  "description": "AllowMemberRecreation allows to recreate member.\nThis setting changes the member recreation logic based on group:\n- For Sync Masters, Sync Workers, Coordinator and DB-Servers it determines if a member can be recreated in case of failure (default `true`)\n- For Agents and Single this value is hardcoded to `false` and the value provided in spec is ignored.",
                  "type": "boolean"
                },
                "annotations": {
                  "description": "Annotations specified the annotations added to Pods in this group.\nAnnotations are merged with `spec.annotations`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "annotationsIgnoreList": {
                  "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "annotationsMode": {
                  "description": "AnnotationsMode Define annotations mode which should be use while overriding annotations",
                  "type": "string"
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "args": {
                  "description": "Args setting specifies additional command-line arguments passed to all servers of this group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "count": {
                  "description": "Count setting specifies the number of servers to start for the given group.\nFor the Agent group, this value must be a positive, odd number.\nThe default value is `3` for all groups except `single` (there the default is `1`\nfor `spec.mode: Single` and `2` for `spec.mode: ActiveFailover`).\nFor the `syncworkers` group, it is highly recommended to use the same number\nas for the `dbservers` group.",
                  "type": "integer",
                  "format": "int32"
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string"
                },
                "envs": {
                  "description": "Envs allow to specify additional envs in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "ephemeralVolumes": {
                  "description": "EphemeralVolumes keeps information about ephemeral volumes.",
                  "type": "object",
                  "properties": {
                    "apps": {
                      "description": "Apps define apps ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "temp": {
                      "description": "Temp define temp ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "exporterPort": {
                  "description": "ExporterPort define Port used by exporter",
                  "type": "integer",
                  "format": "int32"
                },
                "extendedRotationCheck": {
                  "description": "ExtendedRotationCheck extend checks for rotation",
                  "type": "boolean"
                },
                "externalPortEnabled": {
                  "description": "ExternalPortEnabled if external port should be enabled. If is set to false, ports needs to be exposed via sidecar. Only for ArangoD members",
                  "type": "boolean"
                },
                "indexMethod": {
                  "description": "IndexMethod define group Indexing method",
                  "type": "string",
                  "enum": [
                    "random",
                    "ordered"
                  ]
                },
                "initContainers": {
                  "description": "InitContainers Init containers specification",
                  "type": "object",
                  "properties": {
                    "containers": {
                      "description": "Containers contains list of containers",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "fieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "apiVersion": {
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resourceFieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "containerName": {
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "type": "object",
                                          "properties": {
                                            "": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "resource": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "secretKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "envFrom": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "type": "string"
                          },
                          "lifecycle": {
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "type": "string"
                                },
                                "hostPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "protocol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "readinessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityContext": {
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "drop": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "type": "boolean"
                              },
                              "procMount": {
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "type": "object",
                                "properties": {
                                  "localhostProfile": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "startupProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "stdin": {
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "type": "string"
                          },
                          "tty": {
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumeMounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mountPath": {
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "workingDir": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "mode": {
                      "description": "Mode keep container replace mode",
                      "type": "string"
                    }
                  }
                },
                "internalPort": {
                  "description": "InternalPort define port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "integer",
                  "format": "int32"
                },
                "internalPortProtocol": {
                  "description": "InternalPortProtocol define protocol of port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "string"
                },
                "labels": {
                  "description": "Labels specified the labels added to Pods in this group.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labelsIgnoreList": {
                  "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "labelsMode": {
                  "description": "LabelsMode Define labels mode which should be use while overriding labels",
                  "type": "string"
                },
                "maxCount": {
                  "description": "MaxCount specifies a maximum for the count of servers. If set, a specification is invalid if `count \u003e maxCount`.",
                  "type": "integer",
                  "format": "int32"
                },
                "memoryReservation": {
                  "description": "MemoryReservation determines system reservation of memory while calculating `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` value.\nIf this field is set, `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` is reduced by specified value in percents.\nAccepted Range \u003c0, 50\u003e. If value is outside accepted range, it is adjusted to the closest value.",
                  "type": "integer",
                  "format": "int64"
                },
                "minCount": {
                  "description": "MinCount specifies a minimum for the count of servers. If set, a specification is invalid if `count \u003c minCount`.",
                  "type": "integer",
                  "format": "int32"
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector setting specifies a set of labels to be used as `nodeSelector` for Pods of this node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "numactl": {
                  "description": "Numactl define Numactl options passed to the process",
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "Args define list of the numactl process",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "enabled": {
                      "description": "Enabled define if numactl should be enabled",
                      "type": "boolean"
                    },
                    "path": {
                      "description": "Path define numactl path within the container",
                      "type": "string"
                    }
                  }
                },
                "overrideDetectedNumberOfCores": {
                  "description": "OverrideDetectedNumberOfCores determines if number of cores should be overridden based on values in resources.\nIf is set to true and Container CPU Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES` to the value from the Container CPU Limits.",
                  "type": "boolean"
                },
                "overrideDetectedTotalMemory": {
                  "description": "OverrideDetectedTotalMemory determines if memory should be overridden based on values in resources.\nIf is set to true and Container Memory Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` to the value from the Container Memory Limits.",
                  "type": "boolean"
                },
                "podModes": {
                  "description": "PodModes define additional modes enabled on the Pod level",
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string"
                    },
                    "pid": {
                      "type": "string"
                    }
                  }
                },
                "port": {
                  "description": "Port define Port used by member",
                  "type": "integer",
                  "format": "int32"
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name\nWill be forwarded to the pod spec.",
                  "type": "string"
                },
                "probes": {
                  "description": "Probes specifies additional behaviour for probes",
                  "type": "object",
                  "properties": {
                    "ReadinessProbeDisabled": {
                      "description": "OldReadinessProbeDisabled if true readinessProbes are disabled\nDeprecated: This field is deprecated, keept only for backward compatibility.",
                      "type": "boolean"
                    },
                    "livenessProbeDisabled": {
                      "description": "LivenessProbeDisabled if set to true, the operator does not generate a liveness probe for new pods belonging to this group",
                      "type": "boolean"
                    },
                    "livenessProbeSpec": {
                      "description": "LivenessProbeSpec override liveness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "readinessProbeDisabled": {
                      "description": "ReadinessProbeDisabled override flag for probe disabled in good manner (lowercase) with backward compatibility",
                      "type": "boolean"
                    },
                    "readinessProbeSpec": {
                      "description": "ReadinessProbeSpec override readiness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "startupProbeDisabled": {
                      "description": "StartupProbeDisabled if true startupProbes are disabled",
                      "type": "boolean"
                    },
                    "startupProbeSpec": {
                      "description": "StartupProbeSpec override startup probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                },
                "pvcResizeMode": {
                  "description": "VolumeResizeMode specified resize mode for PVCs and PVs",
                  "type": "string",
                  "enum": [
                    "runtime",
                    "rotate"
                  ]
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "schedulerName": {
                  "description": "SchedulerName define scheduler name used for group",
                  "type": "string"
                },
                "securityContext": {
                  "description": "SecurityContext specifies additional `securityContext` settings in ArangoDB Pod definitions.\nThis is similar (but not fully compatible) to k8s SecurityContext definition.",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean"
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean"
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean"
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean"
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName setting specifies the `serviceAccountName` for the `Pods` created\nfor each server of this group. If empty, it defaults to using the\n`default` service account.\nUsing an alternative `ServiceAccount` is typically used to separate access rights.\nThe ArangoDB deployments need some very minimal access rights. With the\ndeployment of the operator, we grant the rights to 'get' all 'pod' resources.\nIf you are using a different service account, please grant these rights\nto that service account.",
                  "type": "string"
                },
                "shutdownDelay": {
                  "description": "ShutdownDelay define how long operator should delay finalizer removal after shutdown",
                  "type": "integer",
                  "format": "int32"
                },
                "shutdownMethod": {
                  "description": "ShutdownMethod describe procedure of member shutdown taken by Operator",
                  "type": "string"
                },
                "sidecarCoreNames": {
                  "description": "SidecarCoreNames is a list of sidecar containers which must run in the pod.\nSome names (e.g.: \"server\", \"worker\") are reserved, and they don't have any impact.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sidecars": {
                  "description": "Sidecars specifies a list of additional containers to be started",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "lifecycle": {
                        "type": "object",
                        "properties": {
                          "postStart": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "preStop": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "livenessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "ports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "type": "string"
                            },
                            "hostPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readinessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "type": "object",
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "startupProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "stdin": {
                        "type": "boolean"
                      },
                      "stdinOnce": {
                        "type": "boolean"
                      },
                      "terminationMessagePath": {
                        "type": "string"
                      },
                      "terminationMessagePolicy": {
                        "type": "string"
                      },
                      "tty": {
                        "type": "boolean"
                      },
                      "volumeDevices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "devicePath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    }
                  }
                },
                "storageClassName": {
                  "description": "StorageClassName specifies the classname for storage of the servers.",
                  "type": "string"
                },
                "terminationGracePeriodSeconds": {
                  "description": "TerminationGracePeriodSeconds override default TerminationGracePeriodSeconds for pods - via silent rotation",
                  "type": "integer",
                  "format": "int64"
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.\nBy default, suitable tolerations are set for the following keys with the `NoExecute` effect:\n- `node.kubernetes.io/not-ready`\n- `node.kubernetes.io/unreachable`\n- `node.alpha.kubernetes.io/unreachable` (will be removed in future version)\nFor more information on tolerations, consult the https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "volumeAllowShrink": {
                  "description": "Deprecated: VolumeAllowShrink allows shrink the volume",
                  "type": "boolean"
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate specifies a volumeClaimTemplate used by operator to create to volume claims for pods of this group.\nThis setting is not available for group `coordinators`, `syncmasters` \u0026 `syncworkers`.\nThe default value describes a volume with `8Gi` storage, `ReadWriteOnce` access mode and volume mode set to `PersistentVolumeFilesystem`.\nIf this field is not set and `spec.\u003cgroup\u003e.resources.requests.storage` is set, then a default volume claim\nwith size as specified by `spec.\u003cgroup\u003e.resources.requests.storage` will be created. In that case `storage`\nand `iops` is not forwarded to the pods resource requirements.",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "creationTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "deletionTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generateName": {
                          "type": "string"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldsType": {
                                "type": "string"
                              },
                              "fieldsV1": {
                                "type": "object"
                              },
                              "manager": {
                                "type": "string"
                              },
                              "operation": {
                                "type": "string"
                              },
                              "subresource": {
                                "type": "string"
                              },
                              "time": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "blockOwnerDeletion": {
                                "type": "boolean"
                              },
                              "controller": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resourceVersion": {
                          "type": "string"
                        },
                        "selfLink": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataSource": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "dataSourceRef": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requests": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "storageClassName": {
                          "type": "string"
                        },
                        "volumeMode": {
                          "type": "string"
                        },
                        "volumeName": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allocatedResources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastProbeTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "lastTransitionTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "type": "string"
                        },
                        "resizeStatus": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts define list of volume mounts mounted into server container",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "mountPropagation": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      },
                      "subPathExpr": {
                        "type": "string"
                      }
                    }
                  }
                },
                "volumes": {
                  "description": "Volumes define list of volumes mounted to pod",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        }
                      },
                      "emptyDir": {
                        "description": "EmptyDir",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string"
                          },
                          "sizeLimit": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "hostPath": {
                        "description": "HostPath",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name of volume",
                        "type": "string"
                      },
                      "persistentVolumeClaim": {
                        "description": "PersistentVolumeClaim",
                        "type": "object",
                        "properties": {
                          "claimName": {
                            "type": "string"
                          },
                          "readOnly": {
                            "type": "boolean"
                          }
                        }
                      },
                      "secret": {
                        "description": "Secret which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "database": {
              "description": "Database holds information about database state, like maintenance mode",
              "type": "object",
              "properties": {
                "maintenance": {
                  "description": "Maintenance manage maintenance mode on Cluster side. Requires maintenance feature to be enabled",
                  "type": "boolean"
                }
              }
            },
            "dbservers": {
              "description": "DBServers contains specification for DBServer pods running in deployment mode `Cluster` or `ActiveFailover`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "allowMemberRecreation": {
                  "description": "AllowMemberRecreation allows to recreate member.\nThis setting changes the member recreation logic based on group:\n- For Sync Masters, Sync Workers, Coordinator and DB-Servers it determines if a member can be recreated in case of failure (default `true`)\n- For Agents and Single this value is hardcoded to `false` and the value provided in spec is ignored.",
                  "type": "boolean"
                },
                "annotations": {
                  "description": "Annotations specified the annotations added to Pods in this group.\nAnnotations are merged with `spec.annotations`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "annotationsIgnoreList": {
                  "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "annotationsMode": {
                  "description": "AnnotationsMode Define annotations mode which should be use while overriding annotations",
                  "type": "string"
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "args": {
                  "description": "Args setting specifies additional command-line arguments passed to all servers of this group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "count": {
                  "description": "Count setting specifies the number of servers to start for the given group.\nFor the Agent group, this value must be a positive, odd number.\nThe default value is `3` for all groups except `single` (there the default is `1`\nfor `spec.mode: Single` and `2` for `spec.mode: ActiveFailover`).\nFor the `syncworkers` group, it is highly recommended to use the same number\nas for the `dbservers` group.",
                  "type": "integer",
                  "format": "int32"
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string"
                },
                "envs": {
                  "description": "Envs allow to specify additional envs in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "ephemeralVolumes": {
                  "description": "EphemeralVolumes keeps information about ephemeral volumes.",
                  "type": "object",
                  "properties": {
                    "apps": {
                      "description": "Apps define apps ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "temp": {
                      "description": "Temp define temp ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "exporterPort": {
                  "description": "ExporterPort define Port used by exporter",
                  "type": "integer",
                  "format": "int32"
                },
                "extendedRotationCheck": {
                  "description": "ExtendedRotationCheck extend checks for rotation",
                  "type": "boolean"
                },
                "externalPortEnabled": {
                  "description": "ExternalPortEnabled if external port should be enabled. If is set to false, ports needs to be exposed via sidecar. Only for ArangoD members",
                  "type": "boolean"
                },
                "indexMethod": {
                  "description": "IndexMethod define group Indexing method",
                  "type": "string",
                  "enum": [
                    "random",
                    "ordered"
                  ]
                },
                "initContainers": {
                  "description": "InitContainers Init containers specification",
                  "type": "object",
                  "properties": {
                    "containers": {
                      "description": "Containers contains list of containers",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "fieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "apiVersion": {
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resourceFieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "containerName": {
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "type": "object",
                                          "properties": {
                                            "": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "resource": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "secretKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "envFrom": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "type": "string"
                          },
                          "lifecycle": {
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "type": "string"
                                },
                                "hostPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "protocol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "readinessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityContext": {
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "drop": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "type": "boolean"
                              },
                              "procMount": {
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "type": "object",
                                "properties": {
                                  "localhostProfile": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "startupProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "stdin": {
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "type": "string"
                          },
                          "tty": {
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumeMounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mountPath": {
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "workingDir": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "mode": {
                      "description": "Mode keep container replace mode",
                      "type": "string"
                    }
                  }
                },
                "internalPort": {
                  "description": "InternalPort define port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "integer",
                  "format": "int32"
                },
                "internalPortProtocol": {
                  "description": "InternalPortProtocol define protocol of port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "string"
                },
                "labels": {
                  "description": "Labels specified the labels added to Pods in this group.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labelsIgnoreList": {
                  "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "labelsMode": {
                  "description": "LabelsMode Define labels mode which should be use while overriding labels",
                  "type": "string"
                },
                "maxCount": {
                  "description": "MaxCount specifies a maximum for the count of servers. If set, a specification is invalid if `count \u003e maxCount`.",
                  "type": "integer",
                  "format": "int32"
                },
                "memoryReservation": {
                  "description": "MemoryReservation determines system reservation of memory while calculating `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` value.\nIf this field is set, `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` is reduced by specified value in percents.\nAccepted Range \u003c0, 50\u003e. If value is outside accepted range, it is adjusted to the closest value.",
                  "type": "integer",
                  "format": "int64"
                },
                "minCount": {
                  "description": "MinCount specifies a minimum for the count of servers. If set, a specification is invalid if `count \u003c minCount`.",
                  "type": "integer",
                  "format": "int32"
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector setting specifies a set of labels to be used as `nodeSelector` for Pods of this node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "numactl": {
                  "description": "Numactl define Numactl options passed to the process",
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "Args define list of the numactl process",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "enabled": {
                      "description": "Enabled define if numactl should be enabled",
                      "type": "boolean"
                    },
                    "path": {
                      "description": "Path define numactl path within the container",
                      "type": "string"
                    }
                  }
                },
                "overrideDetectedNumberOfCores": {
                  "description": "OverrideDetectedNumberOfCores determines if number of cores should be overridden based on values in resources.\nIf is set to true and Container CPU Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES` to the value from the Container CPU Limits.",
                  "type": "boolean"
                },
                "overrideDetectedTotalMemory": {
                  "description": "OverrideDetectedTotalMemory determines if memory should be overridden based on values in resources.\nIf is set to true and Container Memory Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` to the value from the Container Memory Limits.",
                  "type": "boolean"
                },
                "podModes": {
                  "description": "PodModes define additional modes enabled on the Pod level",
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string"
                    },
                    "pid": {
                      "type": "string"
                    }
                  }
                },
                "port": {
                  "description": "Port define Port used by member",
                  "type": "integer",
                  "format": "int32"
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name\nWill be forwarded to the pod spec.",
                  "type": "string"
                },
                "probes": {
                  "description": "Probes specifies additional behaviour for probes",
                  "type": "object",
                  "properties": {
                    "ReadinessProbeDisabled": {
                      "description": "OldReadinessProbeDisabled if true readinessProbes are disabled\nDeprecated: This field is deprecated, keept only for backward compatibility.",
                      "type": "boolean"
                    },
                    "livenessProbeDisabled": {
                      "description": "LivenessProbeDisabled if set to true, the operator does not generate a liveness probe for new pods belonging to this group",
                      "type": "boolean"
                    },
                    "livenessProbeSpec": {
                      "description": "LivenessProbeSpec override liveness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "readinessProbeDisabled": {
                      "description": "ReadinessProbeDisabled override flag for probe disabled in good manner (lowercase) with backward compatibility",
                      "type": "boolean"
                    },
                    "readinessProbeSpec": {
                      "description": "ReadinessProbeSpec override readiness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "startupProbeDisabled": {
                      "description": "StartupProbeDisabled if true startupProbes are disabled",
                      "type": "boolean"
                    },
                    "startupProbeSpec": {
                      "description": "StartupProbeSpec override startup probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                },
                "pvcResizeMode": {
                  "description": "VolumeResizeMode specified resize mode for PVCs and PVs",
                  "type": "string",
                  "enum": [
                    "runtime",
                    "rotate"
                  ]
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "schedulerName": {
                  "description": "SchedulerName define scheduler name used for group",
                  "type": "string"
                },
                "securityContext": {
                  "description": "SecurityContext specifies additional `securityContext` settings in ArangoDB Pod definitions.\nThis is similar (but not fully compatible) to k8s SecurityContext definition.",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean"
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean"
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean"
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean"
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName setting specifies the `serviceAccountName` for the `Pods` created\nfor each server of this group. If empty, it defaults to using the\n`default` service account.\nUsing an alternative `ServiceAccount` is typically used to separate access rights.\nThe ArangoDB deployments need some very minimal access rights. With the\ndeployment of the operator, we grant the rights to 'get' all 'pod' resources.\nIf you are using a different service account, please grant these rights\nto that service account.",
                  "type": "string"
                },
                "shutdownDelay": {
                  "description": "ShutdownDelay define how long operator should delay finalizer removal after shutdown",
                  "type": "integer",
                  "format": "int32"
                },
                "shutdownMethod": {
                  "description": "ShutdownMethod describe procedure of member shutdown taken by Operator",
                  "type": "string"
                },
                "sidecarCoreNames": {
                  "description": "SidecarCoreNames is a list of sidecar containers which must run in the pod.\nSome names (e.g.: \"server\", \"worker\") are reserved, and they don't have any impact.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sidecars": {
                  "description": "Sidecars specifies a list of additional containers to be started",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "lifecycle": {
                        "type": "object",
                        "properties": {
                          "postStart": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "preStop": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "livenessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "ports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "type": "string"
                            },
                            "hostPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readinessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "type": "object",
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "startupProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "stdin": {
                        "type": "boolean"
                      },
                      "stdinOnce": {
                        "type": "boolean"
                      },
                      "terminationMessagePath": {
                        "type": "string"
                      },
                      "terminationMessagePolicy": {
                        "type": "string"
                      },
                      "tty": {
                        "type": "boolean"
                      },
                      "volumeDevices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "devicePath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    }
                  }
                },
                "storageClassName": {
                  "description": "StorageClassName specifies the classname for storage of the servers.",
                  "type": "string"
                },
                "terminationGracePeriodSeconds": {
                  "description": "TerminationGracePeriodSeconds override default TerminationGracePeriodSeconds for pods - via silent rotation",
                  "type": "integer",
                  "format": "int64"
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.\nBy default, suitable tolerations are set for the following keys with the `NoExecute` effect:\n- `node.kubernetes.io/not-ready`\n- `node.kubernetes.io/unreachable`\n- `node.alpha.kubernetes.io/unreachable` (will be removed in future version)\nFor more information on tolerations, consult the https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "volumeAllowShrink": {
                  "description": "Deprecated: VolumeAllowShrink allows shrink the volume",
                  "type": "boolean"
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate specifies a volumeClaimTemplate used by operator to create to volume claims for pods of this group.\nThis setting is not available for group `coordinators`, `syncmasters` \u0026 `syncworkers`.\nThe default value describes a volume with `8Gi` storage, `ReadWriteOnce` access mode and volume mode set to `PersistentVolumeFilesystem`.\nIf this field is not set and `spec.\u003cgroup\u003e.resources.requests.storage` is set, then a default volume claim\nwith size as specified by `spec.\u003cgroup\u003e.resources.requests.storage` will be created. In that case `storage`\nand `iops` is not forwarded to the pods resource requirements.",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "creationTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "deletionTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generateName": {
                          "type": "string"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldsType": {
                                "type": "string"
                              },
                              "fieldsV1": {
                                "type": "object"
                              },
                              "manager": {
                                "type": "string"
                              },
                              "operation": {
                                "type": "string"
                              },
                              "subresource": {
                                "type": "string"
                              },
                              "time": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "blockOwnerDeletion": {
                                "type": "boolean"
                              },
                              "controller": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resourceVersion": {
                          "type": "string"
                        },
                        "selfLink": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataSource": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "dataSourceRef": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requests": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "storageClassName": {
                          "type": "string"
                        },
                        "volumeMode": {
                          "type": "string"
                        },
                        "volumeName": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allocatedResources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastProbeTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "lastTransitionTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "type": "string"
                        },
                        "resizeStatus": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts define list of volume mounts mounted into server container",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "mountPropagation": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      },
                      "subPathExpr": {
                        "type": "string"
                      }
                    }
                  }
                },
                "volumes": {
                  "description": "Volumes define list of volumes mounted to pod",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        }
                      },
                      "emptyDir": {
                        "description": "EmptyDir",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string"
                          },
                          "sizeLimit": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "hostPath": {
                        "description": "HostPath",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name of volume",
                        "type": "string"
                      },
                      "persistentVolumeClaim": {
                        "description": "PersistentVolumeClaim",
                        "type": "object",
                        "properties": {
                          "claimName": {
                            "type": "string"
                          },
                          "readOnly": {
                            "type": "boolean"
                          }
                        }
                      },
                      "secret": {
                        "description": "Secret which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "disableIPv6": {
              "description": "DisableIPv6 setting prevents the use of IPv6 addresses by ArangoDB servers.\nThis setting cannot be changed after the deployment has been created.",
              "type": "boolean"
            },
            "downtimeAllowed": {
              "description": "DowntimeAllowed setting is used to allow automatic reconciliation actions that yield some downtime of the ArangoDB deployment.\nWhen this setting is set to false, no automatic action that may result in downtime is allowed.\nIf the need for such an action is detected, an event is added to the ArangoDeployment.\nOnce this setting is set to true, the automatic action is executed.\nOperations that may result in downtime are:\n- Rotating TLS CA certificate\nNote: It is still possible that there is some downtime when the Kubernetes cluster is down, or in a bad state, irrespective of the value of this setting.",
              "type": "boolean"
            },
            "environment": {
              "description": "Environment setting specifies the type of environment in which the deployment is created.",
              "type": "string",
              "enum": [
                "Development",
                "Production"
              ]
            },
            "externalAccess": {
              "description": "ExternalAccess holds configuration for the external access provided for the deployment.",
              "type": "object",
              "properties": {
                "advertisedEndpoint": {
                  "description": "AdvertisedEndpoint is passed to the coordinators/single servers for advertising a specific endpoint",
                  "type": "string"
                },
                "loadBalancerIP": {
                  "description": "LoadBalancerIP define optional IP used to configure a load-balancer on, in case of Auto or LoadBalancer type.\nIf you do not specify this setting, an IP will be chosen automatically by the load-balancer provisioner.",
                  "type": "string"
                },
                "loadBalancerSourceRanges": {
                  "description": "LoadBalancerSourceRanges define LoadBalancerSourceRanges used for LoadBalancer Service type\nIf specified and supported by the platform, this will restrict traffic through the cloud-provider\nload-balancer will be restricted to the specified client IPs. This field will be ignored if the\ncloud-provider does not support the feature.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "managedServiceNames": {
                  "description": "ManagedServiceNames keeps names of services which are not managed by KubeArangoDB.\nIt is only relevant when type of service is `managed`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "nodePort": {
                  "description": "NodePort define optional port used in case of Auto or NodePort type.\nThis setting is used when `spec.externalAccess.type` is set to `NodePort` or `Auto`.\nIf you do not specify this setting, a random port will be chosen automatically.",
                  "type": "integer",
                  "format": "int32"
                },
                "type": {
                  "description": "Type specifies the type of Service that will be created to provide access to the ArangoDB deployment from outside the Kubernetes cluster.",
                  "type": "string",
                  "enum": [
                    "Auto",
                    "None",
                    "LoadBalancer",
                    "NodePort"
                  ]
                }
              }
            },
            "features": {
              "description": "Features allows to configure feature flags",
              "type": "object",
              "properties": {
                "foxx.queues": {
                  "type": "boolean"
                }
              }
            },
            "id": {
              "description": "ServerIDGroupSpec contains the specification for Image Discovery image.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string"
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector specifies a set of selectors for nodes",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name",
                  "type": "string"
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "securityContext": {
                  "description": "SecurityContext specifies security context for group",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean"
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean"
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean"
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean"
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName specifies the name of the service account used for Pods in this group.",
                  "type": "string"
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "image": {
              "description": "Image specifies the docker image to use for all ArangoDB servers.\nIn a development environment this setting defaults to arangodb/arangodb:latest.\nFor production environments this is a required setting without a default value.\nIt is highly recommend to use explicit version (not latest) for production environments.",
              "type": "string"
            },
            "imageDiscoveryMode": {
              "description": "ImageDiscoveryMode specifies the image discovery mode.",
              "type": "string",
              "enum": [
                "kubelet",
                "direct"
              ]
            },
            "imagePullPolicy": {
              "description": "ImagePullPolicy specifies the pull policy for the docker image to use for all ArangoDB servers.",
              "type": "string",
              "enum": [
                "Always",
                "Never",
                "IfNotPresent"
              ]
            },
            "imagePullSecrets": {
              "description": "ImagePullSecrets specifies the list of image pull secrets for the docker image to use for all ArangoDB servers.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "labels": {
              "description": "Labels specifies the labels added to Pods in this group.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "labelsIgnoreList": {
              "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "labelsMode": {
              "description": "LabelsMode Define labels mode which should be use while overriding labels",
              "type": "string",
              "enum": [
                "disabled",
                "append",
                "replace"
              ]
            },
            "license": {
              "description": "License holds license settings",
              "type": "object",
              "properties": {
                "secretName": {
                  "description": "SecretName setting specifies the name of a kubernetes `Secret` that contains\nthe license key token used for enterprise images. This value is not used for\nthe Community Edition.",
                  "type": "string"
                }
              }
            },
            "lifecycle": {
              "description": "Lifecycle holds lifecycle configuration settings",
              "type": "object",
              "properties": {
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "memberPropagationMode": {
              "description": "MemberPropagationMode defines how changes to pod spec should be propogated.\nChanges to a pod’s configuration require a restart of that pod in almost all cases.\nPods are restarted eagerly by default, which can cause more restarts than desired, especially when updating arangod as well as the operator.\nThe propagation of the configuration changes can be deferred to the next restart, either triggered manually by the user or by another operation like an upgrade.\nThis reduces the number of restarts for upgrading both the server and the operator from two to one.",
              "type": "string",
              "enum": [
                "always",
                "on-restart"
              ]
            },
            "metrics": {
              "description": "Metrics holds metrics configuration settings",
              "type": "object",
              "properties": {
                "authentication": {
                  "type": "object",
                  "properties": {
                    "jwtTokenSecretName": {
                      "description": "JWTTokenSecretName contains the name of the JWT kubernetes secret used for authentication",
                      "type": "string"
                    }
                  }
                },
                "enabled": {
                  "description": "Enabled if this is set to `true`, the operator runs a sidecar container for\nevery Agent, DB-Server, Coordinator and Single server.",
                  "type": "boolean"
                },
                "image": {
                  "description": "deprecated",
                  "type": "string"
                },
                "mode": {
                  "description": "deprecated",
                  "type": "string"
                },
                "port": {
                  "type": "integer",
                  "format": "int32"
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "serviceMonitor": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                },
                "tls": {
                  "description": "TLS defines if TLS should be enabled on Metrics exporter endpoint.\nThis option will enable TLS only if TLS is enabled on ArangoDeployment,\notherwise `true` value will not take any effect.",
                  "type": "boolean"
                }
              }
            },
            "mode": {
              "description": "Mode specifies the type of ArangoDB deployment to create.",
              "type": "string",
              "enum": [
                "Cluster",
                "ActiveFailover",
                "Single"
              ],
              "x-kubernetes-validations": [
                {
                  "rule": "self.spec.mode == oldSelf.spec.mode",
                  "message": "field spec.mode is immutable"
                }
              ]
            },
            "networkAttachedVolumes": {
              "description": "NetworkAttachedVolumes\nIf set to `true`, a ResignLeadership operation will be triggered when a DB-Server pod is evicted (rather than a CleanOutServer operation).\nFurthermore, the pod will simply be redeployed on a different node, rather than cleaned and retired and replaced by a new member.\nYou must only set this option to true if your persistent volumes are “movable” in the sense that they can be mounted from a different k8s node, like in the case of network attached volumes.\nIf your persistent volumes are tied to a specific pod, you must leave this option on false.",
              "type": "boolean"
            },
            "rebalancer": {
              "description": "Rebalancer defines the rebalancer specification",
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "optimizers": {
                  "type": "object",
                  "properties": {
                    "leader": {
                      "type": "boolean"
                    }
                  }
                },
                "parallelMoves": {
                  "type": "integer",
                  "format": "int32"
                },
                "readers": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "deprecated does not work in Rebalancer V2\nCount Enable Shard Count machanism",
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "recovery": {
              "description": "Recovery specifies configuration related to cluster recovery.",
              "type": "object",
              "properties": {
                "autoRecover": {
                  "type": "boolean"
                }
              }
            },
            "restoreEncryptionSecret": {
              "description": "RestoreEncryptionSecret specifies optional name of secret which contains encryption key used for restore",
              "type": "string"
            },
            "restoreFrom": {
              "description": "RestoreFrom setting specifies a `ArangoBackup` resource name the cluster should be restored from.\nAfter a restore or failure to do so, the status of the deployment contains information about the restore operation in the restore key.\nIt will contain some of the following fields:\n- `requestedFrom`: name of the ArangoBackup used to restore from.\n- `message`: optional message explaining why the restore failed.\n- `state`: state indicating if the restore was successful or not. Possible values: Restoring, Restored, RestoreFailed\nIf the restoreFrom key is removed from the spec, the restore key is deleted as well.\nA new restore attempt is made if and only if either in the status restore is not set or if spec.restoreFrom and status.requestedFrom are different.",
              "type": "string"
            },
            "rocksdb": {
              "description": "RocksDB holds rocksdb-specific configuration settings",
              "type": "object",
              "properties": {
                "encryption": {
                  "type": "object",
                  "properties": {
                    "keySecretName": {
                      "description": "KeySecretName setting specifies the name of a Kubernetes `Secret` that contains an encryption key used for encrypting all data stored by ArangoDB servers.\nWhen an encryption key is used, encryption of the data in the cluster is enabled, without it encryption is disabled.\nThe default value is empty.\nThis requires the Enterprise Edition.\nThe encryption key cannot be changed after the cluster has been created.\nThe secret specified by this setting, must have a data field named 'key' containing an encryption key that is exactly 32 bytes long.",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "single": {
              "description": "Single contains specification for servers running in deployment mode `Single` or `ActiveFailover`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "allowMemberRecreation": {
                  "description": "AllowMemberRecreation allows to recreate member.\nThis setting changes the member recreation logic based on group:\n- For Sync Masters, Sync Workers, Coordinator and DB-Servers it determines if a member can be recreated in case of failure (default `true`)\n- For Agents and Single this value is hardcoded to `false` and the value provided in spec is ignored.",
                  "type": "boolean"
                },
                "annotations": {
                  "description": "Annotations specified the annotations added to Pods in this group.\nAnnotations are merged with `spec.annotations`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "annotationsIgnoreList": {
                  "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "annotationsMode": {
                  "description": "AnnotationsMode Define annotations mode which should be use while overriding annotations",
                  "type": "string"
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "args": {
                  "description": "Args setting specifies additional command-line arguments passed to all servers of this group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "count": {
                  "description": "Count setting specifies the number of servers to start for the given group.\nFor the Agent group, this value must be a positive, odd number.\nThe default value is `3` for all groups except `single` (there the default is `1`\nfor `spec.mode: Single` and `2` for `spec.mode: ActiveFailover`).\nFor the `syncworkers` group, it is highly recommended to use the same number\nas for the `dbservers` group.",
                  "type": "integer",
                  "format": "int32"
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string"
                },
                "envs": {
                  "description": "Envs allow to specify additional envs in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "ephemeralVolumes": {
                  "description": "EphemeralVolumes keeps information about ephemeral volumes.",
                  "type": "object",
                  "properties": {
                    "apps": {
                      "description": "Apps define apps ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "temp": {
                      "description": "Temp define temp ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "exporterPort": {
                  "description": "ExporterPort define Port used by exporter",
                  "type": "integer",
                  "format": "int32"
                },
                "extendedRotationCheck": {
                  "description": "ExtendedRotationCheck extend checks for rotation",
                  "type": "boolean"
                },
                "externalPortEnabled": {
                  "description": "ExternalPortEnabled if external port should be enabled. If is set to false, ports needs to be exposed via sidecar. Only for ArangoD members",
                  "type": "boolean"
                },
                "indexMethod": {
                  "description": "IndexMethod define group Indexing method",
                  "type": "string",
                  "enum": [
                    "random",
                    "ordered"
                  ]
                },
                "initContainers": {
                  "description": "InitContainers Init containers specification",
                  "type": "object",
                  "properties": {
                    "containers": {
                      "description": "Containers contains list of containers",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "fieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "apiVersion": {
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resourceFieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "containerName": {
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "type": "object",
                                          "properties": {
                                            "": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "resource": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "secretKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "envFrom": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "type": "string"
                          },
                          "lifecycle": {
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "type": "string"
                                },
                                "hostPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "protocol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "readinessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityContext": {
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "drop": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "type": "boolean"
                              },
                              "procMount": {
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "type": "object",
                                "properties": {
                                  "localhostProfile": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "startupProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "stdin": {
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "type": "string"
                          },
                          "tty": {
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumeMounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mountPath": {
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "workingDir": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "mode": {
                      "description": "Mode keep container replace mode",
                      "type": "string"
                    }
                  }
                },
                "internalPort": {
                  "description": "InternalPort define port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "integer",
                  "format": "int32"
                },
                "internalPortProtocol": {
                  "description": "InternalPortProtocol define protocol of port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "string"
                },
                "labels": {
                  "description": "Labels specified the labels added to Pods in this group.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labelsIgnoreList": {
                  "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "labelsMode": {
                  "description": "LabelsMode Define labels mode which should be use while overriding labels",
                  "type": "string"
                },
                "maxCount": {
                  "description": "MaxCount specifies a maximum for the count of servers. If set, a specification is invalid if `count \u003e maxCount`.",
                  "type": "integer",
                  "format": "int32"
                },
                "memoryReservation": {
                  "description": "MemoryReservation determines system reservation of memory while calculating `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` value.\nIf this field is set, `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` is reduced by specified value in percents.\nAccepted Range \u003c0, 50\u003e. If value is outside accepted range, it is adjusted to the closest value.",
                  "type": "integer",
                  "format": "int64"
                },
                "minCount": {
                  "description": "MinCount specifies a minimum for the count of servers. If set, a specification is invalid if `count \u003c minCount`.",
                  "type": "integer",
                  "format": "int32"
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector setting specifies a set of labels to be used as `nodeSelector` for Pods of this node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "numactl": {
                  "description": "Numactl define Numactl options passed to the process",
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "Args define list of the numactl process",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "enabled": {
                      "description": "Enabled define if numactl should be enabled",
                      "type": "boolean"
                    },
                    "path": {
                      "description": "Path define numactl path within the container",
                      "type": "string"
                    }
                  }
                },
                "overrideDetectedNumberOfCores": {
                  "description": "OverrideDetectedNumberOfCores determines if number of cores should be overridden based on values in resources.\nIf is set to true and Container CPU Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES` to the value from the Container CPU Limits.",
                  "type": "boolean"
                },
                "overrideDetectedTotalMemory": {
                  "description": "OverrideDetectedTotalMemory determines if memory should be overridden based on values in resources.\nIf is set to true and Container Memory Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` to the value from the Container Memory Limits.",
                  "type": "boolean"
                },
                "podModes": {
                  "description": "PodModes define additional modes enabled on the Pod level",
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string"
                    },
                    "pid": {
                      "type": "string"
                    }
                  }
                },
                "port": {
                  "description": "Port define Port used by member",
                  "type": "integer",
                  "format": "int32"
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name\nWill be forwarded to the pod spec.",
                  "type": "string"
                },
                "probes": {
                  "description": "Probes specifies additional behaviour for probes",
                  "type": "object",
                  "properties": {
                    "ReadinessProbeDisabled": {
                      "description": "OldReadinessProbeDisabled if true readinessProbes are disabled\nDeprecated: This field is deprecated, keept only for backward compatibility.",
                      "type": "boolean"
                    },
                    "livenessProbeDisabled": {
                      "description": "LivenessProbeDisabled if set to true, the operator does not generate a liveness probe for new pods belonging to this group",
                      "type": "boolean"
                    },
                    "livenessProbeSpec": {
                      "description": "LivenessProbeSpec override liveness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "readinessProbeDisabled": {
                      "description": "ReadinessProbeDisabled override flag for probe disabled in good manner (lowercase) with backward compatibility",
                      "type": "boolean"
                    },
                    "readinessProbeSpec": {
                      "description": "ReadinessProbeSpec override readiness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "startupProbeDisabled": {
                      "description": "StartupProbeDisabled if true startupProbes are disabled",
                      "type": "boolean"
                    },
                    "startupProbeSpec": {
                      "description": "StartupProbeSpec override startup probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                },
                "pvcResizeMode": {
                  "description": "VolumeResizeMode specified resize mode for PVCs and PVs",
                  "type": "string",
                  "enum": [
                    "runtime",
                    "rotate"
                  ]
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "schedulerName": {
                  "description": "SchedulerName define scheduler name used for group",
                  "type": "string"
                },
                "securityContext": {
                  "description": "SecurityContext specifies additional `securityContext` settings in ArangoDB Pod definitions.\nThis is similar (but not fully compatible) to k8s SecurityContext definition.",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean"
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean"
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean"
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean"
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName setting specifies the `serviceAccountName` for the `Pods` created\nfor each server of this group. If empty, it defaults to using the\n`default` service account.\nUsing an alternative `ServiceAccount` is typically used to separate access rights.\nThe ArangoDB deployments need some very minimal access rights. With the\ndeployment of the operator, we grant the rights to 'get' all 'pod' resources.\nIf you are using a different service account, please grant these rights\nto that service account.",
                  "type": "string"
                },
                "shutdownDelay": {
                  "description": "ShutdownDelay define how long operator should delay finalizer removal after shutdown",
                  "type": "integer",
                  "format": "int32"
                },
                "shutdownMethod": {
                  "description": "ShutdownMethod describe procedure of member shutdown taken by Operator",
                  "type": "string"
                },
                "sidecarCoreNames": {
                  "description": "SidecarCoreNames is a list of sidecar containers which must run in the pod.\nSome names (e.g.: \"server\", \"worker\") are reserved, and they don't have any impact.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sidecars": {
                  "description": "Sidecars specifies a list of additional containers to be started",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "lifecycle": {
                        "type": "object",
                        "properties": {
                          "postStart": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "preStop": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "livenessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "ports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "type": "string"
                            },
                            "hostPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readinessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "type": "object",
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "startupProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "stdin": {
                        "type": "boolean"
                      },
                      "stdinOnce": {
                        "type": "boolean"
                      },
                      "terminationMessagePath": {
                        "type": "string"
                      },
                      "terminationMessagePolicy": {
                        "type": "string"
                      },
                      "tty": {
                        "type": "boolean"
                      },
                      "volumeDevices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "devicePath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    }
                  }
                },
                "storageClassName": {
                  "description": "StorageClassName specifies the classname for storage of the servers.",
                  "type": "string"
                },
                "terminationGracePeriodSeconds": {
                  "description": "TerminationGracePeriodSeconds override default TerminationGracePeriodSeconds for pods - via silent rotation",
                  "type": "integer",
                  "format": "int64"
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.\nBy default, suitable tolerations are set for the following keys with the `NoExecute` effect:\n- `node.kubernetes.io/not-ready`\n- `node.kubernetes.io/unreachable`\n- `node.alpha.kubernetes.io/unreachable` (will be removed in future version)\nFor more information on tolerations, consult the https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "volumeAllowShrink": {
                  "description": "Deprecated: VolumeAllowShrink allows shrink the volume",
                  "type": "boolean"
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate specifies a volumeClaimTemplate used by operator to create to volume claims for pods of this group.\nThis setting is not available for group `coordinators`, `syncmasters` \u0026 `syncworkers`.\nThe default value describes a volume with `8Gi` storage, `ReadWriteOnce` access mode and volume mode set to `PersistentVolumeFilesystem`.\nIf this field is not set and `spec.\u003cgroup\u003e.resources.requests.storage` is set, then a default volume claim\nwith size as specified by `spec.\u003cgroup\u003e.resources.requests.storage` will be created. In that case `storage`\nand `iops` is not forwarded to the pods resource requirements.",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "creationTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "deletionTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generateName": {
                          "type": "string"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldsType": {
                                "type": "string"
                              },
                              "fieldsV1": {
                                "type": "object"
                              },
                              "manager": {
                                "type": "string"
                              },
                              "operation": {
                                "type": "string"
                              },
                              "subresource": {
                                "type": "string"
                              },
                              "time": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "blockOwnerDeletion": {
                                "type": "boolean"
                              },
                              "controller": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resourceVersion": {
                          "type": "string"
                        },
                        "selfLink": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataSource": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "dataSourceRef": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requests": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "storageClassName": {
                          "type": "string"
                        },
                        "volumeMode": {
                          "type": "string"
                        },
                        "volumeName": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allocatedResources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastProbeTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "lastTransitionTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "type": "string"
                        },
                        "resizeStatus": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts define list of volume mounts mounted into server container",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "mountPropagation": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      },
                      "subPathExpr": {
                        "type": "string"
                      }
                    }
                  }
                },
                "volumes": {
                  "description": "Volumes define list of volumes mounted to pod",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        }
                      },
                      "emptyDir": {
                        "description": "EmptyDir",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string"
                          },
                          "sizeLimit": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "hostPath": {
                        "description": "HostPath",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name of volume",
                        "type": "string"
                      },
                      "persistentVolumeClaim": {
                        "description": "PersistentVolumeClaim",
                        "type": "object",
                        "properties": {
                          "claimName": {
                            "type": "string"
                          },
                          "readOnly": {
                            "type": "boolean"
                          }
                        }
                      },
                      "secret": {
                        "description": "Secret which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "storageEngine": {
              "description": "StorageEngine specifies the type of storage engine used for all servers in the cluster.",
              "type": "string",
              "enum": [
                "RocksDB",
                "MMFiles"
              ],
              "x-kubernetes-validations": [
                {
                  "rule": "self.spec.storageEngine == oldSelf.spec.storageEngine",
                  "message": "field spec.storageEngine is immutable"
                }
              ]
            },
            "sync": {
              "description": "Sync holds Deployment-to-Deployment synchronization configuration settings",
              "type": "object",
              "properties": {
                "auth": {
                  "type": "object",
                  "properties": {
                    "clientCASecretName": {
                      "description": "ClientCASecretName setting specifies the name of a kubernetes `Secret` that contains\na PEM encoded CA certificate used for client certificate verification\nin all ArangoSync master servers.\nThis is a required setting when `spec.sync.enabled` is `true`.",
                      "type": "string"
                    },
                    "jwtSecretName": {
                      "description": "JWTSecretName setting specifies the name of a kubernetes `Secret` that contains\nthe JWT token used for accessing all ArangoSync master servers.\nWhen not specified, the `spec.auth.jwtSecretName` value is used.\nIf you specify a name of a `Secret` that does not exist, a random token is created\nand stored in a `Secret` with given name.",
                      "type": "string"
                    }
                  }
                },
                "enabled": {
                  "description": "Enabled setting enables/disables support for data center 2 data center\nreplication in the cluster. When enabled, the cluster will contain\na number of `syncmaster` \u0026 `syncworker` servers.",
                  "type": "boolean"
                },
                "externalAccess": {
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "advertisedEndpoint": {
                          "description": "AdvertisedEndpoint is passed to the coordinators/single servers for advertising a specific endpoint",
                          "type": "string"
                        },
                        "loadBalancerIP": {
                          "description": "LoadBalancerIP define optional IP used to configure a load-balancer on, in case of Auto or LoadBalancer type.\nIf you do not specify this setting, an IP will be chosen automatically by the load-balancer provisioner.",
                          "type": "string"
                        },
                        "loadBalancerSourceRanges": {
                          "description": "LoadBalancerSourceRanges define LoadBalancerSourceRanges used for LoadBalancer Service type\nIf specified and supported by the platform, this will restrict traffic through the cloud-provider\nload-balancer will be restricted to the specified client IPs. This field will be ignored if the\ncloud-provider does not support the feature.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "managedServiceNames": {
                          "description": "ManagedServiceNames keeps names of services which are not managed by KubeArangoDB.\nIt is only relevant when type of service is `managed`.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "nodePort": {
                          "description": "NodePort define optional port used in case of Auto or NodePort type.\nThis setting is used when `spec.externalAccess.type` is set to `NodePort` or `Auto`.\nIf you do not specify this setting, a random port will be chosen automatically.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "type": {
                          "description": "Type specifies the type of Service that will be created to provide access to the ArangoDB deployment from outside the Kubernetes cluster.",
                          "type": "string",
                          "enum": [
                            "Auto",
                            "None",
                            "LoadBalancer",
                            "NodePort"
                          ]
                        }
                      }
                    },
                    "accessPackageSecretNames": {
                      "description": "AccessPackageSecretNames setting specifies the names of zero of more `Secrets` that will be created by the deployment\noperator containing \"access packages\". An access package contains those `Secrets` that are needed\nto access the SyncMasters of this `ArangoDeployment`.\nBy removing a name from this setting, the corresponding `Secret` is also deleted.\nNote that to remove all access packages, leave an empty array in place (`[]`).\nCompletely removing the setting results in not modifying the list.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "masterEndpoint": {
                      "description": "MasterEndpoint setting specifies the master endpoint(s) advertised by the ArangoSync SyncMasters.\nIf not set, this setting defaults to:\n- If `spec.sync.externalAccess.loadBalancerIP` is set, it defaults to `https://\u003cload-balancer-ip\u003e:\u003c8629\u003e`.\n- Otherwise it defaults to `https://\u003csync-service-dns-name\u003e:\u003c8629\u003e`.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "image": {
                  "type": "string"
                },
                "monitoring": {
                  "type": "object",
                  "properties": {
                    "tokenSecretName": {
                      "description": "TokenSecretName setting specifies the name of a kubernetes `Secret` that contains\nthe bearer token used for accessing all monitoring endpoints of all arangod/arangosync servers.\nWhen not specified, no monitoring token is used.",
                      "type": "string"
                    }
                  }
                },
                "tls": {
                  "type": "object",
                  "properties": {
                    "altNames": {
                      "description": "AltNames setting specifies a list of alternate names that will be added to all generated\ncertificates. These names can be DNS names or email addresses.\nThe default value is empty.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "caSecretName": {
                      "description": "CASecretName  setting specifies the name of a kubernetes `Secret` that contains\na standard CA certificate + private key used to sign certificates for individual\nArangoDB servers.\nWhen no name is specified, it defaults to `\u003cdeployment-name\u003e-ca`.\nTo disable authentication, set this value to `None`.\nIf you specify a name of a `Secret` that does not exist, a self-signed CA certificate + key is created\nand stored in a `Secret` with given name.\nThe specified `Secret`, must contain the following data fields:\n- `ca.crt` PEM encoded public key of the CA certificate\n- `ca.key` PEM encoded private key of the CA certificate",
                      "type": "string"
                    },
                    "mode": {
                      "type": "string"
                    },
                    "sni": {
                      "type": "object",
                      "properties": {
                        "mapping": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "ttl": {
                      "description": "TTL setting specifies the time to live of all generated server certificates.\nWhen the server certificate is about to expire, it will be automatically replaced\nby a new one and the affected server will be restarted.\nNote: The time to live of the CA certificate (when created automatically)\nwill be set to 10 years.",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "syncmasters": {
              "description": "SyncMasters contains specification for Syncmaster pods running in deployment mode `Cluster`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "allowMemberRecreation": {
                  "description": "AllowMemberRecreation allows to recreate member.\nThis setting changes the member recreation logic based on group:\n- For Sync Masters, Sync Workers, Coordinator and DB-Servers it determines if a member can be recreated in case of failure (default `true`)\n- For Agents and Single this value is hardcoded to `false` and the value provided in spec is ignored.",
                  "type": "boolean"
                },
                "annotations": {
                  "description": "Annotations specified the annotations added to Pods in this group.\nAnnotations are merged with `spec.annotations`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "annotationsIgnoreList": {
                  "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "annotationsMode": {
                  "description": "AnnotationsMode Define annotations mode which should be use while overriding annotations",
                  "type": "string"
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "args": {
                  "description": "Args setting specifies additional command-line arguments passed to all servers of this group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "count": {
                  "description": "Count setting specifies the number of servers to start for the given group.\nFor the Agent group, this value must be a positive, odd number.\nThe default value is `3` for all groups except `single` (there the default is `1`\nfor `spec.mode: Single` and `2` for `spec.mode: ActiveFailover`).\nFor the `syncworkers` group, it is highly recommended to use the same number\nas for the `dbservers` group.",
                  "type": "integer",
                  "format": "int32"
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string"
                },
                "envs": {
                  "description": "Envs allow to specify additional envs in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "ephemeralVolumes": {
                  "description": "EphemeralVolumes keeps information about ephemeral volumes.",
                  "type": "object",
                  "properties": {
                    "apps": {
                      "description": "Apps define apps ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "temp": {
                      "description": "Temp define temp ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "exporterPort": {
                  "description": "ExporterPort define Port used by exporter",
                  "type": "integer",
                  "format": "int32"
                },
                "extendedRotationCheck": {
                  "description": "ExtendedRotationCheck extend checks for rotation",
                  "type": "boolean"
                },
                "externalPortEnabled": {
                  "description": "ExternalPortEnabled if external port should be enabled. If is set to false, ports needs to be exposed via sidecar. Only for ArangoD members",
                  "type": "boolean"
                },
                "indexMethod": {
                  "description": "IndexMethod define group Indexing method",
                  "type": "string",
                  "enum": [
                    "random",
                    "ordered"
                  ]
                },
                "initContainers": {
                  "description": "InitContainers Init containers specification",
                  "type": "object",
                  "properties": {
                    "containers": {
                      "description": "Containers contains list of containers",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "fieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "apiVersion": {
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resourceFieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "containerName": {
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "type": "object",
                                          "properties": {
                                            "": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "resource": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "secretKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "envFrom": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "type": "string"
                          },
                          "lifecycle": {
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "type": "string"
                                },
                                "hostPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "protocol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "readinessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityContext": {
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "drop": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "type": "boolean"
                              },
                              "procMount": {
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "type": "object",
                                "properties": {
                                  "localhostProfile": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "startupProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "stdin": {
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "type": "string"
                          },
                          "tty": {
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumeMounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mountPath": {
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "workingDir": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "mode": {
                      "description": "Mode keep container replace mode",
                      "type": "string"
                    }
                  }
                },
                "internalPort": {
                  "description": "InternalPort define port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "integer",
                  "format": "int32"
                },
                "internalPortProtocol": {
                  "description": "InternalPortProtocol define protocol of port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "string"
                },
                "labels": {
                  "description": "Labels specified the labels added to Pods in this group.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labelsIgnoreList": {
                  "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "labelsMode": {
                  "description": "LabelsMode Define labels mode which should be use while overriding labels",
                  "type": "string"
                },
                "maxCount": {
                  "description": "MaxCount specifies a maximum for the count of servers. If set, a specification is invalid if `count \u003e maxCount`.",
                  "type": "integer",
                  "format": "int32"
                },
                "memoryReservation": {
                  "description": "MemoryReservation determines system reservation of memory while calculating `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` value.\nIf this field is set, `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` is reduced by specified value in percents.\nAccepted Range \u003c0, 50\u003e. If value is outside accepted range, it is adjusted to the closest value.",
                  "type": "integer",
                  "format": "int64"
                },
                "minCount": {
                  "description": "MinCount specifies a minimum for the count of servers. If set, a specification is invalid if `count \u003c minCount`.",
                  "type": "integer",
                  "format": "int32"
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector setting specifies a set of labels to be used as `nodeSelector` for Pods of this node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "numactl": {
                  "description": "Numactl define Numactl options passed to the process",
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "Args define list of the numactl process",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "enabled": {
                      "description": "Enabled define if numactl should be enabled",
                      "type": "boolean"
                    },
                    "path": {
                      "description": "Path define numactl path within the container",
                      "type": "string"
                    }
                  }
                },
                "overrideDetectedNumberOfCores": {
                  "description": "OverrideDetectedNumberOfCores determines if number of cores should be overridden based on values in resources.\nIf is set to true and Container CPU Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES` to the value from the Container CPU Limits.",
                  "type": "boolean"
                },
                "overrideDetectedTotalMemory": {
                  "description": "OverrideDetectedTotalMemory determines if memory should be overridden based on values in resources.\nIf is set to true and Container Memory Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` to the value from the Container Memory Limits.",
                  "type": "boolean"
                },
                "podModes": {
                  "description": "PodModes define additional modes enabled on the Pod level",
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string"
                    },
                    "pid": {
                      "type": "string"
                    }
                  }
                },
                "port": {
                  "description": "Port define Port used by member",
                  "type": "integer",
                  "format": "int32"
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name\nWill be forwarded to the pod spec.",
                  "type": "string"
                },
                "probes": {
                  "description": "Probes specifies additional behaviour for probes",
                  "type": "object",
                  "properties": {
                    "ReadinessProbeDisabled": {
                      "description": "OldReadinessProbeDisabled if true readinessProbes are disabled\nDeprecated: This field is deprecated, keept only for backward compatibility.",
                      "type": "boolean"
                    },
                    "livenessProbeDisabled": {
                      "description": "LivenessProbeDisabled if set to true, the operator does not generate a liveness probe for new pods belonging to this group",
                      "type": "boolean"
                    },
                    "livenessProbeSpec": {
                      "description": "LivenessProbeSpec override liveness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "readinessProbeDisabled": {
                      "description": "ReadinessProbeDisabled override flag for probe disabled in good manner (lowercase) with backward compatibility",
                      "type": "boolean"
                    },
                    "readinessProbeSpec": {
                      "description": "ReadinessProbeSpec override readiness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "startupProbeDisabled": {
                      "description": "StartupProbeDisabled if true startupProbes are disabled",
                      "type": "boolean"
                    },
                    "startupProbeSpec": {
                      "description": "StartupProbeSpec override startup probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                },
                "pvcResizeMode": {
                  "description": "VolumeResizeMode specified resize mode for PVCs and PVs",
                  "type": "string",
                  "enum": [
                    "runtime",
                    "rotate"
                  ]
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "schedulerName": {
                  "description": "SchedulerName define scheduler name used for group",
                  "type": "string"
                },
                "securityContext": {
                  "description": "SecurityContext specifies additional `securityContext` settings in ArangoDB Pod definitions.\nThis is similar (but not fully compatible) to k8s SecurityContext definition.",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean"
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean"
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean"
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean"
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName setting specifies the `serviceAccountName` for the `Pods` created\nfor each server of this group. If empty, it defaults to using the\n`default` service account.\nUsing an alternative `ServiceAccount` is typically used to separate access rights.\nThe ArangoDB deployments need some very minimal access rights. With the\ndeployment of the operator, we grant the rights to 'get' all 'pod' resources.\nIf you are using a different service account, please grant these rights\nto that service account.",
                  "type": "string"
                },
                "shutdownDelay": {
                  "description": "ShutdownDelay define how long operator should delay finalizer removal after shutdown",
                  "type": "integer",
                  "format": "int32"
                },
                "shutdownMethod": {
                  "description": "ShutdownMethod describe procedure of member shutdown taken by Operator",
                  "type": "string"
                },
                "sidecarCoreNames": {
                  "description": "SidecarCoreNames is a list of sidecar containers which must run in the pod.\nSome names (e.g.: \"server\", \"worker\") are reserved, and they don't have any impact.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sidecars": {
                  "description": "Sidecars specifies a list of additional containers to be started",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "lifecycle": {
                        "type": "object",
                        "properties": {
                          "postStart": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "preStop": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "livenessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "ports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "type": "string"
                            },
                            "hostPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readinessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "type": "object",
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "startupProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "stdin": {
                        "type": "boolean"
                      },
                      "stdinOnce": {
                        "type": "boolean"
                      },
                      "terminationMessagePath": {
                        "type": "string"
                      },
                      "terminationMessagePolicy": {
                        "type": "string"
                      },
                      "tty": {
                        "type": "boolean"
                      },
                      "volumeDevices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "devicePath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    }
                  }
                },
                "storageClassName": {
                  "description": "StorageClassName specifies the classname for storage of the servers.",
                  "type": "string"
                },
                "terminationGracePeriodSeconds": {
                  "description": "TerminationGracePeriodSeconds override default TerminationGracePeriodSeconds for pods - via silent rotation",
                  "type": "integer",
                  "format": "int64"
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.\nBy default, suitable tolerations are set for the following keys with the `NoExecute` effect:\n- `node.kubernetes.io/not-ready`\n- `node.kubernetes.io/unreachable`\n- `node.alpha.kubernetes.io/unreachable` (will be removed in future version)\nFor more information on tolerations, consult the https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "volumeAllowShrink": {
                  "description": "Deprecated: VolumeAllowShrink allows shrink the volume",
                  "type": "boolean"
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate specifies a volumeClaimTemplate used by operator to create to volume claims for pods of this group.\nThis setting is not available for group `coordinators`, `syncmasters` \u0026 `syncworkers`.\nThe default value describes a volume with `8Gi` storage, `ReadWriteOnce` access mode and volume mode set to `PersistentVolumeFilesystem`.\nIf this field is not set and `spec.\u003cgroup\u003e.resources.requests.storage` is set, then a default volume claim\nwith size as specified by `spec.\u003cgroup\u003e.resources.requests.storage` will be created. In that case `storage`\nand `iops` is not forwarded to the pods resource requirements.",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "creationTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "deletionTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generateName": {
                          "type": "string"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldsType": {
                                "type": "string"
                              },
                              "fieldsV1": {
                                "type": "object"
                              },
                              "manager": {
                                "type": "string"
                              },
                              "operation": {
                                "type": "string"
                              },
                              "subresource": {
                                "type": "string"
                              },
                              "time": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "blockOwnerDeletion": {
                                "type": "boolean"
                              },
                              "controller": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resourceVersion": {
                          "type": "string"
                        },
                        "selfLink": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataSource": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "dataSourceRef": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requests": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "storageClassName": {
                          "type": "string"
                        },
                        "volumeMode": {
                          "type": "string"
                        },
                        "volumeName": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allocatedResources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastProbeTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "lastTransitionTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "type": "string"
                        },
                        "resizeStatus": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts define list of volume mounts mounted into server container",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "mountPropagation": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      },
                      "subPathExpr": {
                        "type": "string"
                      }
                    }
                  }
                },
                "volumes": {
                  "description": "Volumes define list of volumes mounted to pod",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        }
                      },
                      "emptyDir": {
                        "description": "EmptyDir",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string"
                          },
                          "sizeLimit": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "hostPath": {
                        "description": "HostPath",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name of volume",
                        "type": "string"
                      },
                      "persistentVolumeClaim": {
                        "description": "PersistentVolumeClaim",
                        "type": "object",
                        "properties": {
                          "claimName": {
                            "type": "string"
                          },
                          "readOnly": {
                            "type": "boolean"
                          }
                        }
                      },
                      "secret": {
                        "description": "Secret which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "syncworkers": {
              "description": "SyncWorkers contains specification for Syncworker pods running in deployment mode `Cluster`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity specified additional affinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "allowMemberRecreation": {
                  "description": "AllowMemberRecreation allows to recreate member.\nThis setting changes the member recreation logic based on group:\n- For Sync Masters, Sync Workers, Coordinator and DB-Servers it determines if a member can be recreated in case of failure (default `true`)\n- For Agents and Single this value is hardcoded to `false` and the value provided in spec is ignored.",
                  "type": "boolean"
                },
                "annotations": {
                  "description": "Annotations specified the annotations added to Pods in this group.\nAnnotations are merged with `spec.annotations`.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "annotationsIgnoreList": {
                  "description": "AnnotationsIgnoreList list regexp or plain definitions which annotations should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "annotationsMode": {
                  "description": "AnnotationsMode Define annotations mode which should be use while overriding annotations",
                  "type": "string"
                },
                "antiAffinity": {
                  "description": "AntiAffinity specified additional antiAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "podAffinityTerm": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaceSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaceSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "args": {
                  "description": "Args setting specifies additional command-line arguments passed to all servers of this group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "count": {
                  "description": "Count setting specifies the number of servers to start for the given group.\nFor the Agent group, this value must be a positive, odd number.\nThe default value is `3` for all groups except `single` (there the default is `1`\nfor `spec.mode: Single` and `2` for `spec.mode: ActiveFailover`).\nFor the `syncworkers` group, it is highly recommended to use the same number\nas for the `dbservers` group.",
                  "type": "integer",
                  "format": "int32"
                },
                "entrypoint": {
                  "description": "Entrypoint overrides container executable",
                  "type": "string"
                },
                "envs": {
                  "description": "Envs allow to specify additional envs in this group.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "ephemeralVolumes": {
                  "description": "EphemeralVolumes keeps information about ephemeral volumes.",
                  "type": "object",
                  "properties": {
                    "apps": {
                      "description": "Apps define apps ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "temp": {
                      "description": "Temp define temp ephemeral volume in case if `ephemeral-volumes` feature is enabled.",
                      "type": "object",
                      "properties": {
                        "size": {
                          "description": "Size define size of the ephemeral volume",
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "exporterPort": {
                  "description": "ExporterPort define Port used by exporter",
                  "type": "integer",
                  "format": "int32"
                },
                "extendedRotationCheck": {
                  "description": "ExtendedRotationCheck extend checks for rotation",
                  "type": "boolean"
                },
                "externalPortEnabled": {
                  "description": "ExternalPortEnabled if external port should be enabled. If is set to false, ports needs to be exposed via sidecar. Only for ArangoD members",
                  "type": "boolean"
                },
                "indexMethod": {
                  "description": "IndexMethod define group Indexing method",
                  "type": "string",
                  "enum": [
                    "random",
                    "ordered"
                  ]
                },
                "initContainers": {
                  "description": "InitContainers Init containers specification",
                  "type": "object",
                  "properties": {
                    "containers": {
                      "description": "Containers contains list of containers",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "env": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "fieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "apiVersion": {
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resourceFieldRef": {
                                      "type": "object",
                                      "properties": {
                                        "containerName": {
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "type": "object",
                                          "properties": {
                                            "": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "resource": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "secretKeyRef": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "envFrom": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                },
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image": {
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "type": "string"
                          },
                          "lifecycle": {
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "containerPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "type": "string"
                                },
                                "hostPort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "protocol": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "readinessProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "securityContext": {
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "drop": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "type": "boolean"
                              },
                              "procMount": {
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "type": "object",
                                "properties": {
                                  "localhostProfile": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "startupProbe": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "grpc": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "scheme": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "type": "object",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "type": "object",
                                        "properties": {
                                          "": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "failureThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "initialDelaySeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "terminationGracePeriodSeconds": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "stdin": {
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "type": "string"
                          },
                          "tty": {
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devicePath": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumeMounts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mountPath": {
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                },
                                "subPath": {
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "workingDir": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "mode": {
                      "description": "Mode keep container replace mode",
                      "type": "string"
                    }
                  }
                },
                "internalPort": {
                  "description": "InternalPort define port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "integer",
                  "format": "int32"
                },
                "internalPortProtocol": {
                  "description": "InternalPortProtocol define protocol of port used in internal communication, can be accessed over localhost via sidecar. Only for ArangoD members",
                  "type": "string"
                },
                "labels": {
                  "description": "Labels specified the labels added to Pods in this group.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labelsIgnoreList": {
                  "description": "LabelsIgnoreList list regexp or plain definitions which labels should be ignored",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "labelsMode": {
                  "description": "LabelsMode Define labels mode which should be use while overriding labels",
                  "type": "string"
                },
                "maxCount": {
                  "description": "MaxCount specifies a maximum for the count of servers. If set, a specification is invalid if `count \u003e maxCount`.",
                  "type": "integer",
                  "format": "int32"
                },
                "memoryReservation": {
                  "description": "MemoryReservation determines system reservation of memory while calculating `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` value.\nIf this field is set, `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` is reduced by specified value in percents.\nAccepted Range \u003c0, 50\u003e. If value is outside accepted range, it is adjusted to the closest value.",
                  "type": "integer",
                  "format": "int64"
                },
                "minCount": {
                  "description": "MinCount specifies a minimum for the count of servers. If set, a specification is invalid if `count \u003c minCount`.",
                  "type": "integer",
                  "format": "int32"
                },
                "nodeAffinity": {
                  "description": "NodeAffinity specified additional nodeAffinity settings in ArangoDB Pod definitions",
                  "type": "object",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "type": "object",
                      "properties": {
                        "nodeSelectorTerms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector setting specifies a set of labels to be used as `nodeSelector` for Pods of this node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "numactl": {
                  "description": "Numactl define Numactl options passed to the process",
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "Args define list of the numactl process",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "enabled": {
                      "description": "Enabled define if numactl should be enabled",
                      "type": "boolean"
                    },
                    "path": {
                      "description": "Path define numactl path within the container",
                      "type": "string"
                    }
                  }
                },
                "overrideDetectedNumberOfCores": {
                  "description": "OverrideDetectedNumberOfCores determines if number of cores should be overridden based on values in resources.\nIf is set to true and Container CPU Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES` to the value from the Container CPU Limits.",
                  "type": "boolean"
                },
                "overrideDetectedTotalMemory": {
                  "description": "OverrideDetectedTotalMemory determines if memory should be overridden based on values in resources.\nIf is set to true and Container Memory Limits are set, it sets Container Environment Variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY` to the value from the Container Memory Limits.",
                  "type": "boolean"
                },
                "podModes": {
                  "description": "PodModes define additional modes enabled on the Pod level",
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string"
                    },
                    "pid": {
                      "type": "string"
                    }
                  }
                },
                "port": {
                  "description": "Port define Port used by member",
                  "type": "integer",
                  "format": "int32"
                },
                "priorityClassName": {
                  "description": "PriorityClassName specifies a priority class name\nWill be forwarded to the pod spec.",
                  "type": "string"
                },
                "probes": {
                  "description": "Probes specifies additional behaviour for probes",
                  "type": "object",
                  "properties": {
                    "ReadinessProbeDisabled": {
                      "description": "OldReadinessProbeDisabled if true readinessProbes are disabled\nDeprecated: This field is deprecated, keept only for backward compatibility.",
                      "type": "boolean"
                    },
                    "livenessProbeDisabled": {
                      "description": "LivenessProbeDisabled if set to true, the operator does not generate a liveness probe for new pods belonging to this group",
                      "type": "boolean"
                    },
                    "livenessProbeSpec": {
                      "description": "LivenessProbeSpec override liveness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "readinessProbeDisabled": {
                      "description": "ReadinessProbeDisabled override flag for probe disabled in good manner (lowercase) with backward compatibility",
                      "type": "boolean"
                    },
                    "readinessProbeSpec": {
                      "description": "ReadinessProbeSpec override readiness probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "startupProbeDisabled": {
                      "description": "StartupProbeDisabled if true startupProbes are disabled",
                      "type": "boolean"
                    },
                    "startupProbeSpec": {
                      "description": "StartupProbeSpec override startup probe configuration",
                      "type": "object",
                      "properties": {
                        "failureThreshold": {
                          "description": "FailureThreshold when a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.\nGiving up means restarting the container.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "initialDelaySeconds": {
                          "description": "InitialDelaySeconds specifies number of seconds after the container has started before liveness or readiness probes are initiated.\nMinimum value is 0.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "PeriodSeconds How often (in seconds) to perform the probe.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "SuccessThreshold Minimum consecutive successes for the probe to be considered successful after having failed.\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "timeoutSeconds": {
                          "description": "TimeoutSeconds specifies number of seconds after which the probe times out\nMinimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                },
                "pvcResizeMode": {
                  "description": "VolumeResizeMode specified resize mode for PVCs and PVs",
                  "type": "string",
                  "enum": [
                    "runtime",
                    "rotate"
                  ]
                },
                "resources": {
                  "description": "Resources holds resource requests \u0026 limits",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "schedulerName": {
                  "description": "SchedulerName define scheduler name used for group",
                  "type": "string"
                },
                "securityContext": {
                  "description": "SecurityContext specifies additional `securityContext` settings in ArangoDB Pod definitions.\nThis is similar (but not fully compatible) to k8s SecurityContext definition.",
                  "type": "object",
                  "properties": {
                    "addCapabilities": {
                      "description": "AddCapabilities add new capabilities to containers",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation Controls whether a process can gain more privileges than its parent process.",
                      "type": "boolean"
                    },
                    "dropAllCapabilities": {
                      "description": "DropAllCapabilities specifies if capabilities should be dropped for this pod containers\nDeprecated: This field is added for backward compatibility. Will be removed in 1.1.0.",
                      "type": "boolean"
                    },
                    "fsGroup": {
                      "description": "FSGroup is a special supplemental group that applies to all containers in a pod.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "privileged": {
                      "description": "Privileged If true, runs container in privileged mode. Processes in privileged containers are\nessentially equivalent to root on the host.",
                      "type": "boolean"
                    },
                    "readOnlyRootFilesystem": {
                      "description": "ReadOnlyRootFilesystem if true, mounts the container's root filesystem as read-only.",
                      "type": "boolean"
                    },
                    "runAsGroup": {
                      "description": "RunAsGroup is the GID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "runAsNonRoot": {
                      "description": "RunAsNonRoot if true, indicates that the container must run as a non-root user.",
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "description": "RunAsUser is the UID to run the entrypoint of the container process.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    "supplementalGroups": {
                      "description": "SupplementalGroups is a list of groups applied to the first process run in each container, in addition to the container's primary GID,\nthe fsGroup (if specified), and group memberships defined in the container image for the uid of the container process.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "sysctls": {
                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nMap Value can be String or Int",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "serviceAccountName": {
                  "description": "ServiceAccountName setting specifies the `serviceAccountName` for the `Pods` created\nfor each server of this group. If empty, it defaults to using the\n`default` service account.\nUsing an alternative `ServiceAccount` is typically used to separate access rights.\nThe ArangoDB deployments need some very minimal access rights. With the\ndeployment of the operator, we grant the rights to 'get' all 'pod' resources.\nIf you are using a different service account, please grant these rights\nto that service account.",
                  "type": "string"
                },
                "shutdownDelay": {
                  "description": "ShutdownDelay define how long operator should delay finalizer removal after shutdown",
                  "type": "integer",
                  "format": "int32"
                },
                "shutdownMethod": {
                  "description": "ShutdownMethod describe procedure of member shutdown taken by Operator",
                  "type": "string"
                },
                "sidecarCoreNames": {
                  "description": "SidecarCoreNames is a list of sidecar containers which must run in the pod.\nSome names (e.g.: \"server\", \"worker\") are reserved, and they don't have any impact.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sidecars": {
                  "description": "Sidecars specifies a list of additional containers to be started",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "type": "object",
                                      "properties": {
                                        "": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "properties": {
                                    "": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "lifecycle": {
                        "type": "object",
                        "properties": {
                          "postStart": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "preStop": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "livenessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "ports": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "type": "string"
                            },
                            "hostPort": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readinessProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "seccompProfile": {
                            "type": "object",
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "startupProbe": {
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "grpc": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                }
                              },
                              "httpGet": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "scheme": {
                                    "type": "string"
                                  }
                                }
                              },
                              "tcpSocket": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "object",
                                    "properties": {
                                      "": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "failureThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "initialDelaySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "successThreshold": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "terminationGracePeriodSeconds": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      },
                      "stdin": {
                        "type": "boolean"
                      },
                      "stdinOnce": {
                        "type": "boolean"
                      },
                      "terminationMessagePath": {
                        "type": "string"
                      },
                      "terminationMessagePolicy": {
                        "type": "string"
                      },
                      "tty": {
                        "type": "boolean"
                      },
                      "volumeDevices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "devicePath": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    }
                  }
                },
                "storageClassName": {
                  "description": "StorageClassName specifies the classname for storage of the servers.",
                  "type": "string"
                },
                "terminationGracePeriodSeconds": {
                  "description": "TerminationGracePeriodSeconds override default TerminationGracePeriodSeconds for pods - via silent rotation",
                  "type": "integer",
                  "format": "int64"
                },
                "tolerations": {
                  "description": "Tolerations specifies the tolerations added to Pods in this group.\nBy default, suitable tolerations are set for the following keys with the `NoExecute` effect:\n- `node.kubernetes.io/not-ready`\n- `node.kubernetes.io/unreachable`\n- `node.alpha.kubernetes.io/unreachable` (will be removed in future version)\nFor more information on tolerations, consult the https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "volumeAllowShrink": {
                  "description": "Deprecated: VolumeAllowShrink allows shrink the volume",
                  "type": "boolean"
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate specifies a volumeClaimTemplate used by operator to create to volume claims for pods of this group.\nThis setting is not available for group `coordinators`, `syncmasters` \u0026 `syncworkers`.\nThe default value describes a volume with `8Gi` storage, `ReadWriteOnce` access mode and volume mode set to `PersistentVolumeFilesystem`.\nIf this field is not set and `spec.\u003cgroup\u003e.resources.requests.storage` is set, then a default volume claim\nwith size as specified by `spec.\u003cgroup\u003e.resources.requests.storage` will be created. In that case `storage`\nand `iops` is not forwarded to the pods resource requirements.",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "creationTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "deletionTimestamp": {
                          "type": "object",
                          "properties": {
                            "": {
                              "type": "object"
                            }
                          }
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "generateName": {
                          "type": "string"
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldsType": {
                                "type": "string"
                              },
                              "fieldsV1": {
                                "type": "object"
                              },
                              "manager": {
                                "type": "string"
                              },
                              "operation": {
                                "type": "string"
                              },
                              "subresource": {
                                "type": "string"
                              },
                              "time": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "namespace": {
                          "type": "string"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "blockOwnerDeletion": {
                                "type": "boolean"
                              },
                              "controller": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resourceVersion": {
                          "type": "string"
                        },
                        "selfLink": {
                          "type": "string"
                        },
                        "uid": {
                          "type": "string"
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataSource": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "dataSourceRef": {
                          "type": "object",
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "properties": {
                            "limits": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requests": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "storageClassName": {
                          "type": "string"
                        },
                        "volumeMode": {
                          "type": "string"
                        },
                        "volumeName": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allocatedResources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "lastProbeTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "lastTransitionTime": {
                                "type": "object",
                                "properties": {
                                  "": {
                                    "type": "object"
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "type": "string"
                        },
                        "resizeStatus": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts define list of volume mounts mounted into server container",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "mountPropagation": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      },
                      "subPathExpr": {
                        "type": "string"
                      }
                    }
                  }
                },
                "volumes": {
                  "description": "Volumes define list of volumes mounted to pod",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        }
                      },
                      "emptyDir": {
                        "description": "EmptyDir",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string"
                          },
                          "sizeLimit": {
                            "type": "object",
                            "properties": {
                              "": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "hostPath": {
                        "description": "HostPath",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name of volume",
                        "type": "string"
                      },
                      "persistentVolumeClaim": {
                        "description": "PersistentVolumeClaim",
                        "type": "object",
                        "properties": {
                          "claimName": {
                            "type": "string"
                          },
                          "readOnly": {
                            "type": "boolean"
                          }
                        }
                      },
                      "secret": {
                        "description": "Secret which should be mounted into pod",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "mode": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "optional": {
                            "type": "boolean"
                          },
                          "secretName": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "timeouts": {
              "description": "Timeouts object allows to configure various time-outs",
              "type": "object",
              "properties": {
                "actions": {
                  "description": "Actions keep map of the actions timeouts.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                },
                "maintenanceGracePeriod": {
                  "description": "MaintenanceGracePeriod action timeout",
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            },
            "timezone": {
              "description": "Timezone if specified, will set a timezone for deployment.\nMust be in format accepted by \"tzdata\", e.g. `America/New_York` or `Europe/London`",
              "type": "string"
            },
            "tls": {
              "description": "TLS holds TLS configuration settings",
              "type": "object",
              "properties": {
                "altNames": {
                  "description": "AltNames setting specifies a list of alternate names that will be added to all generated\ncertificates. These names can be DNS names or email addresses.\nThe default value is empty.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "caSecretName": {
                  "description": "CASecretName  setting specifies the name of a kubernetes `Secret` that contains\na standard CA certificate + private key used to sign certificates for individual\nArangoDB servers.\nWhen no name is specified, it defaults to `\u003cdeployment-name\u003e-ca`.\nTo disable authentication, set this value to `None`.\nIf you specify a name of a `Secret` that does not exist, a self-signed CA certificate + key is created\nand stored in a `Secret` with given name.\nThe specified `Secret`, must contain the following data fields:\n- `ca.crt` PEM encoded public key of the CA certificate\n- `ca.key` PEM encoded private key of the CA certificate",
                  "type": "string"
                },
                "mode": {
                  "type": "string"
                },
                "sni": {
                  "type": "object",
                  "properties": {
                    "mapping": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "ttl": {
                  "description": "TTL setting specifies the time to live of all generated server certificates.\nWhen the server certificate is about to expire, it will be automatically replaced\nby a new one and the affected server will be restarted.\nNote: The time to live of the CA certificate (when created automatically)\nwill be set to 10 years.",
                  "type": "string"
                }
              }
            },
            "topology": {
              "description": "Topology define topology adjustment details, Enterprise only",
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "label": {
                  "type": "string"
                },
                "zones": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "upgrade": {
              "description": "Upgrade allows to configure upgrade-related options",
              "type": "object",
              "properties": {
                "autoUpgrade": {
                  "description": "AutoUpgrade flag specifies if upgrade should be auto-injected, even if is not required (in case of stuck)",
                  "type": "boolean"
                },
                "debugLog": {
                  "description": "DebugLog flag specifies if containers running upgrade process should print more debugging information.\nThis applies only to init containers.",
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "x-kubernetes-preserve-unknown-fields": true
    }
  }
}
